{"version":3,"sources":["../../../../../../../../../gallery/src/js/app/modules/table/react/examples/DataBatch.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIqB,SAAS;;;;;;;;;;;sCAKhB;AACN,i/BAiCoF;aACvF;;;sCAES;AACN,uBAAO,CACH;AACI,sBAAE,EAAE,CAAC;AACL,6BAAS,EAAE,IAAI;AACf,yBAAK,EAAE,MAAM;AACb,wBAAI,EAAE,KAAK;iBACd,EACD;AACI,sBAAE,EAAE,CAAC;AACL,yBAAK,EAAE,KAAK;AACZ,wBAAI,EAAE,MAAM;iBACf,CACJ,CAAC;aACL;;;yCAEY;AACT,uBAAO;AACH,yBAAK,EAAE,YAAY;AACnB,wBAAI,EAAE,WAAW;iBACpB,CAAC;aACL;;;yCAEY;AACT,uBAAO;AACH,8BAAU,EAAE,IAAI;AAChB,+BAAW,EAAE,GAAG;;;AAGhB,kCAAc,EAAE,IAAI;AACpB,4BAAQ,EAAE,kBAAC,KAAK,EAAK;AACjB,+BAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;qBAC3C;AACD,8BAAU,EAAE,oBAAC,KAAK,EAAK;AACnB,+BAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;qBAC7C;iBACJ,CAAC;aACL;;;2CAEc;AACX,oBAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;oBACvB,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;oBAC3B,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;;AAEhC,uBAAO,iDAAO,IAAI,EAAE,IAAI,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,GAAG,CAAC;aACpE;;;gCAtFwB;AACrB,uBAAO,WAAW,CAAC;aACtB;;;;;;sBAHgB,SAAS","file":"DataBatch.react.js","sourcesContent":["import React from \"react\";\nimport Example from \"../Example\";\nimport Table from \"hui/react-components/table/Table\";\n\nexport default class DataBatch extends Example {\n    static get displayName() {\n        return \"DataBatch\";\n    }\n\n    getCode() {\n        return `import Table from \"hui-react/table/Table\"; // Be sure to optimize your layers! See the 'Design & API Document' link above.\n\nconst data: [\n        {\n            id: 1,              // An id property is required for batch mode\n            _selected: true,    // Select this row\n            first: \"John\",\n            last: \"Doe\"\n        },\n        {\n            id: 2,\n            first: \"Bob\",\n            last: \"Ross\"\n        }\n    ],\n    columns = {\n        first: \"First Name\",\n        last: \"Last Name\"\n    },\n    options = {\n        autoheight: true,\n        rowsPerPage: 50,\n\n        // Batch mode options\n        allowBatchMode: true,\n        onSelect: (event) => {\n            console.log(\"Item(s) selected!\", event);\n        },\n        onDeselect: (event) => {\n            console.log(\"Item(s) deselected!\", event);\n        }\n    };\n\nReactDOM.render(<Table data={data} columns={columns} options={options} />, document.body);`;\n    }\n\n    getData() {\n        return [\n            {\n                id: 1,              // An id property is required for batch mode\n                _selected: true,    // Select this row\n                first: \"John\",\n                last: \"Doe\"\n            },\n            {\n                id: 2,\n                first: \"Bob\",\n                last: \"Ross\"\n            }\n        ];\n    }\n\n    getColumns() {\n        return {\n            first: \"First Name\",\n            last: \"Last Name\"\n        };\n    }\n\n    getOptions() {\n        return {\n            autoheight: true,\n            rowsPerPage: 200,\n\n            // Batch mode options\n            allowBatchMode: true,\n            onSelect: (event) => {\n                console.log(\"Item(s) selected!\", event);\n            },\n            onDeselect: (event) => {\n                console.log(\"Item(s) deselected!\", event);\n            }\n        };\n    }\n\n    getComponent() {\n        const data = this.getData(),\n            options = this.getOptions(),\n            columns = this.getColumns();\n\n        return <Table data={data} columns={columns} options={options} />;\n    }\n}\n"]}