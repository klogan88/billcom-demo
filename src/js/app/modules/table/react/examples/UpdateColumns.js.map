{"version":3,"sources":["../../../../../../../../../gallery/src/js/app/modules/table/react/examples/UpdateColumns.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIqB,aAAa;;;;;gCACL;AACrB,uBAAO,eAAe,CAAC;aAC1B;;;AAED,+BAAY,KAAK,EAAE;;;sIACT,KAAK;;AAEX,kBAAK,KAAK,GAAG;AACT,mBAAG,EAAE,KAAK;AACV,sBAAM,EAAE,KAAK;aAChB,CAAC;;SACL;;;;sCAES;AACN,64EAkFiB;aACpB;;;sCAES;AACN,oBAAM,IAAI,GAAG,CACT;AACI,yBAAK,EAAE,MAAM;AACb,wBAAI,EAAE,KAAK;AACX,sBAAE,EAAE,CAAC;iBACR,EACD;AACI,yBAAK,EAAE,KAAK;AACZ,wBAAI,EAAE,MAAM;AACZ,sBAAE,EAAE,CAAC;iBACR,CACJ,CAAC;;AAEF,oBAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAChB,wBAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;AAChB,wBAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;iBAClB;;AAED,uBAAO,IAAI,CAAC;aACf;;;yCAEY;AACT,oBAAM,OAAO,GAAG;AACR,yBAAK,EAAE,YAAY;AACnB,wBAAI,EAAE,WAAW;iBACpB;oBACD,YAAY,GAAG,SAAf,YAAY,CAAI,KAAK,EAAK;AACtB,2BAAO;;0BAAK,SAAS,EAAC,IAAI;;wBAAU,KAAK,CAAC,OAAO,CAAC,EAAE;qBAAO,CAAC;iBAC/D;;;AAAC,AAGN,4BAAY,CAAC,WAAW,GAAG,QAAQ,CAAC;AACpC,4BAAY,CAAC,SAAS,GAAG;AACrB,2BAAO,EAAE,gBAAM,SAAS,CAAC,GAAG;iBAC/B,CAAC;;AAEF,oBAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACnB,2BAAO,CAAC,KAAK,GAAG,sBAAsB,CAAC;iBAC1C;AACD,oBAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAChB,2BAAO,CAAC,EAAE,GAAG,WAAW,CAAC;iBAC5B;AACD,oBAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACrC,2BAAO,CAAC,EAAE,GAAG;AACT,6BAAK,EAAE,WAAW;AAClB,oCAAY,EAAE,YAAY;qBAC7B,CAAC;iBACL;;AAED,uBAAO,OAAO,CAAC;aAClB;;;yCAEY;AACT,uBAAO;AACH,8BAAU,EAAE,IAAI;AAChB,+BAAW,EAAE,GAAG;iBACnB,CAAC;aACL;;;wCAEW;AACR,oBAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5C,qBAAK,CAAC,GAAG,GAAG,IAAI,CAAC;;AAEjB,oBAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACxB;;;2CAEc;AACX,oBAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5C,qBAAK,CAAC,GAAG,GAAG,KAAK,CAAC;;AAElB,oBAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACxB;;;2CAEc;AACX,oBAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5C,qBAAK,CAAC,MAAM,GAAG,IAAI,CAAC;;AAEpB,oBAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACxB;;;2CAEc;AACX,oBAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;oBACvB,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;oBAC3B,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;oBAC3B,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;oBACjC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;oBACvC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAE5C,uBACI;;;oBACI;;0BAAQ,SAAS,EAAC,WAAW,EAAC,OAAO,EAAE,KAAK,AAAC;;qBAAoB;oBACjE;;0BAAQ,SAAS,EAAC,WAAW,EAAC,OAAO,EAAE,QAAQ,AAAC;;qBAAuB;oBACvE;;0BAAQ,SAAS,EAAC,WAAW,EAAC,OAAO,EAAE,QAAQ,AAAC;;qBAAuB;oBACvE,iDAAO,IAAI,EAAE,IAAI,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,GAAG;iBACvD,CACR;aACL;;;;;;sBArMgB,aAAa","file":"UpdateColumns.js","sourcesContent":["import React from \"react\";\nimport Example from \"../Example\";\nimport Table from \"hui/react-components/table/Table\";\n\nexport default class UpdateColumns extends Example {\n    static get displayName() {\n        return \"UpdateColumns\";\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            add: false,\n            update: false\n        };\n    }\n\n    getCode() {\n        return `import Table from \"hui-react/table/Table\"; // Be sure to optimize your layers! See the 'Design & API Document' link above.\n\n// This example uses state. Click 'Usage' above to see the full example.\nconst getData() {\n        let data = [\n            {\n                first: \"John\",\n                last: \"Doe\",\n                id: 1\n            },\n            {\n                first: \"Bob\",\n                last: \"Ross\",\n                id: 2\n            }\n        ];\n\n        if (this.state.add) {\n            data[0].hr = 10;\n            data[1].hr = 2;\n        }\n\n        return data;\n    },\n    getColumns() {\n        let columns = {\n                first: \"First Name\",\n                last: \"Last Name\"\n            },\n            onRenderCell = (props) => {\n                return <div className=\"hr\">Homers: {props.rowData.hr}</div>;\n            };\n\n        // To keep the React debugging tools happy in dev mode\n        onRenderCell.displayName = \"Homers\";\n        onRenderCell.propTypes = {\n            rowData: React.PropTypes.any\n        };\n\n        if (this.state.update) {\n            columns.first = \"First Name (Updated)\";\n        }\n        if (this.state.add) {\n            columns.hr = \"Home runs\";\n        }\n        if (this.state.add && this.state.update) {\n            columns.hr = {\n                label: \"Home runs\",\n                onRenderCell: onRenderCell\n            };\n        }\n\n        return columns;\n    },\n    options = {\n        autoheight: true,\n        rowsPerPage: 50\n    },\n    addColumn() {\n        let state = Object.assign({}, this.state);\n        state.add = true;\n\n        this.setState(state);\n    },\n    removeColumn() {\n        let state = Object.assign({}, this.state);\n        state.add = false;\n\n        this.setState(state);\n    },\n    updateColumn() {\n        let state = Object.assign({}, this.state);\n        state.update = true;\n\n        this.setState(state);\n    };\n\nReactDOM.render(<div>\n    <button className=\"ha-button\" onClick={addColumn.bind(this)}>Add column</button>\n    <button className=\"ha-button\" onClick={removeColumn.bind(this)}>Remove column</button>\n    <button className=\"ha-button\" onClick={updateColumn.bind(this)}>Update column</button>\n    <Table data={getData()} columns={getColumns()} options={options} />\n</div>, document.body);`;\n    }\n\n    getData() {\n        const data = [\n            {\n                first: \"John\",\n                last: \"Doe\",\n                id: 1\n            },\n            {\n                first: \"Bob\",\n                last: \"Ross\",\n                id: 2\n            }\n        ];\n\n        if (this.state.add) {\n            data[0].hr = 10;\n            data[1].hr = 2;\n        }\n\n        return data;\n    }\n\n    getColumns() {\n        const columns = {\n                first: \"First Name\",\n                last: \"Last Name\"\n            },\n            onRenderCell = (props) => {\n                return <div className=\"hr\">Homers: {props.rowData.hr}</div>;\n            };\n\n        // To keep the React debugging tools happy in dev mode\n        onRenderCell.displayName = \"Homers\";\n        onRenderCell.propTypes = {\n            rowData: React.PropTypes.any\n        };\n\n        if (this.state.update) {\n            columns.first = \"First Name (Updated)\";\n        }\n        if (this.state.add) {\n            columns.hr = \"Home runs\";\n        }\n        if (this.state.add && this.state.update) {\n            columns.hr = {\n                label: \"Home runs\",\n                onRenderCell: onRenderCell\n            };\n        }\n\n        return columns;\n    }\n\n    getOptions() {\n        return {\n            autoheight: true,\n            rowsPerPage: 200\n        };\n    }\n\n    addColumn() {\n        const state = Object.assign({}, this.state);\n        state.add = true;\n\n        this.setState(state);\n    }\n\n    removeColumn() {\n        const state = Object.assign({}, this.state);\n        state.add = false;\n\n        this.setState(state);\n    }\n\n    updateColumn() {\n        const state = Object.assign({}, this.state);\n        state.update = true;\n\n        this.setState(state);\n    }\n\n    getComponent() {\n        const data = this.getData(),\n            options = this.getOptions(),\n            columns = this.getColumns(),\n            onAdd = this.addColumn.bind(this),\n            onRemove = this.removeColumn.bind(this),\n            onUpdate = this.updateColumn.bind(this);\n\n        return (\n            <div>\n                <button className=\"ha-button\" onClick={onAdd}>Add column</button>\n                <button className=\"ha-button\" onClick={onRemove}>Remove column</button>\n                <button className=\"ha-button\" onClick={onUpdate}>Update column</button>\n                <Table data={data} columns={columns} options={options} />\n            </div>\n        );\n    }\n}\n"]}