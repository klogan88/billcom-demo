{"version":3,"sources":["../../../../../../../../../gallery/src/js/app/modules/table/react/examples/CustomTableBarContent.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIqB,qBAAqB;;;;;gCACb;AACrB,uBAAO,uBAAuB,CAAC;aAClC;;;AAED,uCAAY,KAAK,EAAE;;;sJACT,KAAK;;AAEX,kBAAK,KAAK,GAAG;AACT,oBAAI,EAAE,MAAK,OAAO,CAAC,KAAK,CAAC;aAC5B,CAAC;;SACL;;;;sCAES;AACN,i+EAgEyG;aAC5G;;;oCAEO,UAAU,EAAE;AAChB,oBAAM,IAAI,GAAG,CACT;AACI,yBAAK,EAAE,MAAM;AACb,wBAAI,EAAE,KAAK;AACX,sBAAE,EAAE,CAAC;iBACR,CACJ,CAAC;;AAEF,oBAAI,CAAC,UAAU,EAAE;AACb,wBAAI,CAAC,IAAI,CAAC;AACN,6BAAK,EAAE,KAAK;AACZ,4BAAI,EAAE,MAAM;AACZ,0BAAE,EAAE,CAAC;qBACR,CAAC,CAAC;iBACN;;AAED,uBAAO,IAAI,CAAC;aACf;;;yCAEY;AACT,uBAAO;AACH,yBAAK,EAAE,YAAY;AACnB,wBAAI,EAAE,WAAW;iBACpB,CAAC;aACL;;;4CAEe;AACZ,oBAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5C,qBAAK,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEhC,oBAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACxB;;;0CAEa;AACV,qBAAK,CAAC,wBAAwB,CAAC,CAAC;aACnC;;;yCAEY;;;AACT,oBAAM,sBAAsB,GAAG,SAAzB,sBAAsB,GAAS;;;AAG7B,2BAAO;;0BAAQ,SAAS,EAAC,WAAW,EAAC,OAAO,EAAE,OAAK,aAAa,CAAC,IAAI,QAAM,AAAC;;qBAAgB;AAAC,iBAChG;oBACD,4BAA4B,GAAG,SAA/B,4BAA4B,GAAS;;;AAGjC,2BAAO,qCAAG,SAAS,EAAC,yBAAyB,EAAC,OAAO,EAAE,OAAK,WAAW,AAAC,GAAK;AAAC,iBACjF;;;AAAC,AAGN,sCAAsB,CAAC,WAAW,GAAG,wBAAwB,CAAC;AAC9D,4CAA4B,CAAC,WAAW,GAAG,8BAA8B,CAAC;;AAE1E,uBAAO;AACH,8BAAU,EAAE,IAAI;AAChB,+BAAW,EAAE,GAAG;;;AAGhB,0CAAsB,EAAE,sBAAsB;AAC9C,gDAA4B,EAAE,4BAA4B;iBAC7D,CAAC;aACL;;;2CAEc;AACX,oBAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;oBACxB,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;oBAC3B,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;;AAEhC,uBAAO,iDAAO,IAAI,EAAE,IAAI,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,GAAG,CAAC;aACpE;;;;;;sBAvJgB,qBAAqB","file":"CustomTableBarContent.js","sourcesContent":["import React from \"react\";\nimport Example from \"../Example\";\nimport Table from \"hui/react-components/table/Table\";\n\nexport default class CustomTableBarContent extends Example {\n    static get displayName() {\n        return \"CustomTableBarContent\";\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: this.getData(false)\n        };\n    }\n\n    getCode() {\n        return `import Table from \"hui-react/table/Table\"; // Be sure to optimize your layers! See the 'Design & API Document' link above.\n\n// This example uses state. Click 'Usage' above to see the full example.\nconst getData(isFiltered) {\n            let data = [\n                {\n                    first: \"John\",\n                    last: \"Doe\",\n                    id: 1\n                }\n            ];\n\n            if (!isFiltered) {\n                data.push({\n                    first: \"Bob\",\n                    last: \"Ross\",\n                    id: 2\n                });\n            }\n\n            return data;\n        },\n        getColumns() {\n            return {\n                first: \"First Name\",\n                last: \"Last Name\"\n            };\n        },\n        onFilterClick() {\n            let state = Object.assign({}, this.state);\n            state.data = this.getData(true);\n\n            // Render the table again with our new filtered data\n            this.setState(state);\n        },\n        onStarClick() {\n            alert(\"Custom action clicked!\");\n        },\n        getOptions() {\n            let onTableBarCustomRender = () => {\n                    // Return a React Element to add to the left side of the table bar.\n                    // You can fill in any kind of JSX you want here.\n                    return <button className=\"ha-button\" onClick={this.onFilterClick.bind(this)}>Filter</button>;\n                },\n                onTableBarCustomActionRender = () => {\n                    // Return a React Element to add to the right side of the table bar.\n                    // You can fill in any kind of JSX you want here.\n                    return <i className=\"hi page large hi-star-o\" onClick={this.onStarClick}></i>;\n                };\n\n            // To keep the React debugging tools happy in dev mode\n            onTableBarCustomRender.displayName = \"onTableBarCustomRender\";\n            onTableBarCustomActionRender.displayName = \"onTableBarCustomActionRender\";\n\n            return {\n                autoheight: true,\n                rowsPerPage: 200,\n\n                // Custom table bar content\n                onTableBarCustomRender: onTableBarCustomRender,\n                onTableBarCustomActionRender: onTableBarCustomActionRender\n            };\n        };\n\nReactDOM.render(<Table data={this.state.data} columns={getColumns()} options={getOptions()} />, document.body);`;\n    }\n\n    getData(isFiltered) {\n        const data = [\n            {\n                first: \"John\",\n                last: \"Doe\",\n                id: 1\n            }\n        ];\n\n        if (!isFiltered) {\n            data.push({\n                first: \"Bob\",\n                last: \"Ross\",\n                id: 2\n            });\n        }\n\n        return data;\n    }\n\n    getColumns() {\n        return {\n            first: \"First Name\",\n            last: \"Last Name\"\n        };\n    }\n\n    onFilterClick() {\n        const state = Object.assign({}, this.state);\n        state.data = this.getData(true);\n\n        this.setState(state);\n    }\n\n    onStarClick() {\n        alert(\"Custom action clicked!\");\n    }\n\n    getOptions() {\n        const onTableBarCustomRender = () => {\n                // Return a React Element to add to the left side of the table bar.\n                // You can fill in any kind of JSX you want here.\n                return <button className=\"ha-button\" onClick={this.onFilterClick.bind(this)}>Filter</button>;   // eslint-disable-line react/jsx-no-bind\n            },\n            onTableBarCustomActionRender = () => {\n                // Return a React Element to add to the right side of the table bar.\n                // You can fill in any kind of JSX you want here.\n                return <i className=\"hi page large hi-star-o\" onClick={this.onStarClick}></i>;  // eslint-disable-line react/jsx-handler-names\n            };\n\n        // To keep the React debugging tools happy in dev mode\n        onTableBarCustomRender.displayName = \"onTableBarCustomRender\";\n        onTableBarCustomActionRender.displayName = \"onTableBarCustomActionRender\";\n\n        return {\n            autoheight: true,\n            rowsPerPage: 200,\n\n            // Custom table bar content\n            onTableBarCustomRender: onTableBarCustomRender,\n            onTableBarCustomActionRender: onTableBarCustomActionRender\n        };\n    }\n\n    getComponent() {\n        const data = this.state.data,\n            options = this.getOptions(),\n            columns = this.getColumns();\n\n        return <Table data={data} columns={columns} options={options} />;\n    }\n}\n"]}