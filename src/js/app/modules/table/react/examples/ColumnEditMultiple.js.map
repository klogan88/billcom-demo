{"version":3,"sources":["../../../../../../../../../gallery/src/js/app/modules/table/react/examples/ColumnEditMultiple.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAKqB,kBAAkB;;;;;gCACV;AACrB,uBAAO,oBAAoB,CAAC;aAC/B;;;AAED,oCAAY,KAAK,EAAE;;;gJACT,KAAK;;AAEX,kBAAK,KAAK,GAAG;AACT,uBAAO,EAAE;AACL,8BAAU,EAAE,IAAI;AAChB,+BAAW,EAAE,EAAE;AACf,gCAAY,EAAE,IAAI;;;AAGlB,gCAAY,EAAE,IAAI;AAClB,4BAAQ,EAAE,KAAK;AACf,4BAAQ,EAAE,kBAAA,KAAK,EAAI;AACf,+BAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;qBACjD;AACD,0BAAM,EAAE,gBAAA,KAAK,EAAI;AACb,+BAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC;;;AAAC,AAG3C,8BAAK,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE;;;AAAC,AAGtB,4BAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAK,KAAK,CAAC,CAAC;AAC5C,6BAAK,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC/B,8BAAK,QAAQ,CAAC,KAAK,CAAC,CAAC;qBACxB;iBACJ;aACJ,CAAC;;SACL;;;;sCAES;AACN,wuDAgDgH;aACnH;;;4CAEe;AACZ,uBAAO,4BAAkB;AACrB,0BAAM,EAAE,uCAAuC;iBAClD,CAAC,CAAC;aACN;;;yCAEY;AACT,uBAAO;AACH,yBAAK,EAAE;AACH,6BAAK,EAAE,YAAY;AACnB,8BAAM,EAAE,eAAe;AAAA,qBAC1B;AACD,wBAAI,EAAE;AACF,6BAAK,EAAE,WAAW;AAClB,8BAAM,EAAE,eAAe;AAAA,qBAC1B;AACD,2BAAO,EAAE,WAAW;iBACvB,CAAC;aACL;;;6CAEgB,KAAK,EAAE;AACpB,oBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;;;2CAEc;AACX,oBAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;oBACnC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;oBAC3B,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO;oBAC5B,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEjD,uBAAO,iDAAO,UAAU,EAAE,UAAU,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,EAAC,GAAG,EAAE,SAAS,AAAC,GAAG,CAAC;aAChG;;;;;;sBAtHgB,kBAAkB","file":"ColumnEditMultiple.js","sourcesContent":["import React from \"react\";\nimport Example from \"../Example\";\nimport RequestMemory from \"dstore/RequestMemory\";\nimport Table from \"hui/react-components/table/Table\";\n\nexport default class ColumnEditMultiple extends Example {\n    static get displayName() {\n        return \"ColumnEditMultiple\";\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: {\n                autoheight: true,\n                rowsPerPage: 50,\n                showTableBar: true,\n\n                // Edit options and callbacks\n                showEditMode: true,\n                editable: false,\n                onCancel: event => {\n                    console.log(\"You canceled your edits\", event);\n                },\n                onSave: event => {\n                    console.log(\"You saved your edits\", event);\n\n                    // Save edits to the collection\n                    this.table.api.save();\n\n                    // Flip the editable state on the table\n                    const state = Object.assign({}, this.state);\n                    state.options.editable = false;\n                    this.setState(state);\n                }\n            }\n        };\n    }\n\n    getCode() {\n        return `import Table from \"hui-react/table/Table\"; // Be sure to optimize your layers! See the 'Design & API Document' link above.\nimport RequestMemory from \"dstore/RequestMemory\";\n\n// Load data from remote JSON file\n// @see https://github.com/SitePen/dstore/blob/master/src/RequestMemory.js\nconst collection = new RequestMemory({\n        target: \"js/app/modules/table/hof-batting.json\"\n    }),\n    columns = {\n        first: {\n            label: \"First Name\",\n            editor: \"ha-text-field\"     // Editor for this column\n        },\n        last: {\n            label: \"Last Name\",\n            editor: \"ha-text-field\"     // Editor for this column\n        },\n        totalHR: \"Home Runs\"\n    },\n\n    // State is being used for these options. See the full example for the constructor.\n    options = {\n        autoheight: true,\n        rowsPerPage: 50,\n        showTableBar: true,\n\n        // Edit options and callbacks\n        showEditMode: true,\n        editable: false,\n        onCancel: event => {\n            console.log(\"You canceled your edits\", event);\n        },\n        onSave: event => {\n            console.log(\"You saved your edits\", event);\n\n            // Save edits to the collection\n            this.table.api.save();\n\n            // Flip the editable state on the table\n            let state = Object.assign({}, this.state);\n            state.options.editable = false;\n            this.setState(state);\n        }\n    },\n    handleRef = (table) => {\n        this.table = table;         // Get a reference to the table component instance\n    };\n\nReactDOM.render(<Table collection={collection} columns={columns} options={options} ref={handleRef} />, document.body);`;\n    }\n\n    getCollection() {\n        return new RequestMemory({\n            target: \"js/app/modules/table/hof-batting.json\"\n        });\n    }\n\n    getColumns() {\n        return {\n            first: {\n                label: \"First Name\",\n                editor: \"ha-text-field\"     // Editor for this column\n            },\n            last: {\n                label: \"Last Name\",\n                editor: \"ha-text-field\"     // Editor for this column\n            },\n            totalHR: \"Home Runs\"\n        };\n    }\n\n    handleWrapperRef(table) {\n        this.table = table;\n    }\n\n    getComponent() {\n        const collection = this.getCollection(),\n            columns = this.getColumns(),\n            options = this.state.options,\n            handleRef = this.handleWrapperRef.bind(this);\n\n        return <Table collection={collection} columns={columns} options={options} ref={handleRef} />;\n    }\n}\n"]}