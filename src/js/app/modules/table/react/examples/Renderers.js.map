{"version":3,"sources":["../../../../../../../../../gallery/src/js/app/modules/table/react/examples/Renderers.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAMqB,SAAS;;;;;;;;;;;sCAKhB;AACN,2iEAoDqG;aACxG;;;4CAEe;AACZ,uBAAO,4BAAkB;AACrB,0BAAM,EAAE,uCAAuC;iBAClD,CAAC,CAAC;aACN;;;yCAEY;AACT,oBAAM,YAAY,GAAG,SAAf,YAAY,CAAI,KAAK,EAAK;;;;AAI5B,2BACI;;0BAAK,SAAS,EAAC,gBAAgB;wBAC3B,0DAAgB,OAAO,EAAE,KAAK,CAAC,OAAO,AAAC,EAAC,KAAK,EAAE,KAAK,CAAC,KAAK,AAAC,EAAC,OAAO,EAAE,KAAK,CAAC,OAAO,AAAC,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,AAAC,GAAG;qBAC1G,CACR;iBACL;;;AAAC,AAGF,4BAAY,CAAC,WAAW,GAAG,sBAAsB,CAAC;AAClD,4BAAY,CAAC,SAAS,GAAG;AACrB,2BAAO,EAAE,gBAAM,SAAS,CAAC,GAAG;AAC5B,yBAAK,EAAE,gBAAM,SAAS,CAAC,GAAG;AAC1B,2BAAO,EAAE,gBAAM,SAAS,CAAC,GAAG;AAC5B,0BAAM,EAAE,gBAAM,SAAS,CAAC,GAAG;iBAC9B,CAAC;;AAEF,uBAAO;AACH,yBAAK,EAAE,YAAY;AACnB,wBAAI,EAAE,WAAW;AACjB,0BAAM,EAAE;AACJ,6BAAK,EAAE,QAAQ;AACf,iCAAS,EAAE,mBAAA,KAAK,EAAI;;AAChB,mCAAU,KAAK,UAAO;yBACzB;qBACJ;AACD,2BAAO,EAAE;AACL,6BAAK,EAAE,aAAa;AACpB,oCAAY,EAAE,YAAY;AAC1B,gCAAQ,EAAE,KAAK;AAAA,qBAClB;iBACJ,CAAC;aACL;;;yCAEY;AACT,uBAAO;AACH,8BAAU,EAAE,IAAI;AAChB,+BAAW,EAAE,EAAE;AACf,gCAAY,EAAE,IAAI;iBACrB,CAAC;aACL;;;2CAEc;AACX,oBAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;oBACnC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;oBAC3B,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;;AAEhC,uBAAO,iDAAO,UAAU,EAAE,UAAU,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,EAAC,OAAO,EAAE,OAAO,AAAC,GAAG,CAAC;aAChF;;;gCAtHwB;AACrB,uBAAO,WAAW,CAAC;aACtB;;;;;;sBAHgB,SAAS","file":"Renderers.js","sourcesContent":["import React from \"react\";\nimport Example from \"../Example\";\nimport RequestMemory from \"dstore/RequestMemory\";\nimport BattingAverage from \"./common/BattingAverage\";\nimport Table from \"hui/react-components/table/Table\";\n\nexport default class Renderers extends Example {\n    static get displayName() {\n        return \"Renderers\";\n    }\n\n    getCode() {\n        return `import Table from \"hui-react/table/Table\"; // Be sure to optimize your layers! See the 'Design & API Document' link above.\nimport RequestMemory from \"dstore/RequestMemory\";\nimport BattingAverage from \"./common/BattingAverage\";\n\n// Load data from remote JSON file\n// @see https://github.com/SitePen/dstore/blob/master/src/RequestMemory.js\nconst collection = new RequestMemory({\n        target: \"js/app/modules/table/hof-batting.json\"\n    }),\n    getColumns() {\n        let onRenderCell = (props) => {\n            // Return a React Element to add to the cell\n            // You can fill in any kind of JSX you want here.\n            // @see BattingAverage.jsx\n            return (\n                <div className=\"battingAverage\">\n                    <BattingAverage rowData={props.rowData} value={props.value} options={props.options} column={props.column} />\n                </div>\n            );\n        };\n\n        // To keep the React debugging tools happy in dev mode\n        onRenderCell.displayName = \"BattingAverageCustom\";\n        onRenderCell.propTypes = {\n            rowData: React.PropTypes.any,\n            value: React.PropTypes.any,\n            options: React.PropTypes.any,\n            column: React.PropTypes.any\n        };\n\n        return {\n            first: \"First Name\",\n            last: \"Last Name\",\n            height: {\n                label: \"Height\",\n                formatter: value => {       // Custom formatter\n                    return \\`\\${value} in.\\`;\n                }\n            },\n            average: {                      // Derived column\n                label: \"Batting Avg\",\n                onRenderCell: onRenderCell, // Custom renderer\n                sortable: false             // It's custom so no sorting\n            }\n        };\n    },\n    options = {\n        autoheight: true,\n        rowsPerPage: 50,\n        showTableBar: true\n    };\n\nReactDOM.render(<Table collection={collection} columns={getColumns()} options={options} />, document.body);`;\n    }\n\n    getCollection() {\n        return new RequestMemory({\n            target: \"js/app/modules/table/hof-batting.json\"\n        });\n    }\n\n    getColumns() {\n        const onRenderCell = (props) => {\n            // Return a React Element to add to the cell\n            // You can fill in any kind of JSX you want here.\n            // @see BattingAverage.jsx\n            return (\n                <div className=\"battingAverage\">\n                    <BattingAverage rowData={props.rowData} value={props.value} options={props.options} column={props.column} />\n                </div>\n            );\n        };\n\n        // To keep the React debugging tools happy in dev mode\n        onRenderCell.displayName = \"BattingAverageCustom\";\n        onRenderCell.propTypes = {\n            rowData: React.PropTypes.any,\n            value: React.PropTypes.any,\n            options: React.PropTypes.any,\n            column: React.PropTypes.any\n        };\n\n        return {\n            first: \"First Name\",\n            last: \"Last Name\",\n            height: {\n                label: \"Height\",\n                formatter: value => {       // Custom formatter\n                    return `${value} in.`;\n                }\n            },\n            average: {                      // Derived column\n                label: \"Batting Avg\",\n                onRenderCell: onRenderCell, // Custom renderer\n                sortable: false             // It's custom so no sorting\n            }\n        };\n    }\n\n    getOptions() {\n        return {\n            autoheight: true,\n            rowsPerPage: 50,\n            showTableBar: true\n        };\n    }\n\n    getComponent() {\n        const collection = this.getCollection(),\n            columns = this.getColumns(),\n            options = this.getOptions();\n\n        return <Table collection={collection} columns={columns} options={options} />;\n    }\n}\n"]}