define(['handlebars'], function(Handlebars) {

this["JST"] = this["JST"] || {};

this["JST"]["button.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Buttons\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n        <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Button.md\" target=\"_blank\">Design & API Document</a>\n        </div>\n    </div>\n\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;button class=\"ha-button\"&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button ha-button-dark\"&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button ha-button-primary\"&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button ha-button-primary ha-button-dark\"&gt;&lt;/button&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"usage\">\n        <header class=\"title\"><a>Classes</a></header>\n        <table class=\"buttonTable\">\n            <tbody>\n                <tr>\n                    <th>Type</th>\n                    <th>Associated Classes</th>\n                </tr>\n                <tr>\n                    <td>Secondary/Default button</td>\n                    <td>ha-button</td>\n                </tr>\n                <tr>\n                    <td>Secondary/Default button with Icon</td>\n                    <td>ha-button, hi-icon-button</td>\n                </tr>\n                <tr>\n                    <td>Secondary/Default button with Dark Background</td>\n                    <td>ha-button, ha-button-dark</td>\n                </tr>\n                <tr>\n                    <td>Secondary/Default button with Dark Background and Icon</td>\n                    <td>ha-button, ha-button-dark, hi-icon-button</td>\n                </tr>\n                <tr>\n                    <td>Primary button</td>\n                    <td>ha-button, ha-button-primary</td>\n                </tr>\n                <tr>\n                    <td>Primary button with Icon</td>\n                    <td>ha-button, ha-button-primary, hi-icon-button</td>\n                </tr>\n                <tr>\n                    <td>Primary button with Dark Background</td>\n                    <td>ha-button, ha-button-primary, ha-button-dark</td>\n                </tr>\n                <tr>\n                    <td>Primary button with Dark Background and Icon</td>\n                    <td>ha-button, ha-button-primary, ha-button-dark, hi-icon-button</td>\n                </tr>\n            </tbody>\n        </table>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n\n        <h3 class=\"subtitle\"> Secondary Button (default)</h3>\n        <div>\n            <button class=\"ha-button\" disabled>Button</button>\n            <button class=\"ha-button\">Button</button>\n            <button class=\"ha-button hi-icon-button\">\n                <i class=\"hi hi-camera\"></i>Button\n            </button>\n        </div>\n\n        <h3 class=\"subtitle\"> Secondary Button (default) <small> Dark background</small> </h3>\n        <div style=\"background:#193048;padding:10px;\">\n            <button class=\"ha-button ha-button-dark\" disabled>Button</button>\n            <button class=\"ha-button ha-button-dark\">Button</button>\n            <button class=\"ha-button ha-button-dark hi-icon-button\">\n                <i class=\"hi hi-accountant\"></i>Button\n            </button>\n        </div>\n\n        <h3 class=\"subtitle\"> Primary Button</h3>\n        <div>\n            <button class=\"ha-button ha-button-primary\" disabled>Button</button>\n            <button class=\"ha-button ha-button-primary\">Button</button>\n            <button class=\"ha-button ha-button-primary hi-icon-button\">\n                <i class=\"hi hi-accountant\"></i>Button\n            </button>\n        </div>\n\n        <h3 class=\"subtitle\"> Primary Button <small> Dark background</small> </h3>\n        <div style=\"background:#193048;padding:10px;\">\n            <button class=\"ha-button ha-button-primary ha-button-dark\" disabled>Button</button>\n            <button class=\"ha-button ha-button-primary ha-button-dark\">Button</button>\n            <button class=\"ha-button ha-button-primary ha-button-dark hi-icon-button\">\n                <i class=\"hi hi-accountant\"></i>Button\n            </button>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"plain\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;button&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button-primary\"&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button-dark\"&gt;&lt;/button&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n\n        <h3 class=\"subtitle\"> Secondary Button (default)</h3>\n        <div>\n            <button disabled>Button</button>\n            <button>Button</button>\n            <button class=\"hi-icon-button\">\n                <i class=\"hi hi-camera\"></i>\n                Button\n            </button>\n        </div>\n\n        <h3 class=\"subtitle\"> Secondary Button (default) <small> Dark background</small> </h3>\n        <div style=\"background:#193048;padding:10px;\">\n            <button class=\"ha-button-dark\" disabled>Button</button>\n            <button class=\"ha-button-dark\">Button</button>\n            <button class=\"ha-button-dark hi-icon-button\">\n                <i class=\"hi hi-accountant\"></i>\n                Button\n            </button>\n        </div>\n\n        <h3 class=\"subtitle\"> Primary Button</h3>\n        <div>\n            <button class=\"ha-button-primary\" disabled>Button</button>\n            <button class=\"ha-button-primary\">Button</button>\n            <button class=\"ha-button-primary hi-icon-button\">\n                <i class=\"hi hi-accountant\"></i>\n                Button\n            </button>\n        </div>\n\n        <h3 class=\"subtitle\"> Primary Button <small> Dark background</small> </h3>\n        <div style=\"background:#193048;padding:10px;\">\n            <button class=\"ha-button-primary ha-button-dark\" disabled>Button</button>\n            <button class=\"ha-button-primary ha-button-dark\">Button</button>\n            <button class=\"ha-button-primary ha-button-dark hi-icon-button\">\n                <i class=\"hi hi-accountant\"></i>\n                Button\n            </button>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["card-discovery-large.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Card Discovery Large Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/CardDiscoveryLarge.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                   &lt;ha-card-discovery-large titleText=&quot;Some Title&quot; dismissible&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- node or array of nodes --&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;Your message or child html elements here\n                        &nbsp;&nbsp;&lt;/section&gt;\n                        &nbsp;&nbsp;&lt;footer&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-footer-buttons&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- add buttons here, in order tertiary (if applicable), secondary, and primary --&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;Secondary&lt;/button&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Primary&lt;/button&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-footer-buttons&gt;\n                        &nbsp;&nbsp;&lt;/footer&gt;\n                    &lt;/ha-card-discovery-large&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var node = document.createElement(\"ha-card-discovery-large\");\n                    node.titleText = \"Title\";\n                    node.dismissible = true;\n                    node.section = \"Now that we've connected to your bank, let's get your customers into Quickbooks\";\n                    // Create an array of buttons, in order: tertiary (if applicable), secondary, and primary\n                    footerButtons = document.createElemement('ha-footer-buttons');\n                    footerButtons.appendChild(buttonTertiary);\n                    footerButtons.appendChild(buttonSecondary);\n                    footerButtons.appendChild(buttonPrimary);\n                    // footer can have array of buttons or a simple text\n                    node.footer = footerButtons;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\"></div>\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\"></div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n\n        <div class=\"highlight\">\n            <pre>\n                    <code class=\"language-html\" data-lang=\"html\">\n                        &lt;HACardDiscoveryLarge\n                            title=&#39;Look a title! &amp; it&quot;s dismissible!&#39; dismissible={true} show={this.state.showCardDiscoveryLarge}&gt;\n                            &nbsp;&nbsp;&lt;HASection&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;Let&#39;s put something here...\n                            &nbsp;&nbsp;&lt;/HASection&gt;\n                            &nbsp;&nbsp;&lt;HAFooter&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-footer-buttons&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- add buttons here, in order tertiary (if applicable), secondary, and primary --&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;Secondary&lt;/button&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Primary&lt;/button&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-footer-buttons&gt;\n                            &nbsp;&nbsp;&lt;/HAFooter&gt;\n                        &lt;/HACardDiscoveryLarge&gt;\n                    </code>\n                </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"reactWay\"></div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["checkbox.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Checkbox Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\" data-automation-id=\"btn_segmented\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Checkbox.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-checkbox-group name=\"Checkbox Group\" label=\"Checkbox Group\"&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox label=\"Enabled Checkbox\" checked&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox disabled checked&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox disabled&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox readonly&gt;&lt;/ha-checkbox&gt;\n                    &lt;/ha-checkbox-group&gt;\n\n                    &lt;ha-checkbox-group name=\"Checkbox Group\" label=\"Checkbox Group with requried amount = 2\" minRequired=\"2\" required&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox label=\"Enabled Checkbox\" checked&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox disabled checked&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox disabled&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox readonly&gt;&lt;/ha-checkbox&gt;\n                    &lt;/ha-checkbox-group&gt;\n\n                    &lt;ha-checkbox-group class=\"ha-inline\" name=\"Checkbox Group\" label=\"Checkbox Group\"&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox label=\"Enabled Checkbox\" checked&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox disabled checked&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox disabled&gt;&lt;/ha-checkbox&gt;\n                        &nbsp;&nbsp;&lt;ha-checkbox readonly&gt;&lt;/ha-checkbox&gt;\n                    &lt;/ha-checkbox-group&gt;\n\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var checkbox = document.createElement(\"ha-checkbox\");\n                    checkbox.label = \"Some Label\";\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HACheckboxGroup name=\"Checkbox Group\" label=\"Checkbox Group\"&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Enabled Checkbox (default checked)\" checked&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Disabled Checkbox (default checked)\" disabled checked&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Disabled Checkbox\" disabled&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Enabled Checkbox\"&gt;&lt;/HACheckbox&gt;\n                    &lt;/HACheckboxGroup&gt;\n\n                    &lt;HACheckboxGroup className=\"ha-inline\" name=\"Checkbox Group\" label=\"Checkbox Group\"&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Enabled Checkbox\" checked&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Disabled Checkbox (default checked)\" disabled checked&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Disabled Checkbox\" disabled&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Enabled Checkbox\"&gt;&lt;/HACheckbox&gt;\n                    &lt;/HACheckboxGroup&gt;\n\n                    &lt;HACheckboxGroup name=\"Checkbox Group\" label=\"Checkbox Group with requried amount = 2\" minRequired=\"2\" required={true}&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Enabled Checkbox\" checked&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Disabled Checkbox (default checked)\" disabled checked&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Disabled Checkbox\" disabled&gt;&lt;/HACheckbox&gt;\n                        &nbsp;&nbsp;&lt;HACheckbox label=\"Enabled Checkbox\"&gt;&lt;/HACheckbox&gt;\n                    &lt;/HACheckboxGroup&gt;\n\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"reactWay\"></div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["combo-button.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Combo Button Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/ComboButton.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    NEW WAY:\n\n                    &lt;ha-combo-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                    &lt;/ha-combo-button&gt;\n\n                    &lt;ha-combo-button class=\"ha-button-primary\" label=\"Create New\" disabled&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                    &lt;/ha-combo-button&gt;\n\n\n                    &lt;ha-combo-button class=\"ha-button-dark\" label=\"Save\" &gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"SendValue\"&gt;Send&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"CreateNewValue\"&gt;Create new&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"DoneValue\"&gt;Done&lt;/ha-item&gt;\n                    &lt;/ha-combo-button&gt;\n\n                    &lt;ha-combo-button class=\"hidden-handheld ha-button-primary\" label=\"Create New\"&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                    &lt;/ha-combo-button&gt;\n\n                    &lt;ha-menu-button class=&quot;hidden-desktop ha-button-primary&quot; label=&quot;Create New&quot;&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=&quot;AppleValue&quot;&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=&quot;BananaValue&quot;&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=&quot;BalloonValue&quot;&gt;Balloon&lt;/ha-item&gt;\n                    &lt;/ha-menu-button&gt;\n\n                    DEPRECATED WAY:\n\n                    &lt;ha-combo-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                        &nbsp;&nbsp;&lt;ha-popover&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Apple&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Banana&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Balloon&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Melon&lt;/ha-menu-item&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu&gt;\n                        &nbsp;&nbsp;&lt;/ha-popover&gt;\n                    &lt;/ha-combo-button&gt;\n                </code>\n            </pre>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div class=\"container-combo-buttons\">\n            <ha-combo-button class=\"ha-button-primary\" label=\"Create New\" disabled data-automation-id=\"html_cmbtn_primary_disabled\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-combo-button>\n            <ha-combo-button class=\"ha-button-primary\" label=\"Create New\" data-automation-id=\"html_cmbtn_primary\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-combo-button>\n            <ha-combo-button label=\"Create New\" disabled data-automation-id=\"html_cmbtn_secondary_disabled\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-combo-button>\n            <ha-combo-button label=\"Create New\" data-automation-id=\"html_cmbtn_secondary\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-combo-button>\n        </div>\n        <div class=\"content-dark\">\n            <ha-combo-button class=\"ha-button-dark\" label=\"Create New\" disabled data-automation-id=\"html_cmbtn_dark_disabled\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-combo-button>\n            <ha-combo-button class=\"ha-button-dark\" label=\"Save\" data-automation-id=\"html_cmbtn_dark\">\n                <ha-item value=\"SendValue\">Send</ha-item>\n                <ha-item value=\"CreateNewValue\">Create new</ha-item>\n                <ha-item value=\"DoneValue\">Done</ha-item>\n            </ha-combo-button>\n        </div>\n        <h3>With Disabled Items</h3>\n        <div class=\"container-disabled-items\">\n             <ha-combo-button class=\"ha-button-primary\" label=\"Create New\" data-automation-id=\"html_cmbtn_primary_item_disabled\">\n                 <ha-item value=\"AppleValue\" disabled=\"disabled\">Apple</ha-item>\n                 <ha-item value=\"BananaValue\">Banana</ha-item>\n                 <ha-item value=\"BalloonValue\">Balloon</ha-item>\n             </ha-combo-button>\n        </div>\n        <h3>Switch to Menu Buttons for Handheld Devices</h3>\n        <div class=\"hidden-handheld container-combo-items\">\n            <ha-combo-button class=\"ha-button-primary\" label=\"Create New\" data-automation-id=\"html_cmbtn_primary_desktop\">\n                <ha-item value=\"AppleValue\" >Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-combo-button>\n        </div>\n        <div class=\"hidden-desktop container-menu-items\">\n            <ha-menu-button class=\"ha-button-primary\" label=\"Create New\" data-automation-id=\"html_mbtn_primary_mobile\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-menu-button>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    NEW WAY:\n\n                    var comboButton = document.createElement(\"ha-combo-button\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item1 = document.createElement(\"ha-item\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item2 = document.createElement(\"ha-item\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;menuButton = document.createElement(\"ha-menu-button\");\n\n                    item1.label = \"Basic paragraph style\";\n                    item1.value = \"Basic paragraph style\";\n                    item2.label = \"Basic paragraph style\";\n                    item2.value = \"Basic paragraph style\";\n\n                    comboButton.classList.add(\"ha-button-primary\");\n                    comboButton.classList.add(\"hidden-handheld\");\n                    comboButton.label = \"Create New\";\n                    comboButton.disabled = false;\n                    comboButton.items = [item1, item2];\n\n                    menuButton.classList.add(\"ha-button-primary\");\n                    menuButton.classList.add(\"hidden-desktop\");\n                    menuButton.label = \"Create New\";\n                    menuButton.disabled = false;\n                    menuButton.items = [item1, item2];\n\n                    DEPRECATED WAY:\n\n                    var comboButton = document.createElement(\"ha-combo-button\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;popover = document.createElement(\"ha-popover\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;menu = document.createElement(\"ha-menu\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item1 = document.createElement(\"ha-menu-item\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item2 = document.createElement(\"ha-menu-item\"),\n\n                    item1.label = \"Basic paragraph style\";\n                    item1.value = \"Basic paragraph style\";\n                    item2.label = \"Basic paragraph style\";\n                    item2.value = \"Basic paragraph style\";\n\n                    menu.items = [item1, item2];\n\n                    popover.addContent(menu);\n\n                    comboButton.classList.add(\"ha-button-primary\");\n                    comboButton.label = \"Create New\";\n                    comboButton.disabled = false;\n                    comboButton.popover = popover;\n\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"programmaticWay\"></div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"dojoProgrammaticWay\"></div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                        &lt;HAComboButton placeholder=\"Choose a method\" label=\"Same title\"&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"AppleValue\"&gt;Apple&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"BananaValue\"&gt;Banana&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"BalloonValue\"&gt;Balloon&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"MelonValue\"&gt;Melon&lt;/HAItem&gt;\n                        &lt;/HAComboButton&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"reactWay\"></div>\n    </section>\n</div>\n";
  });

this["JST"]["combo-link.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<style>\n    .ha-paginated-messages {\n        margin-bottom: 10px;\n    }\n\n</style>\n<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Combo Link Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/ComboLink.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code>\n                    NEW WAY:\n\n                    &lt;ha-combo-link label=\"Create New\"&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                    &lt;/ha-combo-link&gt;\n\n                    DEPRECATED WAY:\n\n                    &lt;ha-combo-link label=\"Create New\"&gt;\n                        &nbsp;&nbsp;&lt;ha-popover connector=\"none\"&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu role=\"menu\" aria-labelledby=\"ha-combo-link-1\"&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Basic paragraph style&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Basic paragraph style&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Basic paragraph style&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Basic paragraph style&lt;/ha-menu-item&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu&gt;\n                        &nbsp;&nbsp;&lt;/ha-popover&gt;\n                    &lt;/ha-combo-link&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div class=\"declarative-wrapper\">\n            <h3>Common Combo Link</h3>\n            <ha-combo-link label=\"Combo Link One\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-combo-link>\n            <h3>With Disabled Item</h3>\n            <ha-combo-link label=\"Combo Link One\">\n                <ha-item value=\"AppleValue\" disabled=\"disabled\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-combo-link>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    NEW WAY:\n\n                    var comboLink = document.createElement('ha-combo-link'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item1 = document.createElement('ha-item'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item2 = document.createElement('ha-item'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item3 = document.createElement('ha-item');\n\n                    item1.label = 'Apple';\n                    item1.value = 'Apple';\n                    item2.label = 'Banana';\n                    item2.value = 'Banana';\n                    item3.label = 'Cherry';\n                    item3.value = 'Cherry';\n\n                    comboLink.label = 'Combo Link 1';\n                    comboLink.disabled = false;\n                    comboLink.items = [item1, item2, item3];\n\n\n                    DEPRECATED WAY:\n\n                    var comboLink = document.createElement('ha-combo-link'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;popover = document.createElement('ha-popover'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;menu = document.createElement('ha-menu'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item1 = document.createElement('ha-menu-item'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item2 = document.createElement('ha-menu-item'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item3 = document.createElement('ha-menu-item');\n\n                    item1.label = 'Apple';\n                    item2.label = 'Banana';\n                    item3.label = 'Cherry';\n\n                    menu.items = [item1, item2, item3];\n\n                    popover.addContent(menu);\n\n                    comboLink.label = 'Combo Link 1';\n                    comboLink.disabled = false;\n                    comboLink.popover = popover;\n                 </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"programmaticWay\"></div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"dojoProgrammaticWay\"></div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                        &lt;HAComboLink placeholder=\"Choose a method\" label=\"Same title\"&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"AppleValue\"&gt;Apple&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"BananaValue\"&gt;Banana&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"BalloonValue\"&gt;Balloon&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"MelonValue\"&gt;Melon&lt;/HAItem&gt;\n                        &lt;/HAComboLink&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"reactWay\"></div>\n    </section>\n</div>\n";
  });

this["JST"]["date-picker.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Date Picker Component\n    </h1>\n\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/DatePicker.md\"\n           target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-date-picker label=\"Date\"&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker value=\"2000-01-01\" label=\"Date\"&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker showYearNavigation&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker label=\"Date\" disabled=\"true\"&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker label=\"With Error\" aria-invalid=\"true\" class=\"ha-validatable input-error\"&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker label=\"Required Field\" required=\"true\"&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker label=\"Min/max restrictions\" minDate=\"2016-06-06\" maxDate=\"2016-08-26\"&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker label=\"Optional Field\" optional=\"true\" labelOptional=\"Same Optional field\"&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker name=\"Name test\"&gt;&lt;/ha-date-picker&gt;\n\n                    &lt;ha-date-picker label=\"Date picker with double calendar\" useDoubleCalendar&gt;&lt;/ha-date-picker&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            <h3>Enabled</h3>\n            <ha-date-picker label=\"Date\"></ha-date-picker>\n            <h3>With Placeholder</h3>\n            <ha-date-picker placeholder=\"DD/MM/YYYY\"></ha-date-picker>\n            <h3>With Value Specified</h3>\n            <ha-date-picker value=\"2000-01-01\" label=\"Date\"></ha-date-picker>\n            <h3>Navigation by Year</h3>\n            <ha-date-picker label=\"Date\" showYearNavigation></ha-date-picker>\n            <h3>Disabled</h3>\n            <ha-date-picker label=\"Date\" disabled=\"true\"></ha-date-picker>\n            <h3>With Error</h3>\n            <ha-date-picker pattern='abcdefghijklmnop' label=\"With Error\" class=\"ha-validatable input-error\"></ha-date-picker>\n            <h3>Required</h3>\n            <ha-date-picker label=\"Required Field\" required=\"true\"></ha-date-picker>\n            <h3>With <code>maxDate</code> and <code>minDate</code> properties</h3>\n            <ha-date-picker label=\"Min/max restrictions\" class=\"gallery-min-max\"></ha-date-picker>\n            <h3>Optional label</h3>\n            <ha-date-picker label=\"Optional Field\" optional=\"true\" labelOptional=\"Optional\"></ha-date-picker>\n            <h3>No Label</h3>\n            <ha-date-picker></ha-date-picker>\n            <h3>With name attribute</h3>\n            <ha-date-picker name=\"Name test\"></ha-date-picker>\n            <h3>With double calendar</h3>\n            <ha-date-picker label=\"Date picker with double calendar\" useDoubleCalendar></ha-date-picker>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                var datePicker = document.createElement('ha-date-picker'),\n                    navigationByYear = document.createElement('ha-date-picker'),\n                    disabledDatePicker = document.createElement('ha-date-picker'),\n                    errorDatePicker = document.createElement('ha-date-picker'),\n                    requiredDatePicker = document.createElement('ha-date-picker'),\n                    minMaxDatePicker = document.createElement('ha-date-picker'),\n                    optionalDatePicker = document.createElement('ha-date-picker'),\n                    nameDatePicker = document.createElement('ha-date-picker'),\n                    noLabelDatePicker = document.createElement('ha-date-picker'),\n                    doubleCalendarDatePicker = document.createElement('ha-date-picker'),\n                    date = new Date(Date.now()),\n                    notableDate,\n                    tooltips = {};\n\n                datePicker.label = 'Name';\n\n                navigationByYear.showYearNavigation = true;\n\n                disabledDatePicker.label = 'Disabled Name';\n                disabledDatePicker.disabled = true;\n\n                errorDatePicker.label = 'With error';\n                errorDatePicker.className = 'input-error ha-validatable';\n\n                requiredDatePicker.label = 'Required Field';\n                requiredDatePicker.required = true;\n\n                minMaxDatePicker.label = 'Min/max restrictions';\n                minMaxDatePicker.minDate = '2016-06-06';\n                minMaxDatePicker.maxDate = '2016-08-26';\n\n                optionalDatePicker.label = 'Optional Field';\n                optionalDatePicker.labelOptional = 'Optional';\n                optionalDatePicker.optional = true;\n\n                noLabelDatePicker.placeholder = 'No Label';\n\n                nameDatePicker.name = 'Name test';\n\n                doubleCalendarDatePicker.label = 'Date picker with double calendar';\n                doubleCalendarDatePicker.useDoubleCalendar = true;\n\n                if (date.getDate() < 20) {\n                    notableDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() + 2);\n                    datePicker.notableDates = [ notableDate ];\n                    tooltips[notableDate.toDateString()] = 'Important Date';\n                    datePicker.tooltips = tooltips;\n                    datePicker.blackoutDates = [\n                        new Date(date.getFullYear(), date.getMonth(), date.getDate() + 5),\n                        new Date(date.getFullYear(), date.getMonth(), date.getDate() + 6),\n                        new Date(date.getFullYear(), date.getMonth(), date.getDate() + 7)\n                    ];\n                } else {\n                    notableDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() - 2);\n                    datePicker.notableDates = [ notableDate ];\n                    tooltips[notableDate.toDateString()] = 'Important Date';\n                    datePicker.tooltips = tooltips;\n                    datePicker.blackoutDates = [\n                        new Date(date.getFullYear(), date.getMonth(), date.getDate() - 5),\n                        new Date(date.getFullYear(), date.getMonth(), date.getDate() - 6),\n                        new Date(date.getFullYear(), date.getMonth(), date.getDate() - 7)\n                    ];\n                }\n\n                this._appendTitle('Enabled', placeToAppend);\n                this._appendChildWithWrapper(datePicker, placeToAppend);\n\n                this._appendTitle('Navigation by Year', placeToAppend);\n                this._appendChildWithWrapper(navigationByYear, placeToAppend);\n\n                this._appendTitle('Disabled', placeToAppend);\n                this._appendChildWithWrapper(disabledDatePicker, placeToAppend);\n\n                this._appendTitle('With Error', placeToAppend);\n                this._appendChildWithWrapper(errorDatePicker, placeToAppend);\n\n                this._appendTitle('Required', placeToAppend);\n                this._appendChildWithWrapper(requiredDatePicker, placeToAppend);\n\n                this._appendTitle('With &lt;code>maxDate&lt;/code> and &lt;code>minDate&lt;/code> properties', placeToAppend);\n                this._appendChildWithWrapper(minMaxDatePicker, placeToAppend);\n\n                this._appendTitle('Optional Label', placeToAppend);\n                this._appendChildWithWrapper(optionalDatePicker, placeToAppend);\n\n                this._appendTitle('No Label', placeToAppend);\n                this._appendChildWithWrapper(noLabelDatePicker, placeToAppend);\n\n                this._appendTitle('With name attribute', placeToAppend);\n                this._appendChildWithWrapper(nameDatePicker, placeToAppend);\n\n                this._appendTitle('With Double Calendar', placeToAppend);\n                this._appendChildWithWrapper(doubleCalendarDatePicker, placeToAppend);</code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HADatePicker label=\"Date\"/&gt;\n\n                    &lt;HADatePicker value=\"2000-01-01\" label=\"Date\"/&gt;\n\n                    &lt;HADatePicker showYearNavigation/&gt;\n\n                    &lt;HADatePicker label=\"Date\" disabled=\"true\"/&gt;\n\n                    &lt;HADatePickerlabel=\"With Error\" aria-invalid=\"true\" class=\"ha-validatable input-error\"/&gt;\n\n                    &lt;HADatePicker label=\"Required Field\" required=\"true\"/&gt;\n\n                    &lt;HADatePicker label=\"Optional Field\" optional=\"true\" labelOptional=\"Same Optional field\"/&gt;\n\n                    &lt;HADatePicker/&gt;\n\n                    &lt;HADatePicker name=\"Name test\"/&gt;\n\n                    &lt;HADatePicker label=\"Date picker with double calendar\" useDoubleCalendar=\"true\"/&gt;\n                </HADatePicker/>\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"reactWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["date-range-picker.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Date Range Picker Component\n    </h1>\n\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/DateRangePicker.md\"\n           target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-date-range-picker &gt;&lt;/ha-date-range-picker&gt;\n\n                    &lt;ha-date-range-picker aria-label=\"Select date range - Disabled\" disabled=\"true\"&gt;&lt;/ha-date-range-picker&gt;\n\n                    &lt;ha-date-range-picker label=\"With Error\" class=\"ha-validatable input-error\"&gt;&lt;/ha-date-range-picker&gt;\n\n                    &lt;ha-date-range-picker label=\"Required Field\" required=\"true\"&gt;&lt;/ha-date-range-picker&gt;\n\n                    &lt;ha-date-range-picker label=\"Optional Field\" optional=\"true\" labelOptional=\"Same Optional field\"&gt;&lt;/ha-date-range-picker&gt;\n\n                    &lt;ha-date-range-picker&gt;&lt;/ha-date-range-picker&gt;\n\n                    &lt;ha-date-range-picker name=\"Name test\"&gt;&lt;/ha-date-range-picker&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            <h3>Enabled</h3>\n            <ha-date-range-picker></ha-date-range-picker>\n            <h3>Disabled</h3>\n            <ha-date-range-picker aria-label=\"Select date range - Disabled\" disabled=\"true\"></ha-date-range-picker>\n            <h3>Required</h3>\n            <ha-date-range-picker startDatelabel=\"Required Field\" endDateLabel=\"Also required\" required=\"true\"></ha-date-range-picker>\n            <h3>Optional label</h3>\n            <ha-date-range-picker optional=\"true\" labelOptional=\"Optional\"></ha-date-range-picker>\n            <h3>With name attribute</h3>\n            <ha-date-range-picker startDateName=\"Start range name test\" endDateName=\"End range name test\"></ha-date-range-picker>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var datePicker = document.createElement('ha-date-range-picker'),\n                        disabledDatePicker = document.createElement('ha-date-range-picker'),\n                        requiredDatePicker = document.createElement('ha-date-range-picker'),\n                        optionalDatePicker = document.createElement('ha-date-range-picker'),\n                        nameDatePicker = document.createElement('ha-date-range-picker');\n\n                    disabledDatePicker.disabled = true;\n                    disabledDatePicker.ariaLabel = 'Select date range - Disabled';\n\n                    requiredDatePicker.startDateLabel = 'Required Field';\n                    requiredDatePicker.endDateLabel = 'Also required';\n                    requiredDatePicker.required = true;\n\n                    optionalDatePicker.labelOptional = 'Optional';\n                    optionalDatePicker.optional = true;\n\n                    nameDatePicker.startDateName = 'Start range name test';\n                    nameDatePicker.endDateName = 'End range name test';\n\n                    this._appendTitle('Enabled', placeToAppend);\n                    this._appendChildWithWrapper(datePicker, placeToAppend);\n\n                    this._appendTitle('Disabled', placeToAppend);\n                    this._appendChildWithWrapper(disabledDatePicker, placeToAppend);\n\n                    this._appendTitle('Required', placeToAppend);\n                    this._appendChildWithWrapper(requiredDatePicker, placeToAppend);\n\n                    this._appendTitle('Optional Label', placeToAppend);\n                    this._appendChildWithWrapper(optionalDatePicker, placeToAppend);\n\n                    this._appendTitle('With name attribute', placeToAppend);\n                    this._appendChildWithWrapper(nameDatePicker, placeToAppend);\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["drawer.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<div class=\"drawer\">\n    <section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Drawer Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/DrawerLarge.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n    </section>\n\n    <div class=\"panel\" id=\"html\">\n        <div class=\"left-content\">\n            <section class=\"usage\">\n                <header class=\"title\"><a>Usage</a></header>\n\n                <div class=\"highlight\">\n                    <pre>\n                        <code class=\"language-html\" data-lang=\"html\">\n                            ";
  if (stack1 = helpers.declarativeUsage) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.declarativeUsage); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                        </code>\n                    </pre>\n                </div>\n            </section>\n            <section class=\"examples\">\n                <header class=\"title\"><a>Examples</a></header>\n                ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </section>\n        </div>\n    </div>\n\n\n    <div class=\"panel hidden\" id=\"js\">\n        <div class=\"left-content\">\n            <section class=\"usage\">\n                <header class=\"title\"><a>Usage</a></header>\n                <div class=\"highlight\">\n                    <pre>\n                        <code class=\"language-html\" data-lang=\"html\">\n                            var drawer = document.createElement('ha-drawer-large');\n\n                            drawer.backdrop = true;\n                            drawer.id = id;\n                            drawer.titleText = title;\n                            drawer.section = contentNode;\n                            drawer.footer = footerNode;\n                        </code>\n                    </pre>\n                </div>\n            </section>\n\n            <section class=\"examples\">\n                <header class=\"title\"><a>Examples</a></header>\n                <div id=\"programmaticWay\">\n                </div>\n            </section>\n        </div>\n    </div>\n\n    <div class=\"panel hidden\" id=\"dojo\">\n        <div class=\"left-content\">\n            <section class=\"examples\">\n                <header class=\"title\"><a>Examples</a></header>\n                <div id=\"dojoProgrammaticWay\">\n                </div>\n            </section>\n        </div>\n    </div>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n<section class=\"usage\">\n    <header class=\"title\">\n        <a>Usage</a>\n    </header>\n\n    <div class=\"highlight\">\n        <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                Large Drawer Without Overlay\n                    &lt;HADrawerLarge\n                        show={false}\n                        backdrop={false}\n                        title=\"I AM A DRAWER TITLE!!!!!\"\n                        onDismiss={func(){...}}&gt;\n                        &lt;HASection&gt;\n                            ...\n                        &lt;/HASection&gt;\n                        &lt;HAFooter&gt;\n                            ...\n                        &lt;/HAFooter&gt;\n                    &lt;/HADrawerLarge&gt;\n\n                    Large Drawer With Overlay\n                    &lt;HADrawerLarge\n                        show={false}\n                        backdrop={true}\n                        title=\"I AM A DRAWER TITLE!!!!!\"\n                        onDismiss={func(){...}}&gt;\n                        &lt;HASection&gt;\n                            ...\n                        &lt;/HASection&gt;\n                        &lt;HAFooter&gt;\n                            ...\n                        &lt;/HAFooter&gt;\n                    &lt;/HADrawerLarge&gt;\n                </code>\n            </pre>\n    </div>\n</section>\n\n<section class=\"examples\">\n    <header class=\"title\">\n        <a>Examples</a>\n    </header>\n    <div id=\"reactWay\"></div>\n</section>\n</div>\n";
  return buffer;
  });

this["JST"]["drawer.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<div class=\"drawer\">\n    <section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Drawer Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/DrawerSmall.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n    </section>\n\n    <div class=\"panel\" id=\"html\">\n        <div class=\"left-content\">\n            <section class=\"usage\">\n                <header class=\"title\"><a>Usage</a></header>\n\n                <div class=\"highlight\">\n                    <pre>\n                        <code class=\"language-html\" data-lang=\"html\">\n                            &lt;ha-drawer-small id=\"declarative-drawer-small\"&gt;\n                                &nbsp;&nbsp;&lt;section&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;...\n                                &nbsp;&nbsp;&lt;/section&gt;\n                            &lt;/ha-drawer-small&gt;\n                            &lt;button data-drawer-id=\"#declarative-drawer-small\"&gt;\n                            &nbsp;&nbsp;Show Drawer Small Without Overlay\n                            &lt;/button&gt;\n                        </code>\n                    </pre>\n                </div>\n            </section>\n            <section class=\"examples\">\n                ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </section>\n        </div>\n    </div>\n    <div class=\"panel hidden\" id=\"js\">\n        <div class=\"left-content\">\n            <section class=\"usage\">\n                <header class=\"title\"><a>Usage</a></header>\n                <div class=\"highlight\">\n                    <pre>\n                        <code class=\"language-html\" data-lang=\"html\">\n                            var drawer = document.createElement('ha-drawer-small');\n\n                            drawer.id = id;\n                            drawer.titleText = title;\n                            drawer.section = contentNode;\n                        </code>\n                    </pre>\n                </div>\n            </section>\n\n            <section class=\"examples\">\n                <header class=\"title\"><a>Examples</a></header>\n                <div id=\"programmaticWay\">\n                </div>\n            </section>\n        </div>\n    </div>\n\n    <div class=\"panel hidden\" id=\"dojo\">\n        <div class=\"left-content\">\n            <section class=\"examples\">\n                <div id=\"dojoProgrammaticWay\">\n                </div>\n            </section>\n        </div>\n    </div>\n</div>\n";
  return buffer;
  });

this["JST"]["flyout.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Flyout Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Flyout-%5BDRAFT%5D.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel fl\" id=\"html\" style=\"height:1300px;\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;button class=\"global-header-button\" type=\"button\"&gt;&lt;/button&gt;\n\n                    &lt;ha-flyout class=\"declarative\" titleText=\"Flyout title\"&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;Lorem ipsum dolor sit amet&lt;/span&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                        &nbsp;&nbsp;&lt;/section&gt;\n                    &lt;/ha-flyout&gt;\n\n\n                    &lt;button class=\"global-header-button\" type=\"button\"&gt;&lt;/button&gt;\n\n                    &lt;ha-flyout class=\"declarative\" titleText=\"Create\" moreText=\"show more\" lessText=\"show less\"&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"flyout-less\"&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"flyout-more\"&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;table&gt;\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;th&gt;Customers&lt;/th&gt;\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu&gt;\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu&gt;\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/td&gt;\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/table&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                        &nbsp;&nbsp;&lt;/section&gt;\n                    &lt;/ha-flyout&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            <h3>Non Menu Flyout</h3>\n            <nav class=\"global-header\">\n                <ul class=\"list-unstyled\">\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                    </li>\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                        <ha-flyout class=\"declarative\" titleText=\"Flyout title\">\n                            <section>\n                                <div>\n                                    <span>Lorem ipsum dolor sit amet</span>\n                                </div>\n                            </section>\n                        </ha-flyout>\n                    </li>\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                    </li>\n                </ul>\n            </nav>\n\n            <h3>Resizable Menu Flyout</h3>\n\n            <nav class=\"global-header\">\n                <ul class=\"list-unstyled\">\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                    </li>\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                        <ha-flyout class=\"declarative\" titleText=\"Create\" moreText=\"show more\" lessText=\"show less\">\n                            <section>\n                                <div class=\"flyout-less\">\n                                    <ha-menu>\n                                        <ha-menu-item>Invoice</ha-menu-item>\n                                        <ha-menu-item>Expense</ha-menu-item>\n                                    </ha-menu>\n                                </div>\n                                <div class=\"flyout-more\">\n                                    <table>\n                                        <tr>\n                                            <th>Customers</th>\n                                            <th>Vendors</th>\n                                            <th>Employees</th>\n                                            <th>Other</th>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <ha-menu>\n                                                    <ha-menu-item>Invoice</ha-menu-item>\n                                                    <ha-menu-item>Receive Payment</ha-menu-item>\n                                                    <ha-menu-item>Estimate</ha-menu-item>\n                                                    <ha-menu-item>Credit Memo</ha-menu-item>\n                                                    <ha-menu-item>Sales Receipt</ha-menu-item>\n                                                    <ha-menu-item>Refund Receipt</ha-menu-item>\n                                                    <ha-menu-item>Delayed Credit</ha-menu-item>\n                                                    <ha-menu-item>Delayed Charge</ha-menu-item>\n                                                </ha-menu>\n                                            </td>\n                                            <td>\n                                                <ha-menu>\n                                                    <ha-menu-item>Expense</ha-menu-item>\n                                                    <ha-menu-item>Check</ha-menu-item>\n                                                    <ha-menu-item>Bill</ha-menu-item>\n                                                    <ha-menu-item>Pay Bills</ha-menu-item>\n                                                    <ha-menu-item>Purchase Order</ha-menu-item>\n                                                    <ha-menu-item>Vendor Credit</ha-menu-item>\n                                                    <ha-menu-item>Credit Card Credit</ha-menu-item>\n                                                    <ha-menu-item>Print Checks</ha-menu-item>\n                                                </ha-menu>\n                                            </td>\n                                            <td>\n                                                <ha-menu>\n                                                    <ha-menu-item>Payroll</ha-menu-item>\n                                                    <ha-menu-item>Single Time Activity</ha-menu-item>\n                                                    <ha-menu-item>Weekly Timesheet</ha-menu-item>\n                                                </ha-menu>\n                                            </td>\n                                            <td>\n                                                <ha-menu>\n                                                    <ha-menu-item>Bank Deposit</ha-menu-item>\n                                                    <ha-menu-item>Transfer</ha-menu-item>\n                                                    <ha-menu-item>Journal Entry</ha-menu-item>\n                                                    <ha-menu-item>Statement</ha-menu-item>\n                                                </ha-menu>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </section>\n                        </ha-flyout>\n                    </li>\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                    </li>\n                </ul>\n            </nav>\n\n            <h3>Blue Side Panel Flyout</h3>\n\n            <nav class=\"global-header\">\n                <ul class=\"list-unstyled\">\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                    </li>\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                        <ha-flyout class=\"declarative\" titleText=\"Jon's Landscape\">\n                            <section>\n                                <div class=\"flyout-side-panel\">\n                                    <table>\n                                        <tr>\n                                            <th>Accountant</th>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <ha-menu>\n                                                    <ha-menu-item>Reclassify Transactions</ha-menu-item>\n                                                    <ha-menu-item>Write Off Invoices</ha-menu-item>\n                                                </ha-menu>\n                                            </td>\n                                        <tr>\n                                    </table>\n                                </div>\n                                <div>\n                                    <table>\n                                        <tr>\n                                            <th>Settings</th>\n                                            <th>Tools</th>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <ha-menu>\n                                                    <ha-menu-item>Customer Settings</ha-menu-item>\n                                                    <ha-menu-item>Write Off Invoices</ha-menu-item>\n                                                </ha-menu>\n                                            </td>\n                                            <td>\n                                                <ha-menu>\n                                                    <ha-menu-item>Import Data</ha-menu-item>\n                                                    <ha-menu-item>Export Data</ha-menu-item>\n                                                </ha-menu>\n                                            </td>\n                                        <tr>\n                                    </table>\n                                </div>\n                            </section>\n                        </ha-flyout>\n                    </li>\n                    <li>\n                        <button class=\"global-header-button\" type=\"button\"></button>\n                    </li>\n                </ul>\n            </nav>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        <br>\n        </div>\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"js\" style=\"height:1300px;\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var flyout = document.createElement(\"ha-flyout\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;lessDiv = document.createElement(\"div\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;moreDiv = document.createElement(\"div\");\n\n                    // Configure, populate, and append lessDiv\n                    lessDiv.classList.add(\"flyout-less\");\n                    // Create menu, render, and add to the lessDiv\n\n                    // Configure, populate, and append moreDiv\n                    moreDiv.classList.add(\"flyout-more\");\n                    // Create menus, render, and add to the moreDiv\n\n                    flyout.moreText = 'show more';\n                    flyout.lessText = 'show less';\n                    flyout.titleText = \"Create\";\n                    flyout.section = [lessDiv, moreDiv];\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"dojo\" style=\"height:1300px;\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["grid.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n	<h1 class=\"entry-title\">Grid System</h1>\n	<div class=\"meta\">\n		<ha-segmented-button class=\"usage-tab-buttons\">\n			<button class=\"segmented-nav\" value=\"demo\" selected=\"true\">Demo</button>\n			<button class=\"segmented-nav\" value=\"classes\">CSS Classes</button>\n		</ha-segmented-button>\n	</div>\n</section>\n\n<div class=\"panel grid-demo\" id=\"demo\">\n	<section class=\"examples container\">\n		<h2>Grid columns</h2>\n\n		<div class=\"container-fluid\">\n			<div class=\"row\">\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 1</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 2</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 3</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 4</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 5</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 6</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 7</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 8</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 9</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 10</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 11</div></div>\n				<div class=\"col-xs-3 col-md-2 col-lg-1\"><div class=\"cell\">cell 12</div></div>\n			</div>\n		</div>\n\n		<div class=\"legend\">\n			<div class=\"xs\">|0px</div>\n			<div class=\"sm\">320px|</div>\n			<div class=\"md\">480px|</div>\n			<div class=\"lg\">768px|</div>\n			<div class=\"xl\">1024px|</div>\n		</div>\n\n		<h2>Responsive layout with grid</h2>\n\n		<div class=\"container-fluid\">\n			<div class=\"row\">\n				<div class=\"col-xs-12 col-md-6 col-lg-3\">\n					<div class=\"widget\">\n						<label>First Name:\n							<input type=\"text\">\n						</label>\n						<br>\n						<label>Last Name:\n							<input type=\"text\">\n						</label>\n						<br>\n						<button>Button</button>\n					</div>\n				</div>\n\n				<div class=\"col-xs-12 col-md-6 col-lg-3\">\n					<div class=\"widget\">\n						<label>City:\n							<input type=\"text\">\n						</label>\n						<br>\n						<label>State:\n							<input type=\"text\">\n						</label>\n					</div>\n				</div>\n\n				<div class=\"col-lg-3 col-md-6 hidden-sm-down\">\n					<div class=\"widget\">\n						<h3>Large mobile / desktop</h3>\n\n						<p>This content only displays at > 480px.</p>\n					</div>\n				</div>\n\n				<div class=\"col-xs-12 hidden-md-up\">\n					<div class=\"widget\">\n						<h3>Small mobile</h3>\n\n						<p>This content only displays at <= 480px.</p>\n					</div>\n				</div>\n\n				<div class=\"col-lg-3 hidden-lg-down\">\n					<div class=\"widget\">\n						<ul>\n							<li>Bonus</li>\n							<li>Content</li>\n							<li>for</li>\n							<li>Big</li>\n							<li>Screens</li>\n							<li>>= 1024px</li>\n						</ul>\n					</div>\n				</div>\n			</div>\n		</div>\n\n		<div class=\"hidden-md-down\">\n			<h2>Offsetting content in the grid</h2>\n\n			<div class=\"container-fluid\">\n				<div class=\"row\">\n					<div class=\"col-lg-5 offset-lg-3\">\n						<div class=\"widget\">\n							<p>5 wide, offset by 3</p>\n						</div>\n					</div>\n\n					<div class=\"col-lg-3 offset-lg-1\">\n						<div class=\"widget\">\n							<p>3 wide, offset by 1</p>\n							<p>Offset is relative, not absolute - the offset classes increase the left margin\n								of the item by the specified number of grid columns.<p>\n						</div>\n					</div>\n				</div>\n\n				<div class=\"row\">\n					<div class=\"col-lg-3 offset-lg-9\">\n						<div class=\"widget\">\n							<p>3 wide, offset by 9</p>\n						</div>\n					</div>\n				</div>\n\n				<div class=\"row\">\n					<div class=\"col-lg-6 offset-lg-3\">\n						<div class=\"widget\">\n							<p>6 wide, offset by 3</p>\n						</div>\n					</div>\n				</div>\n\n				<div class=\"row\">\n					<div class=\"col-lg-8 offset-lg-2\">\n						<div class=\"widget\">\n							<p>8 wide, offset by 2</p>\n						</div>\n					</div>\n				</div>\n\n				<div class=\"row\" style=\"-ms-justify-content: center; -webkit-justify-content: center; justify-content: center\">\n					<div class=\"col-lg-7\">\n						<div class=\"widget\">\n							<p>7 wide, center justify</p>\n							<p>Justification is achieved by specifying the <code>justify-content</code>\n								CSS property on the item's containing <code>row</code> element.</p>\n						</div>\n					</div>\n				</div>\n\n				<div class=\"row\" style=\"-ms-justify-content: flex-end; -webkit-justify-content: flex-end; justify-content: flex-end\">\n					<div class=\"col-lg-2\">\n						<div class=\"widget\">\n							<p>2 wide, end justify</p>\n						</div>\n					</div>\n\n					<div class=\"col-lg-3\">\n						<div class=\"widget\">\n							<p>3 wide, end justify</p>\n						</div>\n					</div>\n				</div>\n			</div>\n	    <h2>Creating a grid</h2>\n\n	    <p>Create a container element (<code>div</code>) and give it the <code>container-fluid</code> CSS class.\n	    Within the container, you can have any number of rows (<code>&lt;div class=\"row\"></code>), and rows can\n	    contain other rows for fine-tuned layouts (but do not nest containers). Page elements are placed within\n	    rows and use the grid classes for width, indentation, and conditional visibility.</p>\n\n	    <pre><code class=\"html\">&lt;div class=\"container-fluid\">\n    &lt;div class=\"row\">\n	&lt;div>grid content&lt;/div>\n    &lt;/div>\n&lt;/div></code></pre>\n\n	    <h2>Understanding the grid</h2>\n\n	    <p>The grid provides a mobile-first design. Mobile-first means first you design for mobile, then scale up\n	    as necessary. There are 12 classes (since the grid has 12 columns) defined that can be applied to an\n	    element to specify its width:</p>\n\n	    <pre><code>col-xs-1, col-xs-2, ..., col-xs-12</code></pre>\n\n	    <p>The trailing number in the class name specifies how many grid columns the element will span horizontally.\n	    If you assign an element the class <code>col-xs-8</code> and nothing else, then at all screen sizes the\n	    element will span 8 columns. In order to change the layout for larger screens you assign additional classes.\n	    </p>\n\n	    <h3>Grid breakpoints</h3>\n\n	    <p>The grid has named breakpoints at the following screen widths:</p>\n\n	    <ul>\n		<li>xs: <= 320px</li>\n		<li>sm: <= 480px</li>\n		<li>md: <= 768px</li>\n		<li>lg: <= 1024px</li>\n		<li>xl: > 1024px</li>\n	    </ul>\n\n	    <p>The breakpoint names are used within grid CSS class names to define behavior at (or above) that breakpoint.\n	    Let's take a look at how this works:</p>\n\n	    <ul>\n		<li><code>&lt;div class=\"col-xs-8\"></code>: this element will always span 8 columns</li>\n		<li><code>&lt;div class=\"col-xs-8 col-md-4\"></code>: this element will span 8 columns on xs and sm\n		screens, but at md and larger it will only span 4 columns</li>\n		<li><code>&lt;div class=\"col-xs-8 col-md-4 col-xl-2\"></code>: this element will span 8 columns on xs and\n		sm screens, 4 columns on md and lg screens, and 2 columns on xl screens</li>\n	    </ul>\n\n	    <p>By combining classes in this way you can change the layout at each breakpoint. Breakpoint names are also\n	    used in other classes:</p>\n\n	    <ul>\n		<li><code>offset-xs-1</code>: offsets the element by the specified number of columns</li>\n		<li><code>hidden-md-up</code>: hides the element at screen sizes md and up</li>\n		<li><code>hidden-md-down</code>: hides the element at screen sizes md and down</li>\n	    </ul>\n\n	    <p>As you hover the mouse cursor over elements in the visual grid demos above you will see a tooltip\n	    displaying what classes have been applied to the element to achieve its sizing and positioning.</p>\n		</div>\n	</section>\n</div>\n\n<div class=\"panel grid-classes hidden\" id=\"classes\">\n	<section class=\"examples container\">\n		<header class=\"title\"><a>Responsive breakpoints</a></header>\n		<p>Harmony UI Components provides a handful of <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\" target=\"_blank\">media queries</a> to create sensible breakpoints for out layouts and interfaces. These breakpoints are based on minimum viewport widths and allow you us to scale up elements as the viewport changes.</p>\n		<p>The following media query ranges - or breakpoints - are provided:</p>\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"scss\">\n					// No media query for extra small devices since this is the default in Bootstrap\n\n					// Small devices (landscape phones, 320px and up)\n					@media (min-width: 320px) { ... }\n\n					// Medium devices (tablets, 480px and up)\n					@media (min-width: 480px) { ... }\n\n					// Large devices (desktops, 768px and up)\n					@media (min-width: 768px) { ... }\n\n					// Extra large devices (large desktops, 1024px and up)\n					@media (min-width: 1024px) { ... }\n				</code>\n			</pre>\n		</div>\n		<p>Occasionally, we use media queries that go in the other direction (the given screen size or smaller):</p>\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"scss\">\n					// Extra small devices (portrait phones, less than 320px)\n					@media (max-width: 320px) { ... }\n\n					// Small devices (landscape phones, less than 450px)\n					@media (max-width: 450px) { ... }\n\n					// Medium devices (tablets, less than 708px)\n					@media (max-width: 708px) { ... }\n\n					// Large devices (desktops, less than 964px)\n					@media (max-width: 964px) { ... }\n\n					// Extra large devices (large desktops)\n					// No media query since the extra-large breakpoint has no upper bound on its width\n				</code>\n			</pre>\n		</div>\n		<header class=\"title\"><a>Predefined classes</a></header>\n		<p>We are including an extensive set of prebuilt classes for creating grid columns. It includes options for device-based column sizing, reordering columns, and more.</p>\n		<h4>Example: Stacked-to-horizontal</h4>\n		<p>Using a single set of .col-md-* grid classes, you can create a basic grid system that starts out stacked on mobile devices and tablet devices (the extra small to small range) before becoming horizontal on desktop (medium) devices. Place grid columns in any .row.</p>\n\n		<div id=\"desktopExample\">\n			<div class=\"row\">\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n				<div class=\"col-md-1\">.col-md-1</div>\n			</div>\n			<div class=\"row\">\n				<div class=\"col-md-8\">.col-md-8</div>\n				<div class=\"col-md-4\">.col-md-4</div>\n			</div>\n			<div class=\"row\">\n				<div class=\"col-md-4\">.col-md-4</div>\n				<div class=\"col-md-4\">.col-md-4</div>\n				<div class=\"col-md-4\">.col-md-4</div>\n			</div>\n			<div class=\"row\">\n				<div class=\"col-md-6\">.col-md-6</div>\n				<div class=\"col-md-6\">.col-md-6</div>\n			</div>\n		</div>\n\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"html\">\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-1\"&gt;.col-md-1&lt;/div&gt;\n					&lt;/div&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-8\"&gt;.col-md-8&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-4\"&gt;.col-md-4&lt;/div&gt;\n					&lt;/div&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-4\"&gt;.col-md-4&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-4\"&gt;.col-md-4&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-4\"&gt;.col-md-4&lt;/div&gt;\n					&lt;/div&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-6\"&gt;.col-md-6&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-6\"&gt;.col-md-6&lt;/div&gt;\n					&lt;/div&gt;\n				</code>\n			</pre>\n		</div>\n		<h4>Example: Mobile and desktop</h4>\n		<p>Don’t want your columns to simply stack in smaller devices? Use the extra small and medium device grid classes by adding .col-xs-* and .col-md-* to your columns. See the example below for a better idea of how it all works.</p>\n\n		<div id=\"mobileDesktopExample\">\n			<!-- Stack the columns on mobile by making one full-width and the other half-width -->\n			<div class=\"row\">\n				<div class=\"col-xs-12 col-md-8\">.col-xs-12 .col-md-8</div>\n				<div class=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n			</div>\n\n			<!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->\n			<div class=\"row\">\n				<div class=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n				<div class=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n				<div class=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n			</div>\n\n			<!-- Columns are always 50% wide, on mobile and desktop -->\n			<div class=\"row\">\n				<div class=\"col-xs-6\">.col-xs-6</div>\n				<div class=\"col-xs-6\">.col-xs-6</div>\n			</div>\n		</div>\n\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"html\">\n					&lt;!-- Stack the columns on mobile by making one full-width and the other half-width --&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-12 col-md-8\"&gt;.col-xs-12 .col-md-8&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6 col-md-4\"&gt;.col-xs-6 .col-md-4&lt;/div&gt;\n					&lt;/div&gt;\n\n					&lt;!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop --&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6 col-md-4\"&gt;.col-xs-6 .col-md-4&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6 col-md-4\"&gt;.col-xs-6 .col-md-4&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6 col-md-4\"&gt;.col-xs-6 .col-md-4&lt;/div&gt;\n					&lt;/div&gt;\n\n					&lt;!-- Columns are always 50% wide, on mobile and desktop --&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6\"&lt;.col-xs-6&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6\"&lt;.col-xs-6&lt;/div&gt;\n					&lt;/div>\n				</code>\n			</pre>\n		</div>\n		<h4>Example: Mobile, tablet, desktop</h4>\n		<p>Build on the previous example by creating even more dynamic and powerful layouts with tablet .col-sm-* classes.</p>\n		<div id=\"mobileTabletDesktopExample\">\n			<div class=\"row\">\n				<div class=\"col-xs-12 col-sm-6 col-md-8\">.col-xs-12 .col-sm-6 .col-md-8</div>\n				<div class=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n			</div>\n			<div class=\"row\">\n				<div class=\"col-xs-6 col-sm-4\">.col-xs-6 .col-sm-4</div>\n				<div class=\"col-xs-6 col-sm-4\">.col-xs-6 .col-sm-4</div>\n			</div>\n			<div class=\"row\">\n				<div class=\"col-xs-6 col-sm-4\">.col-xs-6 .col-sm-4</div>\n			</div>\n		</div>\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"html\">\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-12 col-sm-6 col-md-8\"&gt;.col-xs-12 .col-sm-6 .col-md-8&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6 col-md-4\"&gt;.col-xs-6 .col-md-4&lt;/div&gt;\n					&lt;/div&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6 col-sm-4\"&gt;.col-xs-6 .col-sm-4&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6 col-sm-4\"&gt;.col-xs-6 .col-sm-4&lt;/div&gt;\n					&lt;/div&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6 col-sm-4\"&gt;.col-xs-6 .col-sm-4&lt;/div&gt;\n					&lt;/div&gt;\n				</code>\n			</pre>\n		</div>\n		<h4>Example: Column wrapping</h4>\n		<p>If more than 12 columns are placed within a single row, each group of extra columns will, as one unit, wrap onto a new line.</p>\n		<div id=\"columnWrappingExample\">\n			<div class=\"row\">\n				<div class=\"col-xs-9\">.col-xs-9</div>\n				<div class=\"col-xs-4\">.col-xs-4<br>Since 9 + 4 = 13 &gt; 12, this 4-column-wide div gets wrapped onto a new line as one contiguous unit.</div>\n				<div class=\"col-xs-6\">.col-xs-6<br>Subsequent columns continue along the new line.</div>\n			</div>\n		</div>\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"html\">\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-9\"&gt;.col-xs-9&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-4\"&gt;.col-xs-4&lt;br&gt;Since 9 + 4 = 13 &gt; 12, this 4-column-wide div gets wrapped onto a new line as one contiguous unit.&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-6\"&gt;.col-xs-6&lt;br&gt;Subsequent columns continue along the new line.&lt;/div&gt;\n					&lt;/div&gt;\n				</code>\n			</pre>\n		</div>\n		<h4>Responsive column resets</h4>\n		<p>We don't provide the class \"clearfix\" for current grid system. So there is no column reset as in bootstrap.</p>\n		<h4>Example: Offsetting columns</h4>\n		<p>Move columns to the right using .offset-md-* classes. These classes increase the left margin of a column by * columns. For example, .offset-md-4 moves .col-md-4 over four columns.</p>\n		<div id=\"responsiveColumnExample\">\n			<div class=\"row\">\n				<div class=\"col-md-4\">.col-md-4</div>\n				<div class=\"col-md-4 offset-md-4\">.col-md-4 .offset-md-4</div>\n			</div>\n			<div class=\"row\">\n				<div class=\"col-md-3 offset-md-3\">.col-md-3 .offset-md-3</div>\n				<div class=\"col-md-3 offset-md-3\">.col-md-3 .offset-md-3</div>\n			</div>\n			<div class=\"row\">\n				<div class=\"col-md-6 offset-md-3\">.col-md-6 .offset-md-3</div>\n			</div>\n		</div>\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"html\">\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-4\"&gt;.col-md-4&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-4 offset-md-4\"&gt;.col-md-4 .offset-md-4&lt;/div&gt;\n					&lt;/div&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-3 offset-md-3\"&gt;.col-md-3 .offset-md-3&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-3 offset-md-3\"&gt;.col-md-3 .offset-md-3&lt;/div&gt;\n					&lt;/div&gt;\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-6 offset-md-3\"&gt;.col-md-6 .offset-md-3&lt;/div&gt;\n					&lt;/div&gt;\n				</code>\n			</pre>\n		</div>\n		<h4>Example: Nesting columns</h4>\n		<p>To nest your content with the default grid, add a new .row and set of .col-sm-* columns within an existing .col-sm-* column. Nested rows should include a set of columns that add up to 12 or fewer (it is not required that you use all 12 available columns).</p>\n		<div id=\"nestingColumnsExample\">\n			<div class=\"row\">\n				<div class=\"col-sm-9\">\n					Level 1: .col-sm-9\n					<div class=\"row\">\n						<div class=\"col-xs-8 col-sm-6\">\n							Level 2: .col-xs-8 .col-sm-6\n						</div>\n						<div class=\"col-xs-4 col-sm-6\">\n							Level 2: .col-xs-4 .col-sm-6\n						</div>\n					</div>\n				</div>\n			</div>\n		</div>\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"html\">\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-sm-9\"&gt;\n							&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Level 1: .col-sm-9\n							&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"row\"&gt;\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-8 col-sm-6\"&gt;\n									&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Level 2: .col-xs-8 .col-sm-6\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-xs-4 col-sm-6\"&gt;\n									&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Level 2: .col-xs-4 .col-sm-6\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n							&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n					&lt;/div&gt;\n				</code>\n			</pre>\n		</div>\n		<h4>Example: Column ordering</h4>\n		<p>Easily change the order of our built-in grid columns with .col-md-push-* and .col-md-pull-* modifier classes.</p>\n		<div id=\"columnOrderingExample\">\n			<div class=\"row\">\n				<div class=\"col-md-9 col-md-push-3\">.col-md-9 .col-md-push-3</div>\n				<div class=\"col-md-3 col-md-pull-9\">.col-md-3 .col-md-pull-9</div>\n			</div>\n		</div>\n		<div class=\"code-sample\">\n			<pre>\n				<code data-lang=\"html\">\n					&lt;div class=\"row\"&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-9 col-md-push-3\"&gt;.col-md-9 .col-md-push-3&lt;/div&gt;\n						&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"col-md-3 col-md-pull-9\"&gt;.col-md-3 .col-md-pull-9&lt;/div&gt;\n					&lt;/div&gt;\n				</code>\n			</pre>\n		</div>\n		<h4>Example: Flex columns adjust to the tallest column</h4>\n		<div id=\"flexHeightExample\">\n			<div class=\"row\">\n				<div class=\"col-md-6\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec pellentesque fringilla tellus, in luctus leo fermentum ac. Mauris semper in orci quis ultricies. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Integer tincidunt consectetur neque. Fusce vitae arcu placerat, ornare eros ut, euismod elit. Nunc molestie tristique volutpat. Suspendisse potenti. Vestibulum consectetur elementum vulputate.\n					Nullam vitae gravida massa, non feugiat nunc. Etiam aliquet mattis ipsum vel consequat. Sed dignissim ante nisl, quis rutrum odio pharetra eu. Phasellus leo mauris, viverra interdum dui quis, lobortis pulvinar justo. Nulla sollicitudin ac neque in convallis. Donec hendrerit efficitur erat, id interdum dolor placerat nec. Phasellus eget velit non lorem tristique placerat. Maecenas non lorem non sem congue lacinia eget ut turpis. Sed in iaculis quam. Mauris venenatis arcu eget arcu pellentesque convallis at a sapien. Proin a scelerisque enim, vitae consequat magna. Aenean eleifend mauris sit amet fringilla fermentum. Morbi facilisis tempor felis, fermentum viverra quam placerat quis. Aliquam auctor, sem at posuere imperdiet, sem enim mollis sapien, at luctus enim lectus vel lectus. Morbi laoreet hendrerit sodales.\n				</div>\n				<div class=\"col-md-6\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\n			</div>\n		</div>\n		<div class=\"note\">\n			<h5>Flex order</h5>\n			<p>If the developer changes the default value for the property 'flex-direction', he must take care of the accesibility. Refer to this link for more information: <a href=\"http://sprungmarker.de/wp-content/uploads/css-a11y-group/css-a11y-flexbox.html\" target=\"_blank\">Accesibility</a>.</p>\n		</div>\n	</section>\n</div>\n";
  });

this["JST"]["icons.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n                <label>"
    + escapeExpression(((stack1 = (depth0 && depth0.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</label>\n                <i class=\"hi page large "
    + escapeExpression(((stack1 = (depth0 && depth0['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\"></i>\n                <i class=\"hi page small "
    + escapeExpression(((stack1 = (depth0 && depth0['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\"></i>\n                <i class=\"hi navigation "
    + escapeExpression(((stack1 = (depth0 && depth0['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\"></i>\n                <br>\n           ";
  return buffer;
  }

  buffer += "<section class=\" post box clearfix\">\n<style>\n.icon-section.panel label {\n    min-width: 120px;\n    display:inline-block;\n    text-transform: capitalize;\n}\n</style>\n    <h1 class=\"entry-title\">\n        Icons\n    </h1>\n    <div class=\"meta\">\n    </div>\n</section>\n\n<div class=\"icon-section panel\" id=\"html\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.icons), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["inline-message.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Inline Message Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/inline-message/docs/design/InlineMessage.md\" target=\"_blank\">Design &amp; API Document</a>\n    </div>\n</section>\n\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;!-- Static message -->\n                    &lt;ha-inline-message&gt;\n                        &nbsp;&nbsp;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                        &nbsp;&nbsp;eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                    &lt;/ha-inline-message&gt;\n\n                    &lt;!-- Tooltip-style message -->\n                    &lt;ha-text-field label=\"First Name\">&lt;/ha-text-field>\n                    &lt;ha-inline-message targetSelector=\"_previousSibling\" trigger=\"focus\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                        eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                    &lt;/ha-inline-message>\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div class=\"declarative-wrapper\">\n            <h3>Static message</h3>\n            <ha-inline-message>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </ha-inline-message>\n            <button onclick=\"this.previousElementSibling.close()\">Dismiss</button>\n\n            <h3>Tooltip-style message</h3>\n            <ha-text-field label=\"First Name\"></ha-text-field>\n            <ha-inline-message class=\"inline-message-class-for-query-html\" position=\"bottom\" targetSelector=\"_previousSibling\" trigger=\"focus\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </ha-inline-message>\n            <button onclick=\"document.body.querySelector('.inline-message-class-for-query-html').close();\">Dismiss</button>\n\n            <h3>Tooltip-style message with interactive content</h3>\n            <ha-text-field label=\"First Name\"></ha-text-field>\n            <ha-inline-message targetSelector=\"_previousSibling\" trigger=\"focus\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.<br>\n                <a href=\"#\" onclick=\"this.parentNode.parentNode.close(); return false;\">Close</a>\n            </ha-inline-message>\n\n            <h3>Tooltip-style message with 'autoClose' attribute</h3>\n            <ha-text-field label=\"First Name\"></ha-text-field>\n            <ha-inline-message autoclose targetSelector=\"_previousSibling\" trigger=\"focus\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </ha-inline-message>\n\n            <h3>Positioning and alignment</h3>\n\n            <ha-text-field label=\"First Name\" class=\"top-right-target\"></ha-text-field>\n            <ha-inline-message autoclose position=\"top\" targetSelector=\"_previousSibling\" trigger=\"focus\">\n                Position top\n            </ha-inline-message>\n\n            <ha-text-field label=\"First Name\"></ha-text-field>\n            <ha-inline-message autoclose position=\"bottom\" targetSelector=\"_previousSibling\" trigger=\"focus\">\n                Position bottom\n            </ha-inline-message>\n            <br>\n\n            <ha-text-field label=\"First Name\"></ha-text-field>\n            <ha-inline-message autoclose position=\"right\" targetSelector=\"_previousSibling\" trigger=\"focus\">\n                Position right\n            </ha-inline-message>\n            <br>\n        </div>\n    </section>\n</div>\n\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    // Static message\n                    var staticMessage = document.createElement('ha-inline-message'),\n\n                    staticMessage.message = 'Lorem ipsum dolor ...';\n                    document.body.appendChild(staticMessage);\n\n                    // Static message with content from node\n                    var staticMessageFromNode = document.createElement('ha-inline-message'),\n                    &nbsp;&nbsp;messageContent = document.createElement('p');\n\n                    messageContent.innerHTML = '&lt;i>Lorem ipsum &lt;b>dolor&lt;/b> sit amet ...&lt;/i>';\n                    staticMessageFromNode.message = messageContent;\n                    document.body.appendChild(staticMessageFromNode);\n\n                    // Tooltip-style message\n                    var tooltipMessage = document.createElement('ha-inline-message'),\n                    &nbsp;&nbsp;textField = document.createElement('ha-text-field');\n\n                    textField.label = 'First Name';\n                    tooltipMessage.message = 'Lorem ipsum dolor ...';\n                    document.body.appendChild(textField);\n                    document.body.appendChild(tooltipMessage);\n                    tooltipMessage.targetSelector = '_previousSibling';\n                    tooltipMessage.trigger = 'focus';\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["label.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Label Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Label.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-text-field id=\"myTextField\"&gt;\n                        &lt;ha-label&gt;\n                            I am &lt;strong&gt; ha-label &lt;/strong&gt; &lt;small&gt; that overwrites default &lt;/small&gt;&lt;span&gt;label&lt;/span&gt;\n                        &lt;/ha-label&gt;\n                    &lt;/ha-text-field&gt;\n\n                    &lt;ha-textarea id=\"myTextField\"&gt;\n                        &lt;ha-label&gt;\n                            I am &lt;strong&gt; ha-label &lt;/strong&gt; &lt;small&gt; that overwrites default &lt;/small&gt;&lt;span&gt;label&lt;/span&gt;\n                        &lt;/ha-label&gt;\n                    &lt;/ha-textarea&gt;\n\n                    &lt;ha-select label=\"Some Label\" placeholder=\"Choose an item\"&gt;\n                        &lt;ha-label&gt;\n                            I am &lt;strong&gt; ha-label &lt;/strong&gt; &lt;small&gt; that overwrites default label&lt;/small&gt;\n                        &lt;/ha-label&gt;\n                        &lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                    &lt;/ha-select&gt;\n\n                    &lt;ha-checkbox-group name=\"Declarative Checkbox Group\" label=\"Checkbox Group\"&gt;\n                        &lt;ha-label&gt;\n                            I am &lt;strong&gt; ha-label &lt;/strong&gt; &lt;small&gt; that overwrites default label&lt;/small&gt;\n                        &lt;/ha-label&gt;\n                        &lt;ha-checkbox value=\"1\" name=\"Enabled-Checkbox\" label=\"Enabled Checkbox\"&gt;&lt;/ha-checkbox&gt;\n                        &lt;ha-checkbox value=\"2\" name=\"Enabled-Checkbox-Default\" label=\"Enabled Checkbox (default checked)\" checked&gt;&lt;/ha-checkbox&gt;\n                        &lt;ha-checkbox value=\"3\" name=\"Disabled-Checkbox\" label=\"Disabled Checkbox\" disabled&gt;&lt;/ha-checkbox&gt;\n                        &lt;ha-checkbox name=\"Enabled-Checkbox-Default\" label=\"Disabled Checkbox (default checked)\"  value=\"4\" checked disabled&gt;&lt;/ha-checkbox&gt;\n                        &lt;ha-checkbox value=\"off\" label=\"With value OFF\"&gt;&lt;/ha-checkbox&gt;\n                        &lt;ha-checkbox value=\"5\"&gt;&lt;/ha-checkbox&gt;\n                        &lt;ha-checkbox value=\"6\" checked&gt;&lt;/ha-checkbox&gt;\n                    &lt;/ha-checkbox-group&gt;\n\n                    &lt;ha-radio-button-group label=\"Some Label\"&gt;\n                        &lt;ha-label&gt;\n                            I am &lt;strong&gt; ha-label &lt;/strong&gt; &lt;small&gt; that overwrites default label&lt;/small&gt;\n                        &lt;/ha-label&gt;\n                        &lt;ha-radio-button label=\"Radio 1\" value=\"1\"&gt;&lt;/ha-radio-button&gt;\n                        &lt;ha-radio-button label=\"Radio 2\" value=\"2\"&gt;&lt;/ha-radio-button&gt;\n                        &lt;ha-radio-button label=\"Radio 3\" value=\"3\"&gt;&lt;/ha-radio-button&gt;\n                    &lt;/ha-radio-button-group&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    // text-field\n                    var textField = document.createElement('ha-text-field');\n                    textField.label = 'Name';\n                    textField.haLabel = complexLabel.cloneNode(true);\n                    content = div.cloneNode(true);\n                    content.appendChild(textField);\n                    placeToAppend.appendChild(content);\n\n                    // textarea\n                    var textarea = document.createElement('ha-textarea');\n                    textarea.label = 'Name';\n                    textarea.haLabel = complexLabel.cloneNode(true);\n                    content = div.cloneNode(true);\n                    content.appendChild(textarea);\n                    placeToAppend.appendChild(content);\n\n                    // select\n                    var items = [],\n                    select = document.createElement('ha-select'),\n                    i;\n\n                    for (i = 0; i &lt; 4; i++) {\n                        items[i] = document.createElement('ha-item');\n                    }\n\n                    items[0].label = 'Apple';\n                    items[0].value = 'Apple';\n                    items[1].label = 'Banana';\n                    items[1].value = 'Banana';\n                    items[2].label = 'Balloon';\n                    items[2].value = 'Balloon';\n                    items[3].label = 'Mellon';\n                    items[3].value = 'Mellon';\n\n                    select.items = [items[0], items[1], items[2], items[3]];\n                    select.label = 'Name';\n                    select.haLabel = complexLabel.cloneNode(true);\n                    content = div.cloneNode(true);\n                    content.appendChild(select);\n                    placeToAppend.appendChild(content);\n\n                    // checkbox-group\n                    var checkboxGroup = document.createElement('ha-checkbox-group'),\n                        checkbox1 = document.createElement('ha-checkbox'),\n                        checkbox2 = document.createElement('ha-checkbox'),\n                        checkbox3 = document.createElement('ha-checkbox');\n                    checkbox1.label = 'Radio 1';\n                    checkbox1.value = 1;\n                    checkbox1.disabled = true;\n                    checkbox2.label = 'Radio 2';\n                    checkbox2.value = 2;\n                    checkbox2.checked = true;\n                    checkbox3.label = 'Radio 3';\n                    checkbox3.value = 3;\n                    checkboxGroup.checkboxes = [checkbox1, checkbox2, checkbox3];\n                    checkboxGroup.selectedItem = \"2\";\n                    checkboxGroup.label = 'Some title';\n                    checkboxGroup.haLabel = complexLabel.cloneNode(true);\n                    content = div.cloneNode(true);\n                    content.appendChild(checkboxGroup);\n                    placeToAppend.appendChild(content);\n\n                    // radio-button-group\n                    var radioButtonGroup = document.createElement('ha-radio-button-group'),\n                        radioButton1 = document.createElement('ha-radio-button'),\n                        radioButton2 = document.createElement('ha-radio-button'),\n                        radioButton3 = document.createElement('ha-radio-button');\n                    radioButton1.label = 'Radio 1';\n                    radioButton1.value = 1;\n                    radioButton1.disabled = true;\n                    radioButton2.label = 'Radio 2';\n                    radioButton2.value = 2;\n                    radioButton2.checked = true;\n                    radioButton3.label = 'Radio 3';\n                    radioButton3.value = 3;\n                    radioButtonGroup.radios = [radioButton1, radioButton2, radioButton3];\n                    radioButtonGroup.selectedItem = \"2\";\n                    radioButtonGroup.label = 'Some title';\n                    radioButtonGroup.haLabel = complexLabel.cloneNode(true);\n                    content = div.cloneNode(true);\n                    content.appendChild(radioButtonGroup);\n                    placeToAppend.appendChild(content);\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HATextField&gt;\n                        &lt;HALabel&gt;\n                            I am &lt;strong&gt; HALabel &lt;/strong&gt; &lt;small&gt; that overwrites default &lt;/small&gt;&lt;span&gt;label&lt;/span&gt;\n                        &lt;/HALabel&gt;\n                    &lt;/HATextField&gt;\n\n                    &lt;HATextarea&gt;\n                        &lt;HALabel&gt;\n                            I am &lt;strong&gt; HALabel &lt;/strong&gt; &lt;small&gt; that overwrites default &lt;/small&gt;&lt;span&gt;label&lt;/span&gt;\n                        &lt;/HALabel&gt;\n                    &lt;/HATextarea&gt;\n\n                    &lt;HATextField&gt;\n                        &lt;HALabel&gt;\n                            &lt;div&gt;I am&lt;/div&gt; &lt;strong&gt; HALabel &lt;/strong&gt; &lt;small&gt; that overwrites default label&lt;/small&gt;\n                        &lt;/HALabel&gt;\n                    &lt;/HATextField&gt;\n\n                    &lt;HASelect label=\"Some Label\" placeholder=\"Choose an item\"&gt;\n                        &lt;HALabel&gt;\n                            I am &lt;strong&gt; HALabel &lt;/strong&gt; &lt;small&gt; that overwrites default label&lt;/small&gt;\n                        &lt;/HALabel&gt;\n                        &lt;HAItem value=\"AppleValue\"&gt;Apple&lt;/HAItem&gt;\n                        &lt;HAItem value=\"BananaValue\"&gt;Banana&lt;/HAItem&gt;\n                        &lt;HAItem value=\"BalloonValue\"&gt;Balloon&lt;/HAItem&gt;\n                        &lt;HAItem value=\"MelonValue\"&gt;Melon&lt;/HAItem&gt;\n                    &lt;/HASelect&gt;\n\n                    &lt;HACheckboxGroup name=\"Declarative Checkbox Group\" label=\"Checkbox Group\"&gt;\n                        &lt;HALabel&gt;\n                            I am &lt;strong&gt; HALabel &lt;/strong&gt; &lt;small&gt; that overwrites default label&lt;/small&gt;\n                        &lt;/HALabel&gt;\n                        &lt;HACheckbox value=\"1\" name=\"Enabled-Checkbox\" label=\"Enabled Checkbox\"&gt;&lt;/HACheckbox&gt;\n                        &lt;HACheckbox value=\"2\" name=\"Enabled-Checkbox-Default\" label=\"Enabled Checkbox (default checked)\" checked&gt;&lt;/HACheckbox&gt;\n                        &lt;HACheckbox value=\"3\" name=\"Disabled-Checkbox\" label=\"Disabled Checkbox\" disabled&gt;&lt;/HACheckbox&gt;\n                        &lt;HACheckbox name=\"Enabled-Checkbox-Default\" label=\"Disabled Checkbox (default checked)\"  value=\"4\" checked disabled&gt;&lt;/HACheckbox&gt;\n                        &lt;HACheckbox value=\"off\" label=\"With value OFF\"&gt;&lt;/HACheckbox&gt;\n                        &lt;HACheckbox value=\"5\"&gt;&lt;/HACheckbox&gt;\n                        &lt;HACheckbox value=\"6\" checked&gt;&lt;/HACheckbox&gt;\n                    &lt;/HACheckboxGroup&gt;\n\n                    &lt;HARadioButtonGroup label=\"Some Label\"&gt;\n                        &lt;HALabel&gt;\n                            I am &lt;strong&gt; HALabel &lt;/strong&gt; &lt;small&gt; that overwrites default label&lt;/small&gt;\n                        &lt;/HALabel&gt;\n                        &lt;HARadioButton label=\"Radio 1\" value=\"1\"&gt;&lt;/HARadioButton&gt;\n                        &lt;HARadioButton label=\"Radio 2\" value=\"2\"&gt;&lt;/HARadioButton&gt;\n                        &lt;HARadioButton label=\"Radio 3\" value=\"3\"&gt;&lt;/HARadioButton&gt;\n                    &lt;/HARadioButtonGroup&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"reactWay\">\n        </div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["simple-list.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Simple List Component\n    </h1>\n\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/List.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-list titleText=\"Single select list\"&gt;\n                        &nbsp;&nbsp;&lt;li&gt;First list item&lt;/li&gt;\n                        &nbsp;&nbsp;&lt;li&gt;Second list item&lt;/li&gt;\n                        &nbsp;&nbsp;&lt;li&gt;Third list item&lt;/li&gt;\n                    &lt;/ha-list&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <ha-list titleText=\"Single select list\">\n            <li>First list item</li>\n            <li>Second list item</li>\n            <li>Third list item</li>\n        </ha-list>\n\n        <!-- <ha-list id=\"list-1\" titleText=\"Single select list with control in default position\">\n            <li><ha-checkbox></ha-checkbox>First list item</li>\n            <li><ha-checkbox></ha-checkbox>Second list item</li>\n            <li><ha-checkbox></ha-checkbox>Third list item</li>\n        </ha-list> -->\n\n        <!-- <ha-list id=\"list-2\" titleText=\"Single select list with control in right position\">\n            <li>First list item<ha-checkbox></ha-checkbox></li>\n            <li>Second list item<ha-checkbox></ha-checkbox></li>\n            <li>Third list item<ha-checkbox></ha-checkbox></li>\n        </ha-list> -->\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var list = document.createElement(\"ha-list\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item1 = document.createElement(\"li\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item2 = document.createElement(\"li\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item3 = document.createElement(\"li\");\n\n                    list.complexity = \"basic\";\n                    list.titleText = \"A basic harmony list\";\n\n                    // optionally add a control as a child to item1\n                    item1.innerHTML = \"First list item\";\n\n                    // optionally add a control as a child to item2\n                    item2.innerHTML = \"Second list item\";\n\n                    // optionally add a control as a child to item3\n                    item3.innerHTML = \"Third list item\";\n\n                    list.items = [item1, item2, item3];\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                  &lt;HAList titleText=\"Single select list\"&gt;\n                  &nbsp; &lt;li&gt;First list item&lt;/li&gt;\n                  &nbsp; &lt;li&gt;Second list item&lt;/li&gt;\n                  &nbsp; &lt;li&gt;Third list item&lt;/li&gt;\n                  &lt;/HAList&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"reactWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["menu-button.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Menu Button Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/MenuButton.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n\n        <div class=\"highlight\">\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    NEW WAY:\n\n                    &lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                    &lt;/ha-menu-button&gt;\n\n                    &lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\" disabled&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\" disabled&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                    &lt;/ha-menu-button&gt;\n\n                    &lt;ha-menu-button icon=\"hi-send\" class=\"ha-button-primary\" label=\"Create New\" disabled&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\" disabled&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                    &lt;/ha-menu-button&gt;\n\n                    &lt;ha-menu-button addMobileCancelOption class=&quot;ha-button-primary&quot; label=&quot;Create New&quot;&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=&quot;AppleValue&quot;&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=&quot;BananaValue&quot;&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=&quot;BalloonValue&quot;&gt;Balloon&lt;/ha-item&gt;\n                    &lt;/ha-menu-button&gt;\n\n                    DEPRECATED WAY:\n\n                    &lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                        &nbsp;&nbsp;&lt;ha-popover&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Apple&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Banana&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Balloon&lt;/ha-menu-item&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-item&gt;Melon&lt;/ha-menu-item&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu&gt;\n                        &nbsp;&nbsp;&lt;/ha-popover&gt;\n                    &lt;/ha-menu-button&gt;\n                </code>\n            </pre>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div class=\"container-menu-button\">\n            <ha-menu-button class=\"ha-button-primary\" label=\"Create New\" disabled>\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-menu-button>\n            <ha-menu-button class=\"ha-button-primary\" label=\"Create New right now\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\" disabled>Balloon</ha-item>\n                <ha-item value=\"MelonValue\">Melon</ha-item>\n            </ha-menu-button>\n            <ha-menu-button icon=\"hi-unlock\" class=\"ha-button-primary\" label=\"Create New right now\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\" disabled>Balloon</ha-item>\n                <ha-item value=\"MelonValue\">Melon</ha-item>\n            </ha-menu-button>\n            <ha-menu-button icon=\"hi-filter\" class=\"ha-button-primary\" label=\"Create New right now\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\" disabled>Balloon</ha-item>\n                <ha-item value=\"MelonValue\">Melon</ha-item>\n            </ha-menu-button>\n            <ha-menu-button label=\"Create New\" disabled>\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-menu-button>\n            <ha-menu-button label=\"Create New\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\" disabled>Balloon</ha-item>\n                <ha-item value=\"MelonValue\">Melon</ha-item>\n            </ha-menu-button>\n        </div>\n        <div class=\"container-menu-button content-dark\">\n            <ha-menu-button class=\"ha-button-dark\" label=\"Create New\" disabled>\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-menu-button>\n            <ha-menu-button class=\"ha-button-dark\" label=\"Create New\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-menu-button>\n            <ha-menu-button icon=\"hi-send\" class=\"ha-button-dark\" label=\"Create New\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-menu-button>\n        </div>\n        <h3>With Disabled Items</h3>\n        <div class=\"container-menu-button container-disabled-items\">\n             <ha-menu-button class=\"ha-button-primary\" label=\"Create New\">\n                 <ha-item value=\"AppleValue\" disabled=\"disabled\">Apple</ha-item>\n                 <ha-item value=\"BananaValue\">Banana</ha-item>\n                 <ha-item value=\"BalloonValue\">Balloon</ha-item>\n             </ha-menu-button>\n        </div>\n        <h3 class=\"hidden-desktop hidden-tablet\">With Cancel Option</h3>\n        <div class=\"hidden-desktop hidden-tablet container-menu-button\">\n            <ha-menu-button addMobileCancelOption class=\"ha-button-primary\" label=\"Create New\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-menu-button>\n            <ha-menu-button mobileCancelText=\"Cancel Selection\" class=\"ha-button-primary\" label=\"Create New\">\n                <ha-item value=\"AppleValue\">Apple</ha-item>\n                <ha-item value=\"BananaValue\">Banana</ha-item>\n                <ha-item value=\"BalloonValue\">Balloon</ha-item>\n            </ha-menu-button>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    NEW WAY:\n\n                    var menuButton = document.createElement('ha-menu-button'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item1 = document.createElement('ha-item'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item2 = document.createElement('ha-item'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item3 = document.createElement('ha-item'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item4 = document.createElement('ha-item');\n\n                    item1.label = 'Apple';\n                    item1.value = 'AppleValue';\n                    item2.label = 'Banana';\n                    item2.value = 'BananaValue';\n                    item3.label = 'Ballon';\n                    item3.value = 'BalloonValue';\n                    item4.label = 'Melon';\n                    item4.value = 'MelonValue';\n\n                    menuButton.classList.add('ha-button-primary');\n                    menuButton.label = 'Fruits';\n                    menuButton.disabled = false;\n                    menuButton.items = [item1, item2, item3, item4];\n                    menuButton.icon = 'hi-send';\n                    menuButton.mobileCancelText = 'Cancel Selection';\n\n                    //DEPRECATED WAY:\n\n                    var menuButton = document.createElement(\"ha-menu-button\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;popover = document.createElement(\"ha-popover\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;menu = document.createElement(\"ha-menu\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item1 = document.createElement(\"ha-menu-item\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;item2 = document.createElement(\"ha-menu-item\"),\n\n                    item1.label = \"Basic paragraph style\";\n                    item2.label = \"Basic paragraph style\";\n\n                    menu.items = [item1, item2];\n\n                    popover.addContent(menu);\n\n                    menuButton.classList.add(\"ha-button-primary\");\n                    menuButton.label = \"Create New\";\n                    menuButton.disabled = false;\n                    menuButton.popover = popover;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"programmaticWay\"></div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"dojoProgrammaticWay\"></div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                        &lt;HAMenuButton placeholder=\"Choose a method\" label=\"Same title\"&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"AppleValue\"&gt;Apple&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"BananaValue\"&gt;Banana&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"BalloonValue\"&gt;Balloon&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"MelonValue\"&gt;Melon&lt;/HAItem&gt;\n                        &lt;/HAMenuButton&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"reactWay\"></div>\n    </section>\n</div>\n";
  });

this["JST"]["modal.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Modal Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Modal.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    LARGE MODAL\n\n                    &lt;ha-modal titleText=\"Large Confirmation Modal\" size=\"large\" type=\"confirm\"&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/section&gt;\n                        &nbsp;&nbsp;&lt;footer&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/footer&gt;\n                    &lt;/ha-modal&gt;\n\n                    LARGE MODAL WITH ENDFLOW\n\n                    &lt;ha-modal titleText=\"Large Modal With Endflow\" size=\"large\" type=\"endflow\"&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/section&gt;\n                        &nbsp;&nbsp;&lt;footer&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/footer&gt;\n                    &lt;/ha-modal&gt;\n\n                    MEDIUM MODAL\n\n                    &lt;ha-modal titleText=\"Medium Modal\" size=\"medium\"&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/section&gt;\n                        &nbsp;&nbsp;&lt;footer&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/footer&gt;\n                    &lt;/ha-modal&gt;\n\n                    SMALL MODAL\n\n                    &lt;ha-modal titleText=\"Small Modal\" size=\"small\"&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/section&gt;\n                        &nbsp;&nbsp;&lt;footer&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/footer&gt;\n                    &lt;/ha-modal&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div class=\"declarative-wrapper\">\n            <ha-modal id=\"declarative-large-modal\" titleText=\"Payment confirmation\" size=\"large\" type=\"confirm\">\n                <section>\n                    <p class=\"large-modal-content\">\n                        <label>Payment Method:\n                        </label>\n                        <span>Manual</span>\n                        <br>\n                        <label>Payment Type:\n                        </label>\n                        <span>CA SUI/ETT</span>\n                        <br>\n                        <label>Liability Period:\n                        </label>\n                        <span>01/01/2013 to 03/31/2013</span>\n                        <br>\n                        <label>Due Date:\n                        </label>\n                        <span>04/31/2013</span>\n                        <br>\n                        <label>Payment Date:\n                        </label>\n                        <span>04/31/2013</span>\n                        <br>\n                        <label>Payment Amount:\n                        </label>\n                        <span>$177.70</span>\n                        <br>\n                    </p>\n                    <h4>What’s Next?</h4>\n                    <p>Print they payment coupon and follow the instructions on the form.</p>\n\n                </section>\n                <footer>\n                    <button class=\"close-button-1 ha-button\">Skip for now</button>\n                    <button class=\"close-button-1 ha-button ha-button-primary\">Print Payment Coupon</button>\n                </footer>\n            </ha-modal>\n\n            <ha-modal id=\"declarative-large-modal-endflow\" titleText=\"Bank account added!\" size=\"large\" type=\"endflow\">\n                <section>\n                    <p>Now that we’ve connected to your bank, let’s get your customers into QuickBooks.</p>\n                </section>\n                <aside>\n                    <h3>What's Next?</h3>\n                    <i class=\"hi hi-circle-check\"/></i>\n                <span>Turn on the Assistant</span>\n            </aside>\n            <footer>\n                <button class=\"close-button-2 ha-button\">No thanks</button>\n                <button class=\"close-button-2 ha-button ha-button-primary\">Let’s do it</button>\n            </footer>\n        </ha-modal>\n\n        <ha-modal id=\"declarative-medium-modal-one\" titleText=\"Title\" size=\"medium\" dismissible=\"true\">\n            <section>\n                <p>Important! You have not entered tax payments created prior to using our payroll service. It’s important to reconcile the taxes you have paid with the taxes your company accrued so that your year-end forms will be correct. Enter ths information now and resolve any discrepancies.</p>\n            </section>\n            <footer>\n                <button class=\"close-button-3 ha-button ha-button-primary\">Primary</button>\n            </footer>\n        </ha-modal>\n\n        <ha-modal id=\"declarative-medium-modal-two\" titleText=\"Title\" size=\"medium\" dismissible=\"true\">\n            <section>\n                <p>Important! You have not entered tax payments created prior to using our payroll service. It’s important to reconcile the taxes you have paid with the taxes your company accrued so that your year-end forms will be correct. Enter ths information now and resolve any discrepancies.</p>\n            </section>\n            <footer>\n                <button class=\"close-button-3 ha-button\">Secondary</button>\n                <button class=\"close-button-3 ha-button ha-button-primary\">Primary</button>\n            </footer>\n        </ha-modal>\n\n        <ha-modal id=\"declarative-medium-modal-three\" titleText=\"Title\" size=\"medium\" dismissible=\"true\">\n            <section>\n                <p>Important! You have not entered tax payments created prior to using our payroll service. It’s important to reconcile the taxes you have paid with the taxes your company accrued so that your year-end forms will be correct. Enter ths information now and resolve any discrepancies.</p>\n            </section>\n            <footer>\n                <button class=\"close-button-3 ha-button\">Tertiary</button>\n                <button class=\"close-button-3 ha-button\">Secondary</button>\n                <button class=\"close-button-3 ha-button ha-button-primary\">Primary</button>\n            </footer>\n        </ha-modal>\n\n        <ha-modal id=\"declarative-medium-error-modal\" titleText=\"Title\" size=\"medium\" type=\"error\" dismissible=\"true\">\n            <section>\n                <p>Important! You have not entered tax payments created prior to using our payroll service. It’s important to reconcile the taxes you have paid with the taxes your company accrued so that your year-end forms will be correct. Enter ths information now and resolve any discrepancies.</p>\n            </section>\n            <footer>\n                <button class=\"close-button-3 ha-button ha-button-primary\">Primary</button>\n            </footer>\n        </ha-modal>\n\n        <ha-modal id=\"declarative-small-error-modal\" titleText=\"Your work will be lost if you navigate away from this page!\" size=\"small\" type=\"error\">\n            <section>\n                <p>This is a small Error Modal text!</p>\n            </section>\n            <footer>\n                <button class=\"close-button-4 ha-button\">Cancel</button>\n                <button class=\"close-button-4 ha-button ha-button-primary\">Continue</button>\n            </footer>\n        </ha-modal>\n\n        <ha-modal id=\"declarative-small-confirm-modal\" titleText=\"Bank account added!\" size=\"small\" type=\"confirm\">\n            <section>\n                <p>Now that we’ve connected to your bank, let’s get your customers into QuickBooks.</p>\n            </section>\n            <footer>\n                <button class=\"close-button-5 ha-button\">No thanks</button>\n                <button class=\"close-button-5 ha-button ha-button-primary\">Let’s do it</button>\n            </footer>\n        </ha-modal>\n\n        <ha-modal id=\"declarative-small-modal\" titleText=\"Small Modal Title\">\n            <section>\n                <p>This is a small Modal text!</p>\n            </section>\n            <footer>\n                <button class=\"close-button-6 ha-button ha-button-primary\">Continue</button>\n            </footer>\n        </ha-modal>\n    </div>\n</section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n<section class=\"usage\">\n    <header class=\"title\">\n        <a>Usage</a>\n    </header>\n    <div class=\"highlight\">\n        <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var modal = document.createElement(\"ha-modal\");\n\n                    modal.id = id;\n                    modal.titleText = 'title'\n                    modal.size = 'small' / 'medium' / 'large';\n                    modal.type = 'confirm' / 'error' / 'warn' / 'info' / 'endflow';\n                    modal.dismissible = true / false;\n                    modal.message = HTMLELement / Array of HTMLELement;\n                    modal.buttons = HTMLELement / Array of HTMLELement;\n                    modal.extraInfo = HTMLELement / Array of HTMLELement;\n                </code>\n            </pre>\n    </div>\n</section>\n\n<section class=\"examples\">\n    <header class=\"title\">\n        <a>Examples</a>\n    </header>\n    <div id=\"programmaticWay\"></div>\n</section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n<section class=\"examples\">\n    <header class=\"title\">\n        <a>Examples</a>\n    </header>\n    <div id=\"dojoProgrammaticWay\"></div>\n</section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n<section class=\"usage\">\n    <header class=\"title\">\n        <a>Usage</a>\n    </header>\n\n    <div class=\"highlight\">\n        <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    LARGE MODAL WITH ENDFLOW\n\n                    &lt;HAModal show={this.state.showModal} type=\"endflow\" title=\"I AM A MODAL TITLE!!!!!\" dismissible={true} size=\"large\"&gt;\n                        &nbsp;&nbsp;&lt;HASection&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/HASection&gt;\n                        &nbsp;&nbsp;&lt;HAAside&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/HAAside&gt;\n                        &nbsp;&nbsp;&lt;HAFooter&gt;\n                        &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/HAFooter&gt;\n                    &lt;/HAModal&gt;\n                </code>\n            </pre>\n    </div>\n</section>\n\n<section class=\"examples\">\n    <header class=\"title\">\n        <a>Examples</a>\n    </header>\n    <div id=\"reactWay\"></div>\n</section>\n</div>";
  });

this["JST"]["money-bar.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Money Bar Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/MoneyBar.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-money-bar&gt;\n                        &nbsp;&nbsp;&lt;ha-money-bar-segment titleTextBold=\"50\" titleText=\"Unbilled\"&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-money-bar-cell class=\"mbDarkBlue\" primaryText=\"$50.00\" secondaryText=\"2 ESTIMATE\"&gt;&lt;/ha-money-bar-cell&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-money-bar-cell class=\"mbLightBlue\" primaryText=\"$50.00\" secondaryText=\"2 UNBILLED ACTIVITY\"&gt;&lt;/ha-money-bar-cell&gt;\n                        &nbsp;&nbsp;&lt;/ha-money-bar-segment&gt;\n\n                        &nbsp;&nbsp;&lt;ha-money-bar-segment titleTextBold=\"50\" titleText=\"Unpaid\"&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-money-bar-cell class=\"mbOrange outlay\" primaryText=\"$50.00\" secondaryText=\"2 OPEN INVOICES\"&gt;&lt;/ha-money-bar-cell&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-money-bar-cell class=\"mbRed inlay\" primaryText=\"$50.00\" secondaryText=\"2 OVERDUE\"&gt;&lt;/ha-money-bar-cell&gt;\n                        &nbsp;&nbsp;&lt;/ha-money-bar-segment&gt;\n\n                        &nbsp;&nbsp;&lt;ha-money-bar-segment titleTextBold=\"50\" titleText=\"Paid\" size=\"1\"&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-money-bar-cell class=\"mbGreen\" primaryText=\"$50.00\" secondaryText=\"2 PAID LAST 30 DAYS\"&gt;&lt;/ha-money-bar-cell&gt;\n                        &nbsp;&nbsp;&lt;/ha-money-bar-segment&gt;\n                    &lt;/ha-money-bar&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var moneyBarComponent = document.createElement(\"ha-money-bar\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mbSeg1 = document.createElement(\"ha-money-bar-segment\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mbSeg2 = document.createElement(\"ha-money-bar-segment\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mbSeg3 = document.createElement(\"ha-money-bar-segment\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mbcell1 = document.createElement(\"ha-money-bar-cell\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mbcell2 = document.createElement(\"ha-money-bar-cell\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mbcell3 = document.createElement(\"ha-money-bar-cell\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mbcell4 = document.createElement(\"ha-money-bar-cell\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mbcell5 = document.createElement(\"ha-money-bar-cell\");\n\n                    mbcell1.primaryText = \"$50.00\";\n                    mbcell1.secondaryText = \"2 ESTIMATES\";\n                    mbcell1.classList.add('mbDarkBlue');\n\n                    mbcell2.primaryText = \"$500.00\";\n                    mbcell2.secondaryText = \"20 UNBILLED ACTIVITY\";\n                    mbcell2.classList.add('mbLightBlue');\n\n                    mbcell3.primaryText = \"$100.00\";\n                    mbcell3.secondaryText = \"40 OPEN INVOICES\";\n                    mbcell3.classList.add('mbOrange');\n                    mbcell3.classList.add('outlay');\n\n                    mbcell4.primaryText = \"$500.00\";\n                    mbcell4.secondaryText = \"2 OVERDUE INVOICES\";\n                    mbcell4.classList.add('mbRed');\n                    mbcell4.classList.add('inlay');\n\n                    mbcell5.primaryText = \"$150.00\";\n                    mbcell5.secondaryText = \"2 PAID LAST 30 DAYS\";\n                    mbcell5.classList.add('mbGreen');\n\n                    mbSeg1.titleTextBold = \"22\";\n                    mbSeg1.titleText = \"Unbilled\";\n                    mbSeg1.cells = [mbcell1, mbcell2];\n\n                    mbSeg2.titleTextBold = \"42\";\n                    mbSeg2.titleText = \"Unpaid\";\n                    mbSeg2.cells = [mbcell3, mbcell4];\n\n                    mbSeg3.titleTextBold = \"2\";\n                    mbSeg3.titleText = \"Paid\";\n                    mbSeg3.cells = [mbcell5];\n                    mbSeg3.size = '1';\n\n                    moneyBarComponent.segments = [mbSeg1, mbSeg2, mbSeg3];\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["numeric-badge.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Numeric Badges\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n</section>\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;i class=\"ha-numeric-badge\"&gt;5&lt;/i&gt;\n                    &lt;i class=\"ha-numeric-badge\"&gt;99&lt;/i&gt;\n                    &lt;i class=\"ha-numeric-badge\"&gt;885&lt;/i&gt;\n                    &lt;i class=\"ha-numeric-badge\"&gt;999&lt;span class=\"ha-plus-span\"&gt;+&lt;/span&gt;&lt;/i&gt;\n\n                    &lt;i class=\"ha-numeric-badge ha-inverse\"&gt;5&lt;/i&gt;\n                    &lt;i class=\"ha-numeric-badge ha-inverse\"&gt;99&lt;/i&gt;\n                    &lt;i class=\"ha-numeric-badge ha-inverse\"&gt;885&lt;/i&gt;\n                    &lt;i class=\"ha-numeric-badge ha-inverse\"&gt;999&lt;span class=\"ha-plus-span\"&gt;+&lt;/span&gt;&lt;/i&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            <div class=\"separator\">\n                <i class=\"ha-numeric-badge\">5</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-numeric-badge\">99</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-numeric-badge\">885</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-numeric-badge\">999<span class=\"ha-plus-span\">+</span></i>\n            </div>\n        </div>\n\n        <div>\n            <div class=\"separator\">\n                <i class=\"ha-numeric-badge ha-inverse\">5</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-numeric-badge ha-inverse\">99</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-numeric-badge ha-inverse\">885</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-numeric-badge ha-inverse\">999<span class=\"ha-plus-span\">+</span></i>\n            </div>\n        </div>\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"plain\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;button&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button-primary\"&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button-dark\"&gt;&lt;/button&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>";
  });

this["JST"]["page-message.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<style>\n.ha-message{\n    margin-bottom: 10px;\n}\n</style>\n<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Page Level Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/PageMessage.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-page-message titleText=\"Info Title\" type=\"error\" dismissible=\"true\"&gt;\n                        &nbsp;&nbsp;Lorem ipsum dolor sit amet...\n                    &lt;/ha-page-message&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div class=\"declarative-wrapper\">\n            <ha-page-message titleText=\"Alert Title\" type=\"error\" dismissible=\"false\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </ha-page-message>\n            <ha-page-message titleText=\"Warn Title\" type=\"warn\" dismissible=\"true\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </ha-page-message>\n            <ha-page-message titleText=\"Info Title\" type=\"info\" dismissible=\"true\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </ha-page-message>\n            <ha-page-message titleText=\"Discovery Title\" type=\"discovery\" dismissible=\"true\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </ha-page-message>\n            <ha-page-message type=\"info\" dismissible=\"true\">\n                No titleText. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </ha-page-message>\n            <ha-page-message type=\"info\" dismissible=\"true\">\n                <span>Using html inside the message with <a>links</a> no titleText</span>\n            </ha-page-message>\n            <ha-page-message titleText=\"With Title\" type=\"info\" dismissible=\"true\">\n                <span>Using html inside the message with <a>links</a> with titleText</span>\n            </ha-page-message>\n        </div>\n    </section>\n</div>\n\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var node = document.createElement(\"ha-page-message\");\n\n                    node.titleText = \"Info Title\";\n                    node.dismissible = true;\n                    node.type = \"info\";\n                    node.message = \"Lorem ipsum dolor sit amet...\"\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n<section class=\"usage\">\n    <header class=\"title\">\n        <a>Usage</a>\n    </header>\n\n    <div class=\"highlight\">\n        <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HAPageMessage titleText=\"Look a title! & it's dismissible!\" type=\"info\"&gt;\n                        Let's put something here...\n                    &lt;/HAPageMessage&gt;\n\n                    &lt;HAPageMessage titleText=\"Look a title!\" dismissible={false} type=\"error\"&gt;\n                        Oh No!\n                    &lt;/HAPageMessage&gt;\n                </code>\n            </pre>\n    </div>\n</section>\n\n<section class=\"examples\">\n    <header class=\"title\">\n        <a>Examples</a>\n    </header>\n    <div id=\"reactWay\"></div>\n</section>\n</div>";
  });

this["JST"]["paginated-messages.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<style>\r\n.ha-paginated-messages{\r\n    margin-bottom: 10px;\r\n}\r\n</style>\r\n<section class=\"post box clearfix\">\r\n    <h1 class=\"entry-title\">\r\n        Paginated Messages Component\r\n    </h1>\r\n    <div class=\"meta\">\r\n        <ha-segmented-button class=\"usage-tab-buttons\">\r\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\r\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\r\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\r\n        </ha-segmented-button>\r\n    </div>\r\n   <div class = \"design-document\">\r\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/PaginatedMessages.md\" target=\"_blank\">Design & API Document</a>\r\n    </div>\r\n</section>\r\n\r\n<div class=\"panel\" id=\"html\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\"><a>Usage</a></header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code>\r\n                    &lt;ha-paginated-messages dismissible&gt;\r\n                        &nbsp;&nbsp;&lt;ha-paginated-message titleText=\"Your trial expires in 7 days!\" dismissible&gt;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;Feel free to keep testing QuickBooks. &lt;a href=\"#\"&gt;Subscribe now and save 20%&lt;/a&gt;&lt;/span&gt;\r\n                        &nbsp;&nbsp;&lt;/ha-paginated-message&gt;\r\n\r\n                        &nbsp;&nbsp;&lt;ha-paginated-message titleText=\"Your sesion is about to expire!\" dismissible&gt;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;Please refresh the page&lt;/span&gt;\r\n                        &nbsp;&nbsp;&lt;/ha-paginated-message&gt;\r\n\r\n                        &nbsp;&nbsp;&lt;ha-paginated-message titleText=\"This is an alert\"&gt;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;This is an alert message&lt;/span&gt;\r\n                        &nbsp;&nbsp;&lt;/ha-paginated-message&gt;\r\n                    &lt;/ha-paginated-messages&gt;\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n    </section>\r\n</div>\r\n\r\n<div class=\"panel hidden\" id=\"js\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\"><a>Usage</a></header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"language-html\" data-lang=\"html\">\r\n                    var node1 = document.createElement('ha-paginated-messages'),\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;message1 = document.createElement('ha-paginated-message'),\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;message2 = document.createElement('ha-paginated-message'),\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;message3 = document.createElement('ha-paginated-message');\r\n\r\n                    message1.titleText = \"Title 1\";\r\n                    message1.message = \"Lorem ipsum dolor sit amet.\";\r\n\r\n                    message2.titleText = \"Title 2\";\r\n                    message2.message = \"Lorem ipsum dolor sit amet.\";\r\n\r\n                    message3.titleText = \"Title 3\";\r\n                    message3.message = \"Lorem ipsum dolor sit amet.\";\r\n\r\n                    node1.messages = [message1, message2, message3];\r\n                    node1.dismissible = true;\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        <div id=\"programmaticWay\">\r\n        </div>\r\n    </section>\r\n</div>\r\n\r\n<div class=\"panel hidden\" id=\"dojo\">\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        <div id=\"dojoProgrammaticWay\">\r\n        </div>\r\n    </section>\r\n</div>\r\n";
  return buffer;
  });

this["JST"]["popover.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Popover Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Popover.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;button class=\"ha-button\" id=\"test\" onclick=\"this.nextElementSibling.show()\"&gt;Show Popover&lt;/button&gt;\n                    &lt;ha-popover&gt;\n                        &nbsp;&nbsp;&lt;ha-popover-form&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-text-field label=\"Name\"&gt;&lt;/ha-text-field&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-text-field label=\"Name with Placeholder\" placeholder=\"Your name\"&gt;&lt;/ha-text-field&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;footer&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button class=\"ha-button\" onclick=\"this.parentNode.parentNode.parentNode.close();\"&gt;Cancel&lt;/button&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button class=\"ha-button\" onclick=\"alert('save');this.parentNode.parentNode.parentNode.close();\"&gt;Save&lt;/button&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/footer&gt;\n                        &nbsp;&nbsp;&lt;/ha-popover-form&gt;\n                    &lt;/ha-popover&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var button = document.createElement('button'),\n                        &nbsp;&nbsp;&nbsp;&nbsp;popover = document.createElement('ha-popover'),\n                        &nbsp;&nbsp;&nbsp;&nbsp;popoverForm = document.createElement('ha-popover-form');\n\n                    button.id = 'buttonTarget';\n                    placeToAppend.appendChild(button);\n\n                    popoverForm.section = sectionContent;\n                    popoverForm.footer = footerContent;\n\n                    popover.targetSelector = '#' + button.id;\n                    popover.appendChild(popoverForm);\n\n                    placeToAppend.appendChild(popover);\n\n                    button.onclick = function() {\n                    &nbsp;&nbsp;popover.show();\n                    };\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["radiobutton.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Radio Button Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/RadioButtonGroup.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-radio-button-group label=\"Some Label\" name=\"radioWithName\"&gt;\n                    &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 1\" value=\"1\" disabled&gt;&lt;/ha-radio-button&gt;\n                    &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 2\" value=\"2\" checked&gt;&lt;/ha-radio-button&gt;\n                    &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 3\" value=\"3\"&gt;&lt;/ha-radio-button&gt;\n                    &lt;/ha-radio-button-group&gt;\n\n                    &lt;ha-radio-button-group label=\"With expected validation\" expected=\"2\" required&gt;\n                    &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 1\" value=\"1\"&gt;&lt;/ha-radio-button&gt;\n                    &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 2\" value=\"2\"&gt;&lt;/ha-radio-button&gt;\n                    &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 3\" value=\"3\"&gt;&lt;/ha-radio-button&gt;\n                    &lt;/ha-radio-button-group&gt;\n\n                    &lt;ha-radio-button-group label=\"Inline\" class=\"ha-inline\"&gt;\n                        &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 1\" value=\"1\"&gt;&lt;/ha-radio-button&gt;\n                        &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 2\" value=\"2\"&gt;&lt;/ha-radio-button&gt;\n                        &nbsp;&nbsp;&lt;ha-radio-button label=\"Radio 3\" value=\"3\"&gt;&lt;/ha-radio-button&gt;\n                    &lt;/ha-radio-button-group&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var radioButtonGroup = document.createElement('ha-radio-button-group'),\n                        &nbsp;&nbsp;&nbsp;&nbsp;radioButton1 = document.createElement('ha-radio-button'),\n                        &nbsp;&nbsp;&nbsp;&nbsp;radioButton2 = document.createElement('ha-radio-button'),\n                        &nbsp;&nbsp;&nbsp;&nbsp;radioButton3 = document.createElement('ha-radio-button');\n\n                    radioButton1.label = 'Radio 1';\n                    radioButton1.value = 1;\n                    radioButton1.disabled = true;\n\n                    radioButton2.label = 'Radio 2';\n                    radioButton2.value = 2;\n                    radioButton2.checked = true;\n\n                    radioButton3.label = 'Radio 3';\n                    radioButton3.value = 3;\n\n                    radioButtonGroup.radios = [radioButton1, radioButton2, radioButton3];\n                    radioButtonGroup.selectedItem = \"2\";\n                    radioButtonGroup.label = 'Some title';\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\"></section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HARadioButtonGroup label=\"Some Label\" name=\"radioWithName\" &gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 1\" value=\"1\" disabled &gt;&lt;/HARadioButton&gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 2\" value=\"2\" checked &gt;&lt;/HARadioButton&gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 3\" value=\"3\"&gt;&lt;/HARadioButton&gt;\n                    &lt;/HARadioButtonGroup&gt;\n\n                    &lt;HARadioButtonGroup label=\"With expected validation\" expected=\"2\" required={true}&gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 1\" value=\"1\" disabled &gt;&lt;/HARadioButton&gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 2\" value=\"2\"  checked &gt;&lt;/HARadioButton&gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 3\" value=\"3\"&gt;&lt;/HARadioButton&gt;\n                    &lt;/HARadioButtonGroup&gt;\n\n                    &lt;HARadioButtonGroup label=\"Inline\" className=\"ha-inline\"&gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 1\" value=\"1\"&gt;&lt;/HARadioButton&gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 2\" value=\"2\"&gt;&lt;/HARadioButton&gt;\n                        &nbsp;&nbsp;&lt;HARadioButton label=\"Radio 3\" value=\"3\"&gt;&lt;/HARadioButton&gt;\n                    &lt;/HARadioButtonGroup&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\"></section>\n</div>\n";
  return buffer;
  });

this["JST"]["segmented-button.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Segmented Button Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n    <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/SegmentedButton.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-segmented-button&gt;\n                        &nbsp;&nbsp;&lt;button value=\"credit\" title=\"Credit\"&gt;Credit / Debit&lt;/button&gt;\n                        &nbsp;&nbsp;&lt;button value=\"cash\" title=\"Cash\"&gt;Cash&lt;/button&gt;\n                        &nbsp;&nbsp;&lt;button value=\"check\" title=\"Check\"&gt;Check&lt;/button&gt;\n                    &lt;/ha-segmented-button&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var segmentedButton = document.createElement(\"ha-segmented-button\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;segmentedOption = document.createElement(\"button\");\n\n                    segmentedOption.textContent = \"Cash\";\n                    segmentedOption.title = \"Cash\";\n                    segmentedOption.selected = true;\n                    segmentedOption.value = \"value\";\n\n                    segmentedButton.buttons = segmentedOption;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["select-type-ahead.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\r\n    <h1 class=\"entry-title\">\r\n        Select Type Ahead Component\r\n    </h1>\r\n\r\n    <div class=\"meta\">\r\n        <ha-segmented-button class=\"usage-tab-buttons\">\r\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\r\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\r\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\r\n            <button class=\"segmented-nav\" value=\"react\">React</button>\r\n        </ha-segmented-button>\r\n    </div>\r\n    <div class=\"design-document\">\r\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/SelectTypeAhead.md\"\r\n           target=\"_blank\">Design & API Document</a>\r\n    </div>\r\n</section>\r\n<div class=\"panel type-ahead-demos\" id=\"html\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\"><a>Usage</a></header>\r\n        <div class=\"highlight\">\r\n            <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"language-html\" data-lang=\"html\">\r\n                    &lt;ha-select-type-ahead placeholder=\"Choose an item\" label=\"Some title\"&gt;\r\n                    &lt;/ha-select-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-select-type-ahead');\r\n                    typeahead.store = ...\r\n\r\n                    &lt;ha-select-type-ahead placeholder=\"Choose an item\" label=\"Disabled Select TypeAhead\" disabled&gt;\r\n                    &lt;/ha-select-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-select-type-ahead');\r\n                    typeahead.store = ...\r\n\r\n                    &lt;ha-select-type-ahead placeholder=\"Choose an item\" label=\"Required Select TypeAhead\" required&gt;\r\n                    &lt;/ha-select-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-select-type-ahead');\r\n                    typeahead.store = ...\r\n\r\n                    &lt;ha-select-type-ahead addNew=\"true\" placeholder=\"Choose an item\" label=\"Some title\"&gt;\r\n                    &lt;/ha-select-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-select-type-ahead');\r\n                    typeahead.store = ...\r\n\r\n                    &lt;ha-select-type-ahead placeholder=\"Choose an item\" label=\"Some title\" icon=\"hi-filter\"&gt;\r\n                    &lt;/ha-select-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-select-type-ahead');\r\n                    typeahead.store = ...\r\n                </code>\r\n            </pre>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n    </section>\r\n</div>\r\n<div class=\"panel type-ahead-demos hidden\" id=\"js\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\"><a>Usage</a></header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"js\" data-lang=\"js\">\r\n                select = document.createElement('ha-select-type-ahead');\r\n                select.placeholder = 'Choose an item';\r\n                select.store = ....\r\n                select.label = 'Some title';\r\n\r\n                disabledSelect = document.createElement('ha-select-type-ahead');\r\n                disabledSelect.disabled = true;\r\n                disabledSelect.placeholder = 'Choose an item';\r\n                disabledSelect.label = 'Disabled Select TypeAhead';\r\n                disabledSelect.store = ....\r\n\r\n                requiredSelect = document.createElement('ha-select-type-ahead');\r\n                requiredSelect.required = true;\r\n                requiredSelect.placeholder = 'Choose an item';\r\n                requiredSelect.label = 'Required Select TypeAhead';\r\n                requiredSelect.store = ....\r\n\r\n                iconSelect = document.createElement('ha-select-type-ahead');\r\n                iconSelect.placeholder = 'Choose an item';\r\n                iconSelect.store = ....\r\n                iconSelect.label = 'Some title';\r\n                iconSelect.icon = 'hi-filter';\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        <div id=\"programmaticWay\">\r\n        </div>\r\n    </section>\r\n</div>\r\n\r\n\r\n<div class=\"panel type-ahead-demos hidden\" id=\"dojo\">\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        <div id=\"dojoProgrammaticWay\">\r\n        </div>\r\n    </section>\r\n</div>\r\n\r\n<div class=\"panel hidden\" id=\"react\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\">\r\n            <a>Usage</a>\r\n        </header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"js\" data-lang=\"js\">\r\n                    import React from \"react\";\r\n                    import HASelectTypeAhead from \"hui-react/HASelectTypeAhead\";\r\n\r\n                    const data = [{\r\n                    &nbsp;&nbsp;label: \"Apple\",\r\n                    &nbsp;&nbsp;value: \"Apple\"\r\n                    }, {\r\n                    &nbsp;&nbsp;label: \"Banana\",\r\n                    &nbsp;&nbsp;value: \"Banana\"\r\n                    }, {\r\n                    &nbsp;&nbsp;label: \"Balloon\",\r\n                    &nbsp;&nbsp;value: \"Balloon\"\r\n                    }, {\r\n                    &nbsp;&nbsp;label: \"Mellon\",\r\n                    &nbsp;&nbsp;value: \"Mellon\"\r\n                    }];\r\n\r\n                    class MyTypeahead extends React.Component {\r\n                    &nbsp;&nbsp;constructor(props) {\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;super(props);\r\n\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;this.state = {\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value: &quot;&quot;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;};\r\n\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;this.handleClick = this.handleClick.bind(this);\r\n                    &nbsp;&nbsp;}\r\n\r\n                    &nbsp;&nbsp;handleChange(event) {\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;const {selectedItem} = event,\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = (selectedItem) ? selectedItem.value : &quot;&quot;;\r\n\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;this.setState({\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;});\r\n                    &nbsp;&nbsp;}\r\n\r\n\r\n                    &nbsp;&nbsp;render() {\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;return (\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASelectTypeAhead\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label=&quot;Fruit&quot;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;placeholder=&quot;Choose an item&quot;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data={data}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value={this.state.value}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onChange={this.handleChange}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&gt;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;);\r\n                    &nbsp;&nbsp;}\r\n                    }\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n    <section class=\"examples\"></section>\r\n</div>\r\n";
  return buffer;
  });

this["JST"]["select.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Select Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Select.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <div class=\"highlight\">\n                <pre>\n                    <code class=\"language-html\" data-lang=\"html\">\n                        &lt;ha-select placeholder=\"Choose a method\" label=\"Same title\"&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                        &lt;/ha-select&gt;\n\n                        &lt;ha-select placeholder=\"Choose a method\" disabled&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                        &lt;/ha-select&gt;\n\n                        &lt;ha-select placeholder=\"Choose a method\" label=\"Required Select\" required&gt;\n                            &nbsp;&nbsp;&lt;ha-item value=\"Apple\"&gt;Apple&lt;/ha-item&gt;\n                            &nbsp;&nbsp;&lt;ha-item value=\"Banana\"&gt;Banana&lt;/ha-item&gt;\n                            &nbsp;&nbsp;&lt;ha-item value=\"Balloon\"&gt;Balloon&lt;/ha-item&gt;\n                            &nbsp;&nbsp;&lt;ha-item value=\"Melon\"&gt;Melon&lt;/ha-item&gt;\n                        &lt;/ha-select&gt;\n\n                        &lt;!-- With value selected --&gt;\n                        &lt;ha-select value=\"AppleValue\"&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                        &lt;/ha-select&gt;\n\n                        &lt;!-- With Add New --&gt;\n                        &lt;ha-select placeholder=\"Choose a method\" addnew=\"true\"&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                        &lt;/ha-select&gt;\n\n                        &lt;!-- With Icon --&gt;\n                        &lt;ha-select placeholder=\"Choose a method\" icon=\"hi-filter\"&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"AppleValue\"&gt;Apple&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BananaValue\"&gt;Banana&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"BalloonValue\"&gt;Balloon&lt;/ha-item&gt;\n                        &nbsp;&nbsp;&lt;ha-item value=\"MelonValue\"&gt;Melon&lt;/ha-item&gt;\n                        &lt;/ha-select&gt;\n                    </code>\n                </pre>\n            </div>\n        </div>\n    </section>\n    <section class=\"examples\">\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    createSelect: function(selectProperties) {\n\n                    &nbsp;&nbsp;var items = [],\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select = document.createElement('ha-select'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prop,\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i;\n\n                    &nbsp;&nbsp;for (i = 0; i < 4; i++) {\n                    &nbsp;&nbsp;&nbsp;&nbsp;items[i] = document.createElement('ha-item');\n                    &nbsp;&nbsp;}\n\n                    &nbsp;&nbsp;items[0].label = 'Apple';\n                    &nbsp;&nbsp;items[0].value = 'Apple';\n                    &nbsp;&nbsp;items[1].label = 'Banana';\n                    &nbsp;&nbsp;items[1].value = 'Banana';\n                    &nbsp;&nbsp;items[2].label = 'Balloon';\n                    &nbsp;&nbsp;items[2].value = 'Balloon';\n                    &nbsp;&nbsp;items[3].label = 'Mellon';\n                    &nbsp;&nbsp;items[3].value = 'Mellon';\n\n                    &nbsp;&nbsp;for (prop in selectProperties) {\n                    &nbsp;&nbsp;&nbsp;&nbsp;if (selectProperties.hasOwnProperty(prop)) {\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select[prop] = selectProperties[prop];\n                    &nbsp;&nbsp;&nbsp;&nbsp;}\n                    &nbsp;&nbsp;}\n\n                    &nbsp;&nbsp;select.items = [items[0], items[1], items[2], items[3]];\n\n                    &nbsp;&nbsp;return select;\n                    },\n\n                    select = this.createSelect({\n                    &nbsp;&nbsp;placeholder: 'Choose a method',\n                    &nbsp;&nbsp;label: 'Some title'\n                    });\n\n                    select = this.createSelect({\n                    &nbsp;&nbsp;placeholder: 'Choose a method',\n                    &nbsp;&nbsp;disabled: true\n                    });\n\n                    select = this.createSelect({\n                        &nbsp;&nbsp;placeholder: 'Choose a method',\n                        &nbsp;&nbsp;label: 'Required Select',\n                        &nbsp;&nbsp;required: true\n                    });\n\n                    select = this.createSelect({\n                    &nbsp;&nbsp;label: 'With icon',\n                    &nbsp;&nbsp;placeholder: 'Choose a method',\n                    &nbsp;&nbsp;icon: 'hi-filter'\n                    });\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\"></section>\n</div>\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\"></section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                        &lt;HASelect placeholder=\"Choose a method\" label=\"Same title\"&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"AppleValue\"&gt;Apple&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"BananaValue\"&gt;Banana&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"BalloonValue\"&gt;Balloon&lt;/HAItem&gt;\n                        &nbsp;&nbsp;&lt;HAItem value=\"MelonValue\"&gt;Melon&lt;/HAItem&gt;\n                        &lt;/HASelect&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\"></section>\n</div>\n";
  return buffer;
  });

this["JST"]["single-step.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<style>\n    .separator {\n        margin-bottom: 15px;\n        border-bottom: 1px solid #DCDCDC;\n        display: table;\n    }\n    .separator label{\n        display: table-cell;\n        vertical-align: middle;\n    }\n    .separator ha-text-field {\n        margin-bottom: 5px;\n    }\n    .note {\n        border: 1px solid #EEE;\n        border-left: 5px solid #AA6708;\n        border-radius: 4px;\n        padding: 5px 10px;\n    }\n    .note > h5 {\n        color: #AA6708;\n    }\n</style>\n<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Single Step Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Single-Step.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-text-field id=\"myTextField\"&gt;&lt;/ha-text-field&gt;\n                    &lt;ha-single-step position=\"top left\" titleText=\"Guidance Title\" targetselector=\"#myTextField\" message=\"Text field with single-step\"&gt;&lt;/ha-single-step&gt;\n\n                    &lt;ha-text-field&gt;&lt;/ha-text-field&gt;\n                    &lt;ha-single-step open='false' trigger=\"focus\" position=\"bottom\"\n                        titleText=\"Some sort of title\"\n                        message=\"This is a textview with a timed (5 seconds) single-step, position bottom and trigger 'focus'\"\n                        duration=\"5000\"&gt;&lt;/ha-single-step&gt;\n                    &lt;label&gt;Timed (5 seconds) single-step, bottom position&lt;/label&gt;\n                </code>\n            </pre>\n        </div>\n        <div class=\"note\">\n            <h5>Positioning</h5>\n            <p>In a few edge cases you may be facing positioning issues, and you can follow one of this possible solutions:</p>\n            <ol>\n                <li>If using flex, where the offset parent has position relative, display flex and align-items as strech, you may want to change the align-items value or wrap the target and element in a relative positioned tag.</li>\n                <li>Make sure that target and the element are sibilings and/or share the same offset parent.</li>\n            </ol>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            <h2>Focus</h2>\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='true' trigger=\"focus\" titleText=\"Some sort of title\" message=\"This is a textview with a default single-step and trigger 'focus'\">\n                </ha-single-step>\n                <label for=\"\">Default single-step</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' trigger=\"focus\" position=\"bottom\"\n                                titleText=\"Some sort of title\"\n                                message=\"This is a textview with a timed (5 seconds) single-step, position bottom and trigger 'focus'\"\n                                duration=\"5000\"></ha-single-step>\n                <label>Timed (5 seconds) single-step, bottom position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' trigger=\"focus\" position=\"top right\" titleText=\"Some sort of title\" message=\"This is a textview with a close button, position top and trigger focus\" dismissible=\"true\"></ha-single-step>\n                <label>Close button, top right position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' trigger=\"focus\" position=\"top left\" titleText=\"Some sort of title\" message=\"This is a textview with a close button, position top and trigger focus\" dismissible=\"true\"></ha-single-step>\n                <label>Close button, top left position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' trigger=\"focus\" position=\"right top\" titleText=\"Some sort of title\" message=\"This is a textview with a close button, position top and trigger focus\" dismissible=\"true\"></ha-single-step>\n                <label>Close button, right top position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' trigger=\"focus\" position=\"bottom right\" titleText=\"Some sort of title\" message=\"This is a textview with a close button, position top and trigger focus\" dismissible=\"true\"></ha-single-step>\n                <label>Close button, bottom right position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' trigger=\"focus\" position=\"bottom left\" titleText=\"Some sort of title\" message=\"This is a textview with a close button, position top and trigger focus\" dismissible=\"true\"></ha-single-step>\n                <label>Close button, bottom left position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' trigger=\"focus\" position=\"left top\" titleText=\"Some sort of title\" message=\"This is a textview with a close button, position top and trigger focus\" dismissible=\"true\"></ha-single-step>\n                <label>Close button, left top position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' position=\"bottom\" titleText=\"Some sort of title\" trigger=\"focus\">\n                    <h4>Rich content HBS</h4>\n                    <p>single-step with rich content, bottom position</p>\n                </ha-single-step>\n                <label>single-step with rich content, bottom position</label>\n            </div>\n\n            <h2>Hover</h2>\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' titleText=\"Some sort of title\" message=\"This is a textview with a default single-step and trigger 'hover'.\">\n                </ha-single-step>\n                <label>Default single-step</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' position=\"top\"\n                                titleText=\"Some sort of title\"\n                                message=\"This is a textview with a timed (5 seconds) single-step\"\n                                duration=\"5000\"></ha-single-step>\n                <label>Timed (5 seconds), top position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' position=\"top\"\n                                titleText=\"Some sort of title\"\n                                message=\"This is a textview with a close button and a top left position\"\n                                dismissible=\"true\">\n                </ha-single-step>\n                <label>Close button, top position</label>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field></ha-text-field>\n                <ha-single-step open='false' titleText=\"Some sort of title\" position=\"top\">\n                    <h4>Rich content HBS</h4>\n                    <p>single-step with rich content, top position</p>\n                </ha-single-step>\n                <label>single-step with rich content, top position</label>\n            </div>\n\n            <h2>Custom Focus and Hover</h2>\n            <div class=\"separator\">\n                <ha-text-field id=\"html-ha-text-field\"></ha-text-field>\n                <ha-single-step open='false' id=\"html-single-step\" trigger=\"custom\" titleText=\"Some sort of title\" message=\"This is a textview with a custom trigger\">\n                </ha-single-step>\n                <label>Default single-step</label>\n            </div>\n\n        </div>\n    </section>\n</div>\n\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var textField = document.createElement('ha-text-field'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;singleStep = document.createElement('ha-single-step');\n\n                    singleStep.titleText = \"Guidance Title\";\n                    singleStep.message = \"Text field with singleStep!\";\n                    singleStep.duration = 5000;\n                    singleStep.dismissible = true;\n                    singleStep.open = false;\n\n                    document.body.appendchild(textField);\n                    document.body.appendchild(singleStep);\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                &lt;HATextField&gt;&lt;/HATextField&gt;\n                &lt;HASingleStep open={false} trigger=\"focus\" titleText=\"Some sore of title\"&gt;\n                    &lt;span&gt;This is a textview with a default single-step and trigger 'focus'&lt;/span&gt;\n                &lt;/HASingleStep&gt;\n\n                &lt;HATextField&gt;&lt;/HATextField&gt;\n                &lt;HASingleStep open={false} trigger=\"focus\" position=\"bottom\" alignment=\"right\"\n                    titleText=\"Some sore of title\"\n                    duration=\"5000\"\n                &gt;\n                    &lt;span&gt;This is a textview with a timed (5 seconds) single-step, position bottom and trigger 'focus'&lt;/span&gt;\n                &lt;/HASingleStep&gt;\n\n                &lt;HATextField&gt;&lt;/HATextField&gt;\n                &lt;HASingleStep open={false} trigger=\"focus\" position=\"top\" alignment=\"right\"  titleText=\"Some sore of title\" dismissible={true}&gt;\n                    &lt;span&gt;This is a textview with a close button, position top and trigger focus&lt;/span&gt;\n                &lt;/HASingleStep&gt;\n\n                &lt;HATextField&gt;&lt;/HATextField&gt;\n                &lt;HASingleStep open={false} position=\"bottom\" titleText=\"Some sore of title\" alignment=\"left\" trigger=\"focus\"&gt;\n                    &lt;h4&gt;Rich content&lt;/h4&gt;\n                    &lt;p&gt;single-step with rich content, bottom position&lt;/p&gt;\n                &lt;/HASingleStep&gt;\n\n                &lt;HATextField&gt;&lt;/HATextField&gt;\n                &lt;HASingleStep open={false} titleText=\"Some sore of title\"&gt;\n                    &lt;span&gt;This is a textview with a default single-step and trigger 'hover'.&lt;/span&gt;\n                &lt;/HASingleStep&gt;\n\n                &lt;HATextField&gt;&lt;/HATextField&gt;\n                &lt;HASingleStep open={false} position=\"top\" alignment=\"left\"\n                    titleText=\"Some sore of title\"\n                    duration=\"5000\"\n                &gt;\n                    &lt;span&gt;This is a textview with a timed (5 seconds) single-step&lt;/span&gt;\n                &lt;/HASingleStep&gt;\n\n                &lt;HATextField&gt;&lt;/HATextField&gt;\n                &lt;HASingleStep open={false} position=\"top\" alignment=\"left\"\n                    titleText=\"Some sore of title\"\n                    dismissible={true}\n                &gt;\n                    &lt;span&gt;This is a textview with a close button and a top left position&lt;/span&gt;\n                &lt;/HASingleStep&gt;\n\n                &lt;HATextField&gt;&lt;/HATextField&gt;\n                &lt;HASingleStep open={false} titleText=\"Some sore of title\" position=\"top\" alignment=\"left\"&gt;\n                    &lt;h4&gt;Rich content&lt;/h4&gt;\n                    &lt;p&gt;single-step with rich content, top position&lt;/p&gt;\n                &lt;/HASingleStep&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"reactWay\"></div>\n    </section>\n</div";
  });

this["JST"]["stacked-page-messages.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Stacked Page Messages Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/StackedPageMessages.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-stacked-page-messages&gt;\n                        &nbsp;&nbsp;&lt;ha-page-message titleText=\"Info Title\" type=\"error\" dismissible=\"false\"&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;Lorem ipsum dolor sit amet...\n                        &nbsp;&nbsp;&lt;/ha-page-message&gt;\n                        &nbsp;&nbsp;&lt;ha-page-message titleText=\"Info Title\" type=\"warn\" dismissible=\"true\"&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;Lorem ipsum dolor sit amet...\n                        &nbsp;&nbsp;&lt;/ha-page-message&gt;\n                        &nbsp;&nbsp;&lt;ha-page-message titleText=\"Info Title\" type=\"info\" dismissible=\"true\"&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;Lorem ipsum dolor sit amet...\n                        &nbsp;&nbsp;&lt;/ha-page-message&gt;\n                    &lt;/ha-stacked-page-messages&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var stack = document.createElement('ha-stacked-page-messages'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;msgInfo = document.createElement(\"ha-page-message\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;msgWarn = document.createElement(\"ha-page-message\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;msgError = document.createElement(\"ha-page-message\");\n\n                    msgError.message = \"Lorem ipsum dolor sit amet...\";\n                    msgError.titleText = \"Info Title\";\n                    msgError.dismissible = false;\n                    msgError.type = \"error\";\n\n                    msgWarn.message = \"Lorem ipsum dolor sit amet...\";\n                    msgWarn.titleText = \"Info Title\";\n                    msgWarn.dismissible = true;\n                    msgWarn.type = \"warn\";\n\n                    msgInfo.message = \"Lorem ipsum dolor sit amet...\";\n                    msgInfo.titleText = \"Info Title\";\n                    msgInfo.type = \"info\";\n\n                    stack.messages = [msgError, msgWarn, msgInfo];\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\" style=\"position:relative; height:500px; width:100%; margin:20px auto; overflow-y: auto;\">\n        </div>\n    </section>\n    <button class=\"ha-button ha-button-dark close-alert\">Click to close the Alert Page Message</button>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HAStackedPageMessages&gt;\n                        &lt;HAPageMessage titleText=\"Info Title\" type=\"info\" dismissible&gt;\n                            Hi there!\n                        &lt;/HAPageMessage&gt;\n                        &lt;HAPageMessage titleText=\"Warn Title\" type=\"warn\" dismissible&gt;\n                            You are about to run out of money.\n                        &lt;/HAPageMessage&gt;\n                        &lt;HAPageMessage titleText=\"Error Title\" type=\"error\" dismissible={false}&gt;\n                            Your payment was rejected!\n                        &lt;/HAPageMessage&gt;\n                    &lt;/HAStackedPageMessages&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"reactWay\" style=\"position:relative; height:500px; width:100%; margin:20px auto; overflow-y: auto;\">\n        </div>\n    </section>\n    <button class=\"ha-button ha-button-dark close-alert\">Click to close the Alert Page Message</button>\n</div>\n";
  return buffer;
  });

this["JST"]["stage.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Stage Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n			<button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n        <div class = \"design-document\">\n            <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Stage.md\" target=\"_blank\">Design & API Document</a>\n        </div>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    Collapsible Stage Component with Link navigation:\n                    &lt;ha-stage collapsible=\"collapsible\"&gt;\n                    &nbsp;&nbsp;&lt;header&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-left\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"ha-back-links\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=\"#\"&gt;Back to employee list&lt;/a&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Employees&lt;/h2&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-right\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;...&lt;/ha-menu-button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/span&gt;\n                    &nbsp;&nbsp;&lt;/header&gt;\n                    &nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/section&gt;\n                    &lt;/ha-stage&gt;\n\n                    Collapsible Stage Component:\n                    &lt;ha-stage collapsible=\"collapsible\"&gt;\n                    &nbsp;&nbsp;&lt;header&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-left\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Employees&lt;/h2&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Profit and loss&lt;/h3&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-right\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu-button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&lt;/header&gt;\n                    &nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/section&gt;\n                    &lt;/ha-stage&gt;\n\n                    Non Collapsable Stage Component (Default):\n                    &lt;ha-stage&gt;\n                    &nbsp;&nbsp;&lt;header&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-left\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Employees&lt;/h2&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Profit and loss&lt;/h3&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-right\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu-button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&lt;/header&gt;\n                    &nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/section&gt;\n                    &lt;/ha-stage&gt;\n\n                    Non Collapsible Stage Component without header:\n                    &lt;ha-stage&gt;\n                    &nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/section&gt;\n                    &lt;/ha-stage&gt;\n                </code>\n            </pre>\n        </div>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var stage = document.createElement('ha-stage'),\n                        spanLeft = document.createElement('span'),\n                        spanRight = document.createElement('span'),\n\n                    spanLeft.classList.add('header-left');\n                    spanRight.classList.add('header-right');\n\n                    stage.header = [spanLeft, spanRight]\n                    stage.section = [...]\n\n                    stage.collapsible = true;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n<section class=\"usage\">\n    <header class=\"title\">\n        <a>Usage</a>\n    </header>\n\n    <div class=\"highlight\">\n        <pre>\n			 <code class=\"language-html\" data-lang=\"html\">\n					\n					Collapsible Stage Component with open stage:\n                    &lt;HAStage collapsible=\"true\" open=\"true\" &gt;\n                    &nbsp;&nbsp;&lt;HAHeader&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-left\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Employees&lt;/h2&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Profit and loss&lt;/h3&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-right\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu-button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&lt;/HAHeader&gt;\n                    &nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/HASection&gt;\n                    &lt;/HAStage&gt;\n				\n                    Collapsible Stage Component with Link navigation:\n                    &lt;HAStage collapsible=\"true\"&gt;\n                    &nbsp;&nbsp;&lt;HAHeader&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-left\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=\"ha-back-links\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=\"#\"&gt;Back to employee list&lt;/a&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Employees&lt;/h2&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-right\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;...&lt;/ha-menu-button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/span&gt;\n                    &nbsp;&nbsp;&lt;/HAHeader&gt;\n                    &nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/HASection&gt;\n                    &lt;/HAStage&gt;\n\n                    Collapsible Stage Component:\n                    &lt;HAStage collapsible=\"true\"&gt;\n                    &nbsp;&nbsp;&lt;HAHeader&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-left\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Employees&lt;/h2&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Profit and loss&lt;/h3&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-right\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu-button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&lt;/HAHeader&gt;\n                    &nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/HASection&gt;\n                    &lt;/HAStage&gt;\n\n                    Non Collapsable Stage Component (Default):\n                    &lt;HAStage&gt;\n                    &nbsp;&nbsp;&lt;HAHeader&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-left\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;Employees&lt;/h2&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Profit and loss&lt;/h3&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"header-right\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-menu-button class=\"ha-button-primary\" label=\"Create New\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-menu-button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                    &nbsp;&nbsp;&lt;/HAHeader&gt;\n                    &nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/HASection&gt;\n                    &lt;/HAStage&gt;\n\n                    Non Collapsible Stage Component without header:\n                    &lt;HAStage&gt;\n                    &nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;...\n                    &nbsp;&nbsp;&lt;/HASection&gt;\n                    &lt;/HAStage&gt;\n                </code>               \n        </pre>\n    </div>\n</section>\n\n<section class=\"examples\">\n    <header class=\"title\">\n        <a>Examples</a>\n    </header>\n    <div id=\"reactWay\"></div>\n</section>\n</div>";
  return buffer;
  });

this["JST"]["status-badges.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Status Badges\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;i class=\"ha-badge ha-error\" aria-label=\"error\"&gt;&lt;/i&gt;\n                    &lt;i class=\"ha-badge ha-confirm\" aria-label=\"confirm\"&gt;Confirm&lt;/i&gt;\n                    &lt;i class=\"ha-round-badge ha-error\" aria-label=\"error\"&gt;&lt;/i&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"usage\">\n        <header class=\"title\"><a>Classes</a></header>\n        <table class=\"buttonTable\">\n            <tbody>\n                <tr>\n                    <th>Type</th>\n                    <th>Associated Classes</th>\n                </tr>\n                <tr>\n                    <td>Status Badge (teardrop) Error</td>\n                    <td>ha-badge ha-error</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (teardrop) Confirm</td>\n                    <td>ha-badge ha-confirm</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (teardrop) Error Inverse</td>\n                    <td>ha-badge ha-error ha-inverse</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (teardrop) Confirm Inverse</td>\n                    <td>ha-badge ha-confirm ha-inverse</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (round) Info</td>\n                    <td>ha-round-badge ha-info</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (round) Error</td>\n                    <td>ha-round-badge ha-error</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (round) Warn</td>\n                    <td>ha-round-badge ha-warn</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (round) Confirm</td>\n                    <td>ha-round-badge ha-confirm</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (text) Info</td>\n                    <td>ha-text-badge ha-info</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (text) Error</td>\n                    <td>ha-text-badge ha-error</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (text) Warn</td>\n                    <td>ha-text-badge ha-warn</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (text) Confirm</td>\n                    <td>ha-text-badge ha-confirm</td>\n                </tr>\n                <tr>\n                    <td>Status Badge (text) Pending</td>\n                    <td>ha-text-badge ha-pending</td>\n                </tr>\n            </tbody>\n        </table>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <h3 class=\"subtitle\"> Status Badge (teardrop)</h3>\n        <div>\n            <div class=\"separator\">\n                <i class=\"ha-badge ha-error\" aria-label=\"error\"></i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-badge ha-confirm\" aria-label=\"confirm\"></i>\n            </div>\n        </div>\n        <h3 class=\"subtitle\"> Status Badge (teardrop) Inverse</h3>\n        <div>\n            <div class=\"separator\">\n                <i class=\"ha-badge ha-error ha-inverse\" aria-label=\"error\"></i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-badge ha-confirm ha-inverse\" aria-label=\"confirm\"></i>\n            </div>\n        </div>\n        <h3 class=\"subtitle\"> Status Badge (teardrop) with label</h3>\n        <div>\n            <div class=\"separator\">\n                <i class=\"ha-badge ha-error\">Error</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-badge ha-confirm\">Paid</i>\n            </div>\n        </div>\n        <h3 class=\"subtitle\"> Status Round Badges</h3>\n        <div>\n            <div class=\"separator\">\n                <i class=\"ha-round-badge ha-info\" aria-label=\"info\"></i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-round-badge ha-error\" aria-label=\"error\"></i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-round-badge ha-warn\" aria-label=\"warn\"></i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-round-badge ha-confirm\" aria-label=\"confirm\"></i>\n            </div>\n        </div>\n\n        <h3 class=\"subtitle\"> Status Text Badge</h3>\n        <div>\n            <div class=\"separator\">\n                <i class=\"ha-text-badge ha-info\">New</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-text-badge ha-error\">Overdue</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-text-badge ha-warn\">Alert</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-text-badge ha-confirm\">Match</i>\n            </div>\n            <div class=\"separator\">\n                <i class=\"ha-text-badge ha-pending\">Match</i>\n            </div>\n        </div>\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"plain\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;button&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button-primary\"&gt;&lt;/button&gt;\n                    &lt;button class=\"ha-button-dark\"&gt;&lt;/button&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["step-flow.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Step Flow\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/StepFlow.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-step-flow id=&quot;my-step-flow&quot; flow=&quot;linear&quot; progressIndicator=&quot;true&quot;&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-flow-landing&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- landing page content here --&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-flow-landing&gt;\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-flow-step titleText=&quot;step1 title&quot;&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- content for step1 here --&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-flow-step&gt;\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-flow-step titleText=&quot;step2 title&quot;&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- content for step2 here --&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-flow-step&gt;\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-flow-step titleText=&quot;step3 title&quot;&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- section for step3 here --&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-flow-step&gt;\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-flow-confirmation titleText=&quot;Confirmation title text&quot; subtitleText=&quot;Explanation of confirmation&quot;&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- confirmation page custom content here --&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/section&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ha-flow-confirmation&gt;\n                    &lt;/ha-step-flow&gt;\n\n                    &lt;!--\n                    The show() function must be called to make the step flow visible after it has been rendered/DOM is ready.\n\n                    For example document.querySelector(&quot;#my-step-flow&quot;).show();\n                     --&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var stepFlow = document.createElement(&quot;ha-step-flow&quot;),\n                    &nbsp;&nbsp;&nbsp;&nbsp;landing,\n                    &nbsp;&nbsp;&nbsp;&nbsp;step,\n                    &nbsp;&nbsp;&nbsp;&nbsp;confirmNode,\n                    &nbsp;&nbsp;&nbsp;&nbsp;steps = [];\n\n                    landing = document.createElement(\"ha-flow-landing\");\n                    landing.content = landingDomElement;\n                    stepFlow.landing = landing;\n\n                    step = document.createElement(&quot;ha-flow-step&quot;);\n                    step.section = step1DomElement;\n                    step.titleText = &quot;Step 1&quot;;\n                    steps.push(step);\n\n                    step = document.createElement(&quot;ha-flow-step&quot;);\n                    step.section = step2DomElement;\n                    step.titleText = &quot;Step 2&quot;;\n                    steps.push(step);\n\n                    stepFlow.steps = steps;\n\n                    confirmNode = document.createElement(&quot;ha-flow-confirmation&quot;);\n                    confirmNode.titleText = &quot;Confirmation title text&quot;;\n                    confirmNode.subtitleText = &quot;Explanation of confirmation&quot;;\n\n                    stepFlow.confirmation = confirmNode;\n\n                    containerNode.appendChild(stepFlow);\n\n                    stepFlow.show();\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\"></section>\n</div>\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\"></section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    class&nbsp;StepFlowExamples&nbsp;extends&nbsp;React.Component&nbsp;{\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;constructor(props)&nbsp;{\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(props);\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.state&nbsp;=&nbsp;{\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showTrowser:&nbsp;false,\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showStepFlow:&nbsp;false,\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hideStepButtons:&nbsp;false\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};\n                    &nbsp;&nbsp;&nbsp;&nbsp;}\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;render()&nbsp;{\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Step&nbsp;Flow&nbsp;with&nbsp;Progress&nbsp;Indicator,&nbsp;Landing&nbsp;page&nbsp;and&nbsp;Confirmation&nbsp;page&nbsp;&lt;/h3&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button&nbsp;className=\"show-flow&nbsp;ha-button&nbsp;ha-button-primary\"&nbsp;onClick={()=&gt;this._showStepFlow()}&gt;Show&nbsp;Complex&nbsp;Step&nbsp;Flow&lt;/button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HATrowser\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type=\"step-flow\"\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;titleText=\"Complex&nbsp;Step&nbsp;flow\"\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dismissible={true}\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show={this.state.showTrowser}&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAStepFlow&nbsp;show={this.state.showStepFlow}&nbsp;closeParentTrowser={true}&nbsp;progressIndicator={true}&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAFlowLanding&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Landing&nbsp;Page&lt;/h3&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAFlowLanding&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAFlowConfirmation&nbsp;titleText=\"Confirmed!\"&nbsp;subtitleText=\"Everything&nbsp;is&nbsp;good&nbsp;to&nbsp;go.\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Custom&nbsp;content\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAFlowConfirmation&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAFlowStep&nbsp;titleText=\"Some&nbsp;information&nbsp;about&nbsp;you...\"&nbsp;subtitleText=\"Step&nbsp;subtitle\"&nbsp;hideStepButtons={this.state.hideStepButtons}&nbsp;showSaveForLaterButton={true}&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"row\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"col-xl-4&nbsp;col-lg-6&nbsp;col-sm-12\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HATextField&nbsp;label=\"First&nbsp;Name\"&gt;&lt;/HATextField&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"col-xl-4&nbsp;col-lg-6&nbsp;col-sm-12\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HATextField&nbsp;label=\"Last&nbsp;Name\"&gt;&lt;/HATextField&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"col-xl-4&nbsp;col-lg-6&nbsp;col-sm-12\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HATextField&nbsp;label=\"Address\"&gt;&lt;/HATextField&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"col-xl-4&nbsp;col-lg-6&nbsp;col-sm-12\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASelect&nbsp;label=\"Pick&nbsp;a&nbsp;color\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAItem&nbsp;value=\"blue\"&gt;Blue&lt;/HAItem&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAItem&nbsp;value=\"red\"&gt;Red&lt;/HAItem&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAItem&nbsp;value=\"green\"&gt;Green&lt;/HAItem&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAItem&nbsp;value=\"yellow\"&gt;Yellow&lt;/HAItem&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HASelect&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"col-xl-4&nbsp;col-lg-6&nbsp;col-sm-12\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASelect&nbsp;label=\"Pick&nbsp;a&nbsp;shape\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAItem&nbsp;value=\"square\"&gt;Square&lt;/HAItem&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAItem&nbsp;value=\"circle\"&gt;Circle&lt;/HAItem&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAItem&nbsp;value=\"triangle\"&gt;Triangle&lt;/HAItem&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAItem&nbsp;value=\"rectangle\"&gt;Rectangle&lt;/HAItem&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HASelect&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button&nbsp;className=\"toggleStepEdit&nbsp;ha-button&nbsp;pull-right\"&nbsp;onClick={()&nbsp;=&gt;&nbsp;this._toggleEdit()}&gt;Toggle&nbsp;Edit&nbsp;Mode&lt;/button&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAFlowStep&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAFlowStep&nbsp;titleText=\"Step&nbsp;with&nbsp;validation\"&nbsp;nextButtonText=\"Custom&nbsp;Next\"&nbsp;previousButtonText=\"Custom&nbsp;Previous\"\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validator={()&nbsp;=&gt;&nbsp;this._validateStep2()}&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"row\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HATextField&nbsp;ref=\"reqField\"&nbsp;label=\"Required&nbsp;Field\"&nbsp;placeholder=\"required\"&nbsp;required={true}&gt;&lt;/HATextField&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAFlowStep&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAFlowStep&nbsp;titleText=\"Messages&nbsp;for&nbsp;you\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"row\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;className=\"col-sm-12\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAStackedPageMessages&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAPageMessage&nbsp;titleText=\"Error&nbsp;Title\"&nbsp;type=\"error\"&nbsp;dismissible={false}&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Error&nbsp;message&nbsp;text,&nbsp;non&nbsp;dismissible\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAPageMessage&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAPageMessage&nbsp;titleText=\"Warn&nbsp;Title\"&nbsp;type=\"warn\"&nbsp;dismissible={true}&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Warn&nbsp;message&nbsp;text\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAPageMessage&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HAPageMessage&nbsp;titleText=\"Info&nbsp;Title\"&nbsp;type=\"info\"&nbsp;dismissible={true}&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Warn&nbsp;message&nbsp;text\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAPageMessage&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAStackedPageMessages&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAFlowStep&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HAStepFlow&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HASection&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/HATrowser&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\n                    &nbsp;&nbsp;&nbsp;&nbsp;}\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;_showStepFlow()&nbsp;{\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.setState({showStepFlow:&nbsp;true});\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.setState({showTrowser:&nbsp;true});\n                    &nbsp;&nbsp;&nbsp;&nbsp;}\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;_toggleEdit()&nbsp;{\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.setState({hideStepButtons:&nbsp;!this.state.hideStepButtons});\n                    &nbsp;&nbsp;&nbsp;&nbsp;}\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;_validateStep2()&nbsp;{\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;reqField&nbsp;=&nbsp;this.refs.reqField;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;reqField._huiComponent.reportValidity();\n                    &nbsp;&nbsp;&nbsp;&nbsp;}\n\n                    }\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\"></section>\n</div>\n";
  return buffer;
  });

this["JST"]["switch-button.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Switch Button Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n    <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/SwitchButton.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-switch-button checked=\"true\" name=\"switchName\" label=\"Send me notifications\"&gt;&lt;/ha-switch-button&gt;\n                    &lt;ha-switch-button checked=\"false\" name=\"switchName\" label=\"Pay me\"&gt;&lt;/ha-switch-button&gt;\n                    &lt;ha-switch-button checked=\"false\" name=\"switchName\" label=\"Auto-Payment\" labelOn=\"on\" labelOff=\"Disable\"&gt;&lt;/ha-switch-button&gt;\n                    &lt;ha-switch-button checked=\"true\" name=\"switchName\" label=\"Credit card payment\" labelOn=\"on\" labelOff=\"Disable\"&gt;&lt;/ha-switch-button&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var switchbutton = document.createElement(\"ha-switch-button\");\n\n                    switchbutton.value = \"123\";\n                    switchbutton.checked = true;\n                    switchbutton.labelOn = \"ON\";\n                    switchbutton.labelOff = \"OFF\";\n                    switchbutton.name = \"Switch button initialized as checked\";\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HASwitchButton labelOn=&quot;on&quot; labelOff=&quot;off&quot; name=&quot;sendNotification&quot; label=&quot;Send me notifications&quot; /&gt;&lt;br /&gt;\n\n                    &lt;HASwitchButton checked labelOn=&quot;on&quot; labelOff=&quot;off&quot; name=&quot;payMe&quot; label=&quot;Pay me&quot; /&gt;&lt;br /&gt;\n\n                    &lt;HASwitchButton labelOn=&quot;on&quot; name=&quot;autoPayment&quot; labelOff=&quot;Disable&quot; span=&quot;false&quot; label=&quot;Auto-Payment&quot; /&gt;&lt;br /&gt;\n\n                    &lt;HASwitchButton labelOn=&quot;on&quot; name=&quot;creditCardPayment&quot; labelOff=&quot;Disable&quot; checked label=&quot;Credit card payment&quot; /&gt;&lt;br /&gt;\n\n                    &lt;HASwitchButton name=&quot;runPayroll&quot; checked label=&quot;Run Payroll&quot;/&gt;&lt;br /&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"reactWay\">\n        </div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["table.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"table-demo\">\n    <section class=\"post box clearfix\">\n        <h1 class=\"entry-title\">\n            Table Component\n        </h1>\n        <div class=\"meta\">\n            <ha-segmented-button id=\"table-navigation\">\n                <button class=\"segmented-nav\" value=\"html\" renderer=\"renderHtml\" selected=\"true\">HTML</button>\n                <button class=\"segmented-nav\" value=\"js\" renderer=\"renderJS\">Javascript</button>\n                <button class=\"segmented-nav\" value=\"settings\" renderer=\"renderSettings\">Table Settings</button>\n                <button class=\"segmented-nav\" value=\"print\" renderer=\"renderPrint\">Table Print</button>\n                <button class=\"segmented-nav\" value=\"batch-mode\" renderer=\"renderBatchMode\">Batch Mode</button>\n                <button class=\"segmented-nav\" value=\"export\" renderer=\"renderExport\">Export</button>\n                <button class=\"segmented-nav\" value=\"row-reordering\" renderer=\"renderRowReordering\">Row Reordering</button>\n                <button class=\"segmented-nav\" value=\"total-row\" renderer=\"renderTotalRow\">Total Row</button>\n                <button class=\"segmented-nav\" value=\"content-grouping\" renderer=\"renderContentGrouping\">Content Grouping</button>\n                <button class=\"segmented-nav\" value=\"table-filter\" renderer=\"renderFilter\">Filter</button>\n                <button class=\"segmented-nav\" value=\"empty-grid\" renderer=\"renderEmptyGrid\">Empty Grid</button>\n                <button class=\"segmented-nav\" value=\"loading-message\" renderer=\"renderLoadingMessage\">Loading Message</button>\n                <button class=\"segmented-nav\" value=\"edit-mode\" renderer=\"renderEditMode\">Edit Mode</button>\n                <button class=\"segmented-nav\" value=\"row-edit-mode\" renderer=\"renderRowEditMode\">Row Edit Mode</button>\n                <button class=\"segmented-nav\" value=\"virtual-scrolling\" renderer=\"renderVirtualScrolling\">Virtual Scrolling</button>\n                <button class=\"segmented-nav\" value=\"column-locking\" renderer=\"renderColumnLocking\">Column Locking</button>\n                <button class=\"segmented-nav\" value=\"request-store\" renderer=\"requestStore\">Request Store</button>\n                <button class=\"segmented-nav\" value=\"expando-row\" renderer=\"expandoRow\">Expandable Rows</button>\n                <button class=\"segmented-nav\" value=\"tab-usage\" renderer=\"renderInTabs\">Tables in Tabs</button>\n                <button class=\"segmented-nav hidden-desktop\" value=\"responsive-table-layouts\" renderer=\"renderResponsiveLayouts\">Responsive Table Layouts</button>\n            </ha-segmented-button>\n        </div>\n    </section>\n\n    <div class=\"panel\" id=\"html\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre>\n                    <code>\n                        <span class=\"nt\">&lt;ha-table</span><span class=\"na\">&nbsp;showtablebar=<span class=\"s\">\"true\"&nbsp;</span></span> <span class=\"na\">showsettings=<span class=\"s\">\"true\"</span>&gt;</span>\n                        <span class=\"nt\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-table-column</span><span class=\"na\">&nbsp;field=<span class=\"s\">\"first\"</span></span><span class=\"na\">&nbsp;label=<span class=\"s\">\"First Name\"</span></span><span class=\"na\">&nbsp;sortable=<span class=\"s\">\"false\"</span>&gt;</span><span class=\"nt\">&lt;/ha-table-column&gt;</span>\n                        <span class=\"nt\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-table-column</span><span class=\"na\">&nbsp;field=<span class=\"s\">\"last\"</span></span><span class=\"na\">&nbsp;label=<span class=\"s\">\"Last Name\"</span>&gt;</span><span class=\"nt\">&lt;/ha-table-column&gt;</span>\n                        <span class=\"nt\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-table-column</span><span class=\"na\">&nbsp;field=<span class=\"s\">\"totalG\"</span></span><span class=\"na\">&nbsp;label=<span class=\"s\">\"Games Played\"</span>&gt;</span><span class=\"nt\">&lt;/ha-table-column&gt;</span>\n                        <span class=\"nt\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-table-column</span><span\n                        class=\"na\">&nbsp;field=<span class=\"s\">\"link\"</span></span><span class=\"na\">&nbsp;label=<span class=\"s\">\"Link\"</span>&gt;</span><span class=\"nt\">&lt;/ha-table-column&gt;</span>\n                        <span class=\"nt\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-table-column</span><span\n                        class=\"na\">&nbsp;field=<span class=\"s\">\"amount\"</span></span><span class=\"na\">&nbsp;label=<span class=\"s\">\"Amount\"</span>&gt;</span><span class=\"nt\">&lt;/ha-table-column&gt;</span>\n                        <span class=\"nt\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;ha-table-column</span><span class=\"na\">&nbsp;field=<span class=\"s\">\"action\"</span></span><span class=\"na\">&nbsp;label=<span class=\"s\">\"Action\"</span>&gt;</span><span class=\"nt\">&lt;/ha-table-column&gt;</span>\n                        <span class=\"nt\">&lt;/ha-table&gt;</span>\n                    </code>\n                </pre>\n            </div>\n        </section>\n\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div class=\"declarative-wrapper\">\n                <h3>Table</h3>\n                <form class=\"table-controls\">\n                    Size: <ha-segmented-button id=\"table-size-button\">\n                        <button class=\"ha-button\" value=\"normal\" type=\"button\">Normal</button>\n                        <button class=\"ha-button\" value=\"double\" type=\"button\">Double</button>\n                        <button class=\"ha-button\" value=\"compact\" type=\"button\">Compact</button>\n                    </ha-segmented-button>\n                </form>\n                <div id=\"html-example\"></div>\n            </div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"js\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">var table = document.createElement('ha-table');\n    table.autoheight = true;\n    table.rowsPerPage = 50;\n    table.showTableBar = true;\n    table.collection = new Memory({\n        data: [\n            {\n                first: 'John',\n                last: 'Doe',\n                dob: new Date('1942-2-13'),\n                id: 1\n            },\n            {\n                first: 'Bob',\n                last: 'Ross',\n                dob: new Date('1942-10-29'),\n                id: 2\n            }\n        ]\n    });\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        height: 'Height'\n    };</pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"js-example\">\n            </div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"settings\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table'),\n        div = document.createElement('div'),\n        checkbox = document.createElement('ha-checkbox'),\n        title = document.createElement('h4');\n    table.showTableBar = true;\n    table.showSettings = true;\n    table.userId = 'userId';\n    table.persistentId = 'persistentId';\n    table.showColumnHider = true;\n    table.showDisplayDensitySettings = true;\n    table.showRowsPerPageSettings = true;\n    table.filterType = 'simple-filter';\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                var icon = document.createElement('button'),\n                    screenReaderNode = document.createElement('span');\n\n                node.classList.add('control');\n                icon.className = 'hi hi-settings';\n                icon.style.background = 'none';\n                icon.style.border = 'none';\n                screenReaderNode.className = 'sr-only';\n                screenReaderNode.innerHTML = 'Action for this row';\n                icon.appendChild(screenReaderNode);\n                node.appendChild(icon);\n            },\n            unhidable: true\n        }\n    };\n    table.collection = new RequestMemory({target: 'js/app/modules/table/hof-batting.json'});\n    title.textContent = 'Other';\n    checkbox.label = 'Do something special';\n    div.appendChild(checkbox);\n    checkbox.render();\n    table.otherSettingsNode.appendChild(title);\n    table.otherSettingsNode.appendChild(div);\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"settings-example\">\n            </div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"print\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table'),\n        div = document.createElement('div'),\n        checkbox = document.createElement('ha-checkbox'),\n        title = document.createElement('h4');\n    table.showTableBar = true;\n    table.showPrintList = true;\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                var icon = document.createElement('button'),\n                    screenReaderNode = document.createElement('span');\n\n                node.classList.add('control');\n                icon.className = 'hi hi-settings';\n                icon.style.background = 'none';\n                icon.style.border = 'none';\n                screenReaderNode.className = 'sr-only';\n                screenReaderNode.innerHTML = 'Action for this row';\n                icon.appendChild(screenReaderNode);\n                node.appendChild(icon);\n            },\n            unhidable: true\n        }\n    };\n    table.collection = new RequestMemory({target: 'js/app/modules/table/hof-batting.json'});\n\n    node.appendChild(table);\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"print-example\">\n            </div>\n        </section>\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    ...\n    table.printRenderer = {\n        header: function() {\n            var header = this.table.querySelector('.ha-table-header');\n            if (header) {\n                header.parentNode.removeChild(header);\n            }\n        },\n        row: function(object) {\n            var div = document.createElement('div');\n            function renderField(fieldDef) {\n                var fieldName = typeof fieldDef === 'string' ? fieldDef : fieldDef.field;\n                var fieldDiv = document.createElement('div');\n                fieldDiv.textContent = fieldName + ': ' + object[fieldName];\n                div.style.borderBottom = '1px solid black';\n                div.appendChild(fieldDiv);\n            }\n            if (Array.isArray(this.table.columns)) {\n                this.table.columns.forEach(renderField);\n            } else {\n                Object.keys(this.table.columns).map(function(key) {\n                    return typeof this.table.columns[key] === 'string' ? key : this.table.columns[key];\n                }, this).forEach(renderField);\n            }\n\n            return div;\n        }\n    };\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"print-renderer-example\">\n            </div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"batch-mode\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table'),\n        button = document.createElement('button'),\n        evenButton = document.createElement('button'),\n        store = new (RequestMemory.createSubclass(Trackable))({target: 'js/app/modules/table/hof-batting.json'});\n\n    button.textContent = 'Do batch things';\n    button.classList.add('ha-button');\n\n    evenButton.textContent = 'Do even batch things';\n    evenButton.classList.add('ha-button');\n\n    table.batchNodes = [button, evenButton];\n\n    ['select', 'deselect'].forEach(function(type) {\n        table.on(type, function(event) {\n            var evenDisabled = Object.keys(table.selection).some(function(id) {\n                return table.row(id).element.classList.contains('dgrid-row-even');\n            });\n\n            evenButton.disabled = evenDisabled;\n        });\n    });\n\n    button.addEventListener('click', function() {\n        table.clearErrors();\n        var errors = [];\n        Object.keys(table.selection).forEach(function(id) {\n            if ((table.row(id).element.rowIndex % 10) == 6) {\n                // add an error to rows 7, 17, 27, etc.\n                table.setError(id, '7th row error');\n                errors.push(id);\n            } else {\n                store.get(id).then(function(item) {\n                    item.first = 'UPDATED';\n                    item.last = 'ITEM';\n                    store.put(item);\n                });\n            }\n        });\n\n        if (!errors.length) {\n            table.clearSelection();\n        }\n    });\n\n    table.collection = store;\n    table.allowBatchMode = true;\n    table.showTableBar = true;\n    table.filterType = 'simple-filter';\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        }\n    };\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"batch-example\">\n            </div>\n        </section>\n    </div>\n\n    <div id=\"export\" class=\"panel hidden\">\n        <section class=\"usage\">\n            <header class=\"title\">Usage</header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none;border:none;\">\n    var table = document.createElement('ha-table');\n    table.showExport = true;\n    table.on('export', function() {\n        alert('Commencing simple export');\n    });</pre></code></pre>\n            </div>\n        </section>\n        <div id=\"simple-export\"></div>\n        <section class=\"usage\">\n            <header class=\"title\">Usage</header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none;border:none;\">\n    var complexTable = createExportTable(),\n        xlsItem = document.createElement('ha-item'),\n        pdfItem = document.createElement('ha-item'),\n        exportMenuButton = document.createElement('ha-menu-button');\n\n    xlsItem.value = xlsItem.label = 'Export as XLS';\n    pdfItem.value = pdfItem.label = 'Export as PDF';\n    exportMenuButton.items = [xlsItem, pdfItem];\n    exportMenuButton.addEventListener('select', function(event) {\n        alert(event.target.selectedItem.value);\n    });\n    exportMenuButton.icon = 'hi-export';\n    exportMenuButton.label = complexTable.exportIconText;\n    complexTable.exportButton = exportMenuButton;\n    </pre></code></pre>\n            </div>\n        </section>\n        <div id=\"complex-export\"></div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"row-reordering\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table');\n    table.allowRowReordering = true;\n    table.showTableBar = true;\n    table.filterType = 'simple-filter';\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                node.classList.add('control');\n                var icon = document.createElement('span');\n                icon.classList.add('hi', 'hi-settings');\n                node.appendChild(icon);\n            }\n        }\n    };\n    table.collection = new (declare([RequestMemory, Trackable]))({\n        target: 'js/app/modules/table/hof-batting.json'\n    });\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"row-reordering-examples\"></div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"total-row\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table'),\n        totalGamesPlayed = 0,\n        totalAmount = 0;\n    table.showTableBar = true;\n    table.filterType = 'simple-filter';\n    table.rowsPerPage = 5;\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                node.classList.add('control');\n                var icon = document.createElement('span');\n                icon.classList.add('hi', 'hi-settings');\n                node.appendChild(icon);\n            }\n        }\n    };\n    table.rowStatus = function(row) {\n        if (row.last.indexOf('x') > -1) {\n            return 'success';\n        } else if (row.last.indexOf('w') > -1) {\n            return 'error';\n        } else {\n            return '';\n        }\n    };\n    table.collection = new RequestMemory({target: 'js/app/modules/table/hof-batting.json'});\n    table.collection.fetch().then(function(results) {\n        var i;\n        for (i = 0; i < results.length; i++) {\n            totalGamesPlayed += results[i].totalG;\n            totalAmount += results[i ].height;\n        }\n\n        table.totals = {\n            'totalG': totalGamesPlayed,\n            'height': '$' + totalAmount\n        };\n    });\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"total-row-example\"></div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"content-grouping\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table');\n    table.categoryProperty = 'contractType';\n    table.rowsPerPage = 15;\n    table.collection = new ContentGroupMemory({\n        data: this._getCategoryData()\n    });\n    table.columns = {\n        contractType: {\n            label: '', renderExpando: true\n        },\n        id: 'ID',\n        email: 'Email',\n        balance: {\n            label: 'Balance',\n            className: 'numeric',\n            formatter: currencyFormatter\n        }\n    };\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"content-grouping-virtual-scroll\">\n            </div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"table-filter\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Simple Filter Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table');\n    table.showTableBar = true;\n    table.filterType = 'simple';\n    table.columns = {\n        first: 'First Name',\n        last: 'Last Name',\n        totalG: 'Games Played',\n        // ...\n    };\n    table.collection = new RequestMemory({target: 'js/app/modules/table/hof-batting.json'});\n\n    var select = (function filterSelect() {\n        // construct simple filter with select\n        var select = document.createElement('ha-select'),\n            popover = document.createElement('ha-popover'),\n            item1 = document.createElement('ha-item'),\n            item2 = document.createElement('ha-item'),\n            item3 = document.createElement('ha-item');\n\n        item1.label = 'No Filter';\n        item1.value = undefined;\n        item1.selected = true;\n\n        item2.label = 'Less than 1000 games';\n        item2.value = 1000;\n\n        item3.label = 'Less than 2000 games';\n        item3.value = 2000;\n\n        select.items = [ item1, item2, item3 ];\n        select.popover = popover;\n\n        select.on('change', function(event) {\n            var value = event.target.value;\n            if (value) {\n                table.filter(function(data) {\n                    return data.totalG < value;\n                });\n            } else {\n                table.filter();\n            }\n        });\n\n        return select;\n    })();\n\n    var input = (function filterTextField() {\n        var input = document.createElement('ha-text-field');\n\n        input.type = 'text';\n        input.name = 'first';\n        input.placeholder = 'Filter by first name...';\n\n        input.on('change', function(event) {\n            var value = event.target.value;\n\n            table.filter({\n                first: new RegExp(value, 'i')\n            });\n        });\n\n        return input;\n    })();\n\n    var popover = (function filterPopover() {\n        var popover = document.createElement('ha-popover'),\n            input = document.createElement('ha-text-field'),\n            popoverForm = document.createElement('ha-popover-form'),\n            section = popoverForm.querySelector('section'),\n            applyButton = document.createElement('button'),\n            resetButton = document.createElement('button');\n\n        applyButton.classList.add('ha-button');\n        applyButton.type = 'submit';\n        applyButton.textContent = 'Apply';\n        resetButton.textContent = 'Reset';\n        resetButton.classList.add('ha-button');\n\n        input.name = 'first';\n        input.label = 'First Name';\n        popover.appendChild(popoverForm);\n        section.appendChild(input);\n        section.appendChild(document.createElement('br'));\n        section.appendChild(applyButton);\n        section.appendChild(resetButton);\n\n        applyButton.addEventListener('click', function() {\n            console.log('input.value', input.value);\n            table.filter({\n                first: new RegExp(input.value, 'i')\n            });\n        });\n        resetButton.addEventListener('click', function() {\n            input.value = null;\n            table.filter();\n        });\n\n        return popover;\n    })();\n\n    var customLabels = (function filterPopoverSelect() {\n            var popover = document.createElement('ha-popover'),\n                first = document.createElement('ha-text-field'),\n                last = document.createElement('ha-text-field'),\n                nickname = createSelect(),\n                amount = document.createElement('ha-text-field'),\n                popoverForm = document.createElement('ha-popover-form'),\n                section = popoverForm.querySelector('section'),\n                applyButton = document.createElement('button'),\n                resetButton = document.createElement('button');\n\n            applyButton.classList.add('ha-button', 'ha-button-primary');\n            applyButton.type = 'submit';\n            applyButton.textContent = 'Apply';\n            resetButton.textContent = 'Reset';\n            resetButton.classList.add('ha-button', 'ha-button-secondary');\n\n            first.name = 'first';\n            first.label = 'First Name';\n            last.name = 'last';\n            last.label = 'Last Name';\n            nickname.name = 'nickname';\n            nickname.label = 'Nickname';\n            amount.name = 'height';\n            amount.label = 'Amount';\n            popover.appendChild(popoverForm);\n            section.appendChild(first);\n            section.appendChild(last);\n            section.appendChild(nickname);\n            section.appendChild(amount);\n            section.appendChild(document.createElement('br'));\n            section.appendChild(resetButton);\n            section.appendChild(applyButton);\n\n            function filter() {\n                var query = {},\n                    labels = {};\n                [first, last, nickname, amount].forEach(function(field) {\n                    if (field.value) {\n                        query[field.name] = field.value;\n                        // Use custom format for text-fields and selects, except the\n                        // last name field\n                        if (field.tagName === 'HA-TEXT-FIELD' && field.name !== 'last') {\n                            labels[field.name] = field.label + '=' + field.value;\n                        } else if (field.tagName === 'HA-SELECT') {\n                            labels[field.name] = field.selectedItem.label;\n                        } else {\n                            labels[field.name] = field.value;\n                        }\n                    }\n                });\n\n                table.filter(query, labels);\n            }\n\n            function reset() {\n                var query = {};\n                [first, last, nickname, amount].forEach(function(field) {\n                    field.value = null;\n                });\n\n                table.filter(query);\n            }\n\n            function dismiss(name) {\n                var field;\n                switch (name) {\n                    case 'first':\n                        field = first;\n                        break;\n                    case 'last':\n                        field = last;\n                        break;\n                    case 'nickname':\n                        field = nickname;\n                        break;\n                    case 'height':\n                        field = amount;\n                        break;\n                }\n                field.value = null;\n                filter();\n            }\n\n            applyButton.addEventListener('click', function() {\n                filter();\n                popover.hide();\n            });\n            resetButton.addEventListener('click', function() {\n                reset();\n            });\n\n            table.on('dismiss', function(event) {\n                dismiss(event.target.value);\n            });\n\n            table.on('dismiss-all', function() {\n                reset();\n            });\n\n            table.on('show-all', function() {\n                popover.show();\n            });\n\n            return popover;\n    })();\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <ha-segmented-button id=\"filter-type\">\n                <button value=\"simpleSelect\" selected=\"true\">Simple Select</button>\n                <button value=\"simpleText\">Simple Text Field</button>\n                <button value=\"complex\">Complex</button>\n                <button value=\"custom-labels\">Custom Labels</button>\n            </ha-segmented-button>\n            <div id=\"filter-example\"></div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"empty-grid\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table');\n    table.showTableBar = true;\n    table.showExport = true;\n    table.showEditMode = true;\n    table.showPrintList = true;\n    table.showSettings = true;\n    table.rowsPerPage = 5;\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                node.classList.add('control');\n                var icon = document.createElement('span');\n                icon.classList.add('hi', 'hi-settings');\n                node.appendChild(icon);\n            }\n        }\n    };\n    table.collection = new Memory();\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"empty-grid-example\"></div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"loading-message\">\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"loading-message-example\"></div>\n        </section>\n    </div>\n    <div class=\"panel hidden\" id=\"edit-mode\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n            <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table');\n    table.rowsPerPage = 100;\n    table.showTableBar = true;\n    table.showSettings = true;\n    table2.showEditMode = true;\n    table.showDisplayDensitySettings = true;\n    table.showRowsPerPageSettings = true;\n    table.showColumnHider = true;\n    table.filterType = 'simple-filter';\n    table.collection = store;\n    table.collection = new RequestMemory({target: 'js/app/modules/table/hof-batting.json'});\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false,\n            editor: 'ha-text-field'\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            editor: 'ha-text-field',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                node.classList.add('control');\n                var icon = document.createElement('span');\n                icon.classList.add('hi', 'hi-settings');\n                node.appendChild(icon);\n            }\n        }\n    };\n\n    table.on('edit-cancel', function() {\n        console.log('%cEDIT CANCEL', 'font-weight:bold;color:orange;');\n    });\n    table.on('edit-save', function(event) {\n        console.log('%cEDIT SAVE', 'font-weight:bold;color:green;', event);\n        table.clearErrors();\n        table.editable = false;\n        var id = Object.keys(event.changed)[0];\n        if (id && (table.row(id).element.rowIndex % 10) == 6) {\n            // add an error to that row\n            table.setError(id, 'There was an error that prevented save. Please try again.');\n            table.revert();\n        } else {\n            console.log(table.save());\n        }\n    });\n\n    table.editMode = 'specific';\n            </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"edit-example\"></div>\n        </section>\n\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table2 = document.createElement('ha-table2');\n    table2.rowsPerPage = 100;\n    table2.showTableBar = true;\n    table2.showSettings = true;\n    table2.showDisplayDensitySettings = true;\n    table2.showRowsPerPageSettings = true;\n    table2.showColumnHider = true;\n    table2.filterType = 'simple-filter';\n    table2.collection = new RequestMemory({target: 'js/app/modules/table/hof-batting.json'});\n    // table2.allowBatchMode = true;\n    table2.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false,\n            editor: 'ha-text-field'\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            editor: 'ha-text-field',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                node.classList.add('control');\n                var icon = document.createElement('span');\n                icon.classList.add('hi', 'hi-settings');\n                node.appendChild(icon);\n            }\n        }\n    };\n\n    table2.on('edit-save', function(event) {\n        table2.clearErrors();\n        table2.editable = false;\n        var id = Object.keys(event.changed)[0];\n        if (id && (table2.row(id).element.rowIndex % 10) == 6) {\n            // add an error to that row\n            table2.setError(id, 'There was an error that prevented save. Please try again.');\n            table2.revert();\n        } else {\n            console.log(table2.save());\n        }\n    });\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"edit-simple-example\"></div>\n        </section>\n    </div>\n\n    <div class=\"panel hidden\" id=\"row-edit-mode\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n        </section>\n\n    </div>\n\n    <div class=\"panel hidden\" id=\"virtual-scrolling\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table-virtual');\n\n    table.maxHeight = 600;\n    table.showSettings = true;\n    table.showTableBar = true;\n    table.collection = new (declare([RequestMemory, Trackable]))({\n        target: 'js/app/modules/table/hof-batting.json'\n    });\n\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        }\n    };\n                </pre></code></pre>\n            </div>\n        </section>\n\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"virtual-scrolling-example\"></div>\n            <div>\n                <label><input type=\"checkbox\"> Does this get focus after hitting escape + tab from the table?</label>\n            </div>\n        </section>\n    </div>\n    <div class=\"panel hidden\" id=\"column-locking\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table'),\n        node = parent.querySelector('#column-locking-example');\n    table.lockedColumns = 1;\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                node.classList.add('control');\n                var icon = document.createElement('span');\n                icon.classList.add('hi', 'hi-settings');\n                node.appendChild(icon);\n            }\n        }\n    };\n    table.collection = new (declare([RequestMemory, Trackable]))({\n        target: 'js/app/modules/table/hof-batting.json'\n    });\n    node.appendChild(table);\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"column-locking-example\"></div>\n        </section>\n    </div>\n    <div class=\"panel hidden\" id=\"request-store\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table'),\n        node = parent.querySelector('#column-locking-example');\n    table.lockedColumns = 1;\n    table.columns = {\n        first: {\n            label: 'First Name',\n            sortable: false\n        },\n        last: 'Last Name',\n        totalG: {\n            label: 'Games Played',\n            renderCell: function(object, value, node) {\n                node.appendChild(document.createTextNode(value));\n                var secondLine = document.createElement('div');\n                secondLine.classList.add('subline');\n                secondLine.appendChild(document.createTextNode('Games Played'));\n                node.appendChild(secondLine);\n                // return node;\n\n            }\n        },\n        nickname: {\n            label: 'Nickname',\n            formatter: function(value) {\n                return '<a href=\"#\">' + value + '</a>';\n            }\n        },\n        height: {\n            label: 'Amount',\n            className: 'numeric',\n            formatter: currencyFormatter\n        },\n        action: {\n            label: 'Action',\n            renderCell: function(object, value, node) {\n                node.classList.add('control');\n                var icon = document.createElement('span');\n                icon.classList.add('hi', 'hi-settings');\n                node.appendChild(icon);\n            }\n        }\n    };\n    table.collection = new (declare([RequestMemory, Trackable]))({\n        target: 'js/app/modules/table/hof-batting.json'\n    });\n    node.appendChild(table);\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <div id=\"request-store-example\"></div>\n            <div id=\"request-store-content-grouping-example\"></div>\n        </section>\n    </div>\n    <div class=\"panel hidden\" id=\"expando-row\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var table = document.createElement('ha-table'),\n        tableWithExtendedRenderer = document.createElement('ha-table'),\n        tableWithCustomHeightRenderer = document.createElement('ha-table'),\n        node = parent.querySelector('#expando-row-example' + (batch ? '-batch' : '')),\n        rendererFactoryRegistry = new RendererFactoryRegistry(),\n        columns = {\n            first: {\n                label: 'First Name',\n                sortable: false\n            },\n            last: 'Last Name',\n            height: 'Height',\n            action: {\n                label: 'Action',\n                renderCell: function(object, value, node) {\n                    node.classList.add('control');\n                    var icon = document.createElement('button');\n                    icon.classList.add('no-button');\n                    icon.classList.add('hi', 'hi-settings');\n                    icon.setAttribute('aria-label', 'Show row expansion');\n                    icon.setAttribute('tabindex', '0');\n                    node.appendChild(icon);\n                }\n            }\n        },\n        customRowExpansionArgs = {\n            activatorSelector: '.control .hi-settings',\n            renderRowExpansionContent: function(object, hideExpansion) {\n                var expandoContentDiv = document.createElement('div'),\n                    firstNameTextField = document.createElement('ha-text-field'),\n                    lastNameDiv = document.createElement('div'),\n                    heightDiv = document.createElement('div'),\n                    select = demoJS.createComponent(),\n                    hideButton = document.createElement('button'),\n                    radioButtonGroupDiv = document.createElement('div');\n\n                radioButtonGroupDiv.innerHTML = '&lt;ha-radio-button-group label=&quot;Some Label&quot; expected=&quot;2&quot; required&gt;' +\n                    '&lt;ha-radio-button label=&quot;Radio 1&quot; value=&quot;1&quot;&gt;&lt;/ha-radio-button&gt;' +\n                    '&lt;ha-radio-button label=&quot;Radio 2&quot; value=&quot;2&quot;&gt;&lt;/ha-radio-button&gt;' +\n                    '&lt;ha-radio-button label=&quot;Radio 3&quot; value=&quot;3&quot;&gt;&lt;/ha-radio-button&gt;' +\n                    '&lt;/ha-radio-button-group&gt;';\n                firstNameTextField.value = 'First Name: ' + object.first;\n                lastNameDiv.textContent = 'Last Name: ' + object.last;\n                heightDiv.textContent = 'Height: ' + object.height;\n                select.style.display = 'block';\n                hideButton.className = 'ha-button ha-button-primary';\n                hideButton.textContent = 'Collapse';\n                hideButton.onclick = function () {\n                    alert(\"Action taken\");\n                    hideExpansion();\n                };\n                hideButton.style.width = \"100px\";\n\n                expandoContentDiv.appendChild(radioButtonGroupDiv);\n                expandoContentDiv.appendChild(firstNameTextField);\n                expandoContentDiv.appendChild(lastNameDiv);\n                expandoContentDiv.appendChild(heightDiv);\n                expandoContentDiv.appendChild(select);\n                expandoContentDiv.appendChild(hideButton);\n\n            return expandoContentDiv;\n        }\n    },\n    rowExpansionWithCustomHeight = {\n        expansionHeight: 80\n    };\n\n    rendererFactoryRegistry.registerRenderer(\"defaultExpandableRow\", RowExpansionRenderer);\n    // Register a custom renderer with bound constructor args. This way each table using this registry\n    // gets a new renderer(so they don't share state) but with the same custom functionality.\n    rendererFactoryRegistry.registerRenderer(\n        \"customExpandableRow\",\n        RowExpansionRenderer.bind(null, customRowExpansionArgs)\n    );\n\n    rendererFactoryRegistry.registerRenderer(\n        'customHeightExpandableRow',\n        RowExpansionRenderer.bind(null, rowExpansionWithCustomHeight)\n    );\n\n    table.columns = simpleColumns;\n    table.rowsPerPage = 50;\n    table.collection = hofStore;\n    table.rendererFactory = rendererFactoryRegistry.getRendererFactory();\n    table.renderMode = 'defaultExpandableRow';\n    table.allowBatchMode = batch;\n\n    tableWithExtendedRenderer.columns = columns;\n    tableWithExtendedRenderer.rowsPerPage = 50;\n    tableWithExtendedRenderer.collection = hofStore;\n    tableWithExtendedRenderer.rendererFactory = rendererFactoryRegistry.getRendererFactory();\n    tableWithExtendedRenderer.renderMode = 'customExpandableRow';\n    tableWithExtendedRenderer.allowBatchMode = batch;\n\n    tableWithCustomHeightRenderer.columns = simpleColumns;\n    tableWithCustomHeightRenderer.rowsPerPage = 50;\n    tableWithCustomHeightRenderer.collection = hofStore;\n    tableWithCustomHeightRenderer.rendererFactory = rendererFactoryRegistry.getRendererFactory();\n    tableWithCustomHeightRenderer.renderMode = 'customHeightExpandableRow';\n    tableWithCustomHeightRenderer.allowBatchMode = batch;\n\n    node.appendChild(table);\n    node = parent.querySelector('#expando-row-custom-example' + (batch ? '-batch' : ''));\n    node.appendChild(tableWithExtendedRenderer);\n    node = parent.querySelector('#expando-row-custom-height-example' + (batch ? '-batch' : ''));\n    node.appendChild(tableWithCustomHeightRenderer);\n    return this;            </pre></code></pre>\n        </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <h2 class=\"title\">Without Batch Mode</h2>\n            <h3 class=\"subtitle\">Default Row Expansion Renderer</h3>\n            <div id=\"expando-row-example\"></div>\n            <h3 class=\"subtitle\">Row Expansion Renderer with custom rendering function</h3>\n            <div id=\"expando-row-custom-example\"></div>\n            <h3 class=\"subtitle\">Row Expansion Renderer with specified content height</h3>\n            <div id=\"expando-row-custom-height-example\"></div>\n            <h2 class=\"title\">With Batch Mode</h2>\n            <h3 class=\"subtitle\">Default Row Expansion Renderer</h3>\n            <div id=\"expando-row-example-batch\"></div>\n            <h3 class=\"subtitle\">Row Expansion Renderer with custom rendering function</h3>\n            <div id=\"expando-row-custom-example-batch\"></div>\n        </section>\n    </div>\n\n    <div id=\"tab-usage\" class=\"panel table-tab-usage hidden\">\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <ha-tabs>\n                <ha-tab titleText=\"First Table\">\n                    <ha-table id=\"tab-table1\"></ha-table>\n                </ha-tab>\n\n                <ha-tab titleText=\"Second Table\">\n                    <ha-table id=\"tab-table2\"></ha-table>\n                </ha-tab>\n\n                <ha-tab titleText=\"Third Table\">\n                    <ha-table id=\"tab-table3\"></ha-table>\n                </ha-tab>\n            </ha-tabs>\n        </section>\n    </div>\n\n    <div id=\"responsive-table-layouts\" class=\"panel hidden\">\n        <section class=\"usage\">\n            <header class=\"title\"><a>Usage</a></header>\n            <div class=\"highlight\">\n                <pre><code><pre style=\"background:none; border:none;\">\n    var standardLayoutParent = document.querySelector('#table-layouts-standard-example'),\n        stackedLayoutParent = document.querySelector('#table-layouts-stacked-data-example'),\n        columnLockingLayoutParent = document.querySelector('#table-layouts-column-locking-example'),\n        simpleColumnDefStackedLayoutParent =\n            document.querySelector('#table-layouts-simple-column-def-stacked-example'),\n        standardTable = document.createElement('ha-table'),\n        stackedTable = document.createElement('ha-table'),\n        columnLockingTable = document.createElement('ha-table'),\n        simpleColumnDefStackedTable = document.createElement('ha-table');\n\n    standardTable.columns = complexColumns();\n    standardTable.collection = hofStore;\n\n    columnLockingTable.responsiveLayout = 'columnLocking';\n    columnLockingTable.columns = complexColumns();\n    columnLockingTable.collection = hofStore;\n\n    stackedTable.responsiveLayout = 'stacked';\n    stackedTable.columns = stackedColumns();\n    stackedTable.collection = hofStore;\n\n    simpleColumnDefStackedTable.responsiveLayout = 'stacked';\n    simpleColumnDefStackedTable.columns = {\n        first: 'First Name',\n        last: 'Last Name',\n        totalG: 'Games Played',\n        nickname: 'Nickname'\n    };\n    simpleColumnDefStackedTable.collection = hofStore;\n\n    standardLayoutParent.appendChild(standardTable);\n    stackedLayoutParent.appendChild(stackedTable);\n    columnLockingLayoutParent.appendChild(columnLockingTable);\n    simpleColumnDefStackedLayoutParent.appendChild(simpleColumnDefStackedTable);\n                </pre></code></pre>\n            </div>\n        </section>\n        <section class=\"examples\">\n            <header class=\"title\"><a>Examples</a></header>\n            <h2 class=\"title\">Standard Layout</h2>\n            <div id=\"table-layouts-standard-example\"></div>\n            <h2 class=\"title\">Stacked Data Layout</h2>\n            <div id=\"table-layouts-stacked-data-example\"></div>\n            <h2 class=\"title\">Column Locking Layout</h2>\n            <div id=\"table-layouts-column-locking-example\"></div>\n            <h2 class=\"title\">Simple Column Def Stacked Data Layout</h2>\n            <div id=\"table-layouts-simple-column-def-stacked-example\"></div>\n        </section>\n    </div>\n</div>\n";
  });

this["JST"]["tabs.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Horizontal Tab Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Tabs.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                     ## Horizontal Tabs\n\n                     &lt;ha-tabs&gt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Adjustments\"&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 1\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Mappings\"&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 2\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Send To Taxes\"&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 3\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &lt;/ha-tabs&gt;\n\n                     ## Horizontal Tabs With Icons\n\n                     &lt;ha-tabsgt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Adjustments\" icon=\"hi-settings-o\"&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 1\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Mappings\" icon=\"hi-duplicate\"&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 2\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Send To Taxes\" icon=\"hi-reconcile\"&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 3\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &lt;/ha-tabs&gt;\n\n                     ## Horizontal Tabs With Badges\n\n                     &lt;ha-tabs&gt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Messages\" badgeClass='ha-numeric-badge' badgeText='1337'&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 1\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Invoices\" badgeClass='ha-numeric-badge ha-inverse' badgeText='42'&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 2\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &nbsp;&nbsp;&lt;ha-tab titleText=\"Status\" badgeClass='ha-text-badge ha-warn' badgeText='Overdue'&gt;\n                     &nbsp;&nbsp;&nbsp;&nbsp;Content 3\n                     &nbsp;&nbsp;&lt;/ha-tab&gt;\n                     &lt;/ha-tabs&gt;\n\n                    ## Horizontal Tabs Without Button on Mobile\n\n                    &lt;ha-tabs useTabButton=\"false\"&gt;\n                    &nbsp;&nbsp;&lt;ha-tab titleText=\"Adjustments\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;Content 1\n                    &nbsp;&nbsp;&lt;/ha-tab&gt;\n                    &nbsp;&nbsp;&lt;ha-tab titleText=\"Mappings\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;Content 2\n                    &nbsp;&nbsp;&lt;/ha-tab&gt;\n                    &nbsp;&nbsp;&lt;ha-tab titleText=\"Send To Taxes\"&gt;\n                    &nbsp;&nbsp;&nbsp;&nbsp;Content 3\n                    &nbsp;&nbsp;&lt;/ha-tab&gt;\n                    &lt;/ha-tabs&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"horizontal-tab-demo examples \">\n        <header class=\"title\"><a>Examples</a></header>\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    // Horizontal Tab\n                    var haTabs = document.createElement('ha-tabs'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;tab1 = document.createElement('ha-tab'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;tab2 = document.createElement('ha-tab'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;tab3 = document.createElement('ha-tab'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;tab4 = document.createElement('ha-tab'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;dynamicTabContent = document.createElement('div'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;dynamicTabContent2 = document.createElement('div'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;dynamicTabContent3 = document.createElement('div'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;dynamicTabContent4 = document.createElement('div');\n\n                    tab1.titleText = 'Adjustments';\n                    tab2.titleText = 'Mappings';\n                    dynamicTabContent.innerHTML = this.createTabContent(tab1.titleText);\n                    tab1.section = dynamicTabContent;\n                    dynamicTabContent2.innerHTML = this.createTabContent(tab2.titleText);\n                    tab2.section = dynamicTabContent2;\n\n                    haTabs.tabs = [tab1, tab2];\n\n                    // Horizontal Tab With Icons\n                    var haTabs = document.createElement('ha-tabs'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;tab1 = document.createElement('ha-tab'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;tab2 = document.createElement('ha-tab');\n\n                    tab3.titleText = 'Adjustments';\n                    tab4.titleText = 'Mappings';\n                    dynamicTabContent3.innerHTML = this.createTabContent(tab3.titleText);\n                    tab3.section = dynamicTabContent3;\n                    dynamicTabContent4.innerHTML = this.createTabContent(tab4.titleText);\n                    tab4.section = dynamicTabContent4;\n\n                    tab3.icon = 'hi-settings-o';\n                    tab4.icon ='hi-duplicate';\n\n                    haTabs.tabs = [tab3, tab4];\n\n                    // Horizontal Tab With Badges\n                    ...\n                    tab1.badgeClass = 'ha-numeric-badge';\n                    tab1.badgeText = '1337';\n\n                    tab2.badgeClass = 'ha-numeric-badge ha-inverse';\n                    tab2.badgeText = '42';\n\n                    tab3.badgeClass = 'ha-text-badge ha-warn';\n                    tab3.badgeText = 'Overdue';\n\n                    haTabs.tabs = [tab1, tab2, tab3];\n                    ...\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"horizontal-tab-demo examples \">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n<section class=\"usage\">\n    <header class=\"title\">\n        <a>Usage</a>\n    </header>\n\n    <div class=\"highlight\">\n        <pre>\n            <code class=\"language-html\" data-lang=\"html\">\n                  ## Horizontal Tab\n\n                  &lt;HATabs&gt;\n                  &nbsp;&nbsp;&lt;HATab titleText=\"Adjustments\"&gt;\n                  &nbsp;&nbsp;&nbsp;&nbsp;Content 1\n                  &nbsp;&nbsp;&lt;/HATab&gt;\n                  &nbsp;&nbsp;&lt;HATab titleText=\"Mappings\"&gt;\n                  &nbsp;&nbsp;&nbsp;&nbsp;Content 2\n                  &nbsp;&nbsp;&lt;/HATab&gt;\n                  &nbsp;&nbsp;&lt;HATab titleText=\"Send To Taxes\"&gt;\n                  &nbsp;&nbsp;&nbsp;&nbsp;Content 3\n                  &nbsp;&nbsp;&lt;/HATab&gt;\n                  &lt;/HATabs&gt;\n\n                  ## Horizontal Tab With Icons\n\n                  &lt;HATabs&gt;\n                  &nbsp;&nbsp;&lt;HATab titleText=\"Adjustments\" icon=\"hi-settings-o\"&gt;\n                  &nbsp;&nbsp;&nbsp;&nbsp;Content 1\n                  &nbsp;&nbsp;&lt;/HATab&gt;\n                  &nbsp;&nbsp;&lt;HATab titleText=\"Mappings\" icon=\"hi-duplicate\"&gt;\n                  &nbsp;&nbsp;&nbsp;&nbsp;Content 2\n                  &nbsp;&nbsp;&lt;/HATab&gt;\n                  &nbsp;&nbsp;&lt;HATab titleText=\"Send To Taxes\" icon=\"hi-reconcile\"&gt;\n                  &nbsp;&nbsp;&nbsp;&nbsp;Content 3\n                  &nbsp;&nbsp;&lt;/HATab&gt;\n                  &lt;/HATabs&gt;\n            </code>\n        </pre>\n    </div>\n</section>\n\n<section class=\"examples\">\n    <header class=\"title\">\n        <a>Examples</a>\n    </header>\n    <div id=\"reactWay\"></div>\n</section>\n</div>\n";
  return buffer;
  });

this["JST"]["test-drive.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "";
  buffer += "\n              <ha-item value=\""
    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
    + "\">"
    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
    + "</ha-item>\n           ";
  return buffer;
  }

  buffer += "<style>\n.flexbox-container {\n    display: flex;\n    padding:10px;\n}\n\n.flexbox-container > .half-width {\n    width: 50%;\n}\n.half-width.code-section {\n  padding-left:20px;\n}\n\nha-tabs .ha-tabs-content {\n  height:auto;\n}\n</style>\n\n<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Test Drive\n    </h1>\n    <div class=\"meta\">\n      <button class=\"ha-button output-toggle\">Show Output only</button>\n      <ha-segmented-button class='templateChoices' class=\"usage-tab-buttons\">\n                <button value=\"handlebars\" selected=\"true\" title=\"Handlebars\">Backbone/Handlebars</button>\n                <button value=\"dojo\" title=\"Dojo\">Dojo</button>\n                <button value=\"react\" title=\"React\">React</button>\n      </ha-segmented-button>\n    </div>\n</section>\n\n<div class=\"flexbox-container\">\n    <!-- First Column -->\n    <div class=\"half-width template-section\">\n     <ha-tabs>\n      <ha-tab titletext=\"Template\">\n      <textarea name=\"comments\" id=\"code-input\" rows=\"25\" style=\"width: 100%\">\n        <form>\n          <ha-text-field label=\"Name\" class=\"ha-text-field\" value=\"";
  if (stack1 = helpers.author) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.author); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" maxlength=\"524288\" minlength=\"0\"></ha-text-field>\n        </form>\n        <div>\n          <ha-switch-button checked=";
  if (stack1 = helpers.status) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.status); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + " class=\"ha-switch-button\" title=\"on\"></ha-switch-button>\n        </div>\n        <div>\n          <ha-checkbox label=\"Enabled Checkbox (default checked)\" checked=";
  if (stack1 = helpers.status) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.status); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "></ha-checkbox>\n        </div>\n        <div>\n         <button class=\"ha-button hi-icon-button\">\n                <i class=\"hi hi-camera\"></i>";
  if (stack1 = helpers.author) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.author); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "\n        </button>\n        <div>\n            <button class=\"ha-button ha-button-primary\" disabled=\"\">";
  if (stack1 = helpers.author) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.author); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "</button>\n            <button class=\"ha-button ha-button-primary\">";
  if (stack1 = helpers.author) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.author); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "</button>\n            <button class=\"ha-button ha-button-primary hi-icon-button\">\n                <i class=\"hi hi-accountant\"></i>";
  if (stack1 = helpers.author) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.author); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "\n            </button>\n        </div>\n        </div>\n        <div>\n\n        <ha-combo-button class=\"ha-button-primary\" label=\"Michael Jordan\">\n           ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.people), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </ha-combo-button>\n\n        <ha-menu-button class=\"ha-button-primary\" label=\"Send Message\">\n           ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.people), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </ha-menu-button>\n\n        <ha-combo-link class=\"ha-button-primary\" label=\"Michael Jordan\">\n           ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.people), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </ha-combo-link>\n\n        <ha-select class=\"ha-button-primary\" label=\"Choose your player\">\n           ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.people), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </ha-select>\n        </div>\n        <div>\n        <ha-money-bar>\n          <ha-money-bar-segment titleTextBold=\"50\" titleText=\"Unbilled\">\n             <ha-money-bar-cell class=\"mbDarkBlue\" primaryText=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.insights)),stack1 == null || stack1 === false ? stack1 : stack1.openEstimates)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" secondaryText=\"2 ESTIMATE\"></ha-money-bar-cell>\n             <ha-money-bar-cell class=\"mbLightBlue\" primaryText=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.insights)),stack1 == null || stack1 === false ? stack1 : stack1.unbilledActivity)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" secondaryText=\"2 UNBILLED ACTIVITY\"></ha-money-bar-cell>\n          </ha-money-bar-segment>\n        </ha-money-bar>\n        </div>\n        <div>\n\n            <ha-radio-button-group name=\"RadioDemo\" selectedItem=\"2\">\n                <ha-radio-button label=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.options)),stack1 == null || stack1 === false ? stack1 : stack1.option1)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" value=\"1\" disabled></ha-radio-button>\n                <ha-radio-button label=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.options)),stack1 == null || stack1 === false ? stack1 : stack1.option2)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" value=\"2\" checked></ha-radio-button>\n                <ha-radio-button label=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.options)),stack1 == null || stack1 === false ? stack1 : stack1.option3)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" value=\"3\"></ha-radio-button>\n            </ha-radio-button-group>\n        </div>\n        <ha-list titleText=\"Single select list\">\n                <li>First list item</li>\n                <li>Second list item</li>\n                <li>Third list item</li>\n        </ha-list>\n        </textarea>\n\n      </ha-tab>\n      <ha-tab titletext=\"Data\">\n      <textarea name=\"comments\" id=\"data-input\" rows=\"25\" style=\"width: 100%\">\n        {\n          \"people\": [\n            \"Sachin Tendulkar\",\n            \"Michael Schumacher\",\n            \"Michael Jordan\"\n          ],\n          \"author\": \"Hui Developer\",\n          \"status\": false,\n          \"options\": {\n            \"option1\": \"Check\",\n            \"option2\": \"Credit/Debit\",\n            \"option3\": \"Cash\"\n          },\n          \"insights\":{\n             \"openEstimates\": \"$50.00\",\n             \"unbilledActivity\" : \"$100.00\"\n          }\n\n        }\n                </textarea>\n      </ha-tab>\n      <ha-tab titletext=\"Synthetic event Log\">\n      <button class=\"clear-logs ha-button\">Clear Logs</button>\n      <textarea name=\"event logs\" id=\"event-logs\" rows=\"25\" style=\"width: 100%\"></textarea>\n      </ha-tab>\n     </ha-tabs>\n\n    </div>\n    <!-- Second Column -->\n    <div class=\"half-width code-section\"><section class=\"usage\">\n     <header class=\"title\"><a>Output HTML</a></header>\n     <div id=\"html\"></div>\n    </section></div>\n</div>\n";
  return buffer;
  });

this["JST"]["textarea.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Textarea Component\n    </h1>\n\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n</section>\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-textarea label=\"Name\"&gt;&lt;/ha-textarea&gt;\n                    &lt;ha-textarea label=\"Name\" placeholder=\"Your Name\"&gt;&lt;/ha-textarea&gt;\n                    &lt;ha-textarea label=\"Name\" disabled required&gt;&lt;/ha-textarea&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            <h3>Enabled</h3>\n            <ha-textarea label=\"Name\"></ha-textarea>\n            <ha-textarea label=\"Name with Placeholder\" placeholder=\"Your name\"></ha-textarea>\n            <ha-textarea label=\"Name with Value\" value=\"Default text\"></ha-textarea>\n            <h3>Disabled</h3>\n            <ha-textarea label=\"Disabled Name\" disabled=\"true\"></ha-textarea>\n            <ha-textarea label=\"Disabled Name with Placeholder\" placeholder=\"Your name\" disabled=\"true\"></ha-textarea>\n            <h3>With Error</h3>\n            <ha-textarea label=\"With Error\" required=\"true\" class=\"with-error\"></ha-textarea>\n            <h3>Required</h3>\n            <ha-textarea label=\"Required Field\" required=\"true\"></ha-textarea>\n            <h3>Required No Indicator</h3>\n            <ha-textarea label=\"Required Field\" required=\"true\" noRequiredIndicator></ha-textarea>\n            <h3>Optional true</h3>\n            <ha-textarea label=\"Optional Field\" optional=\"true\" labelOptional=\"Optional\"></ha-textarea>\n            <h3>No Label</h3>\n            <ha-textarea placeholder=\"No Label\"></ha-textarea>\n            <h3>With name attribute</h3>\n            <ha-textarea name=\"Name test\" placeholder=\"With name attribute\"></ha-textarea>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var textarea = document.createElement('ha-textarea');\n\n                    textarea.label = 'Name';\n                    textarea.disabled = true;\n                    textarea.placeholder = 'Your name';\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\"></div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HATextarea label=\"Name\"&gt;&lt;/HATextarea&gt;\n                    &lt;HATextarea label=\"Name\" placeholder=\"Your Name\"&gt;&lt;/HATextarea&gt;\n                    &lt;HATextarea label=\"Name\" disabled required&gt;&lt;/HATextarea&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"reactWay\"></div>\n    </section>\n</div>\n";
  });

this["JST"]["textfield-type-ahead.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\r\n    <h1 class=\"entry-title\">\r\n        Textfield Type Ahead Component\r\n    </h1>\r\n\r\n    <div class=\"meta\">\r\n        <ha-segmented-button class=\"usage-tab-buttons\">\r\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\r\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\r\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\r\n            <button class=\"segmented-nav\" value=\"react\">React</button>\r\n        </ha-segmented-button>\r\n    </div>\r\n    <div class=\"design-document\">\r\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/TextFieldTypeAhead.md\" target=\"_blank\">Design & API Document</a>\r\n    </div>\r\n</section>\r\n<div class=\"panel\" id=\"html\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\"><a>Usage</a></header>\r\n        <div class=\"highlight\">\r\n            <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"language-html\" data-lang=\"html\">\r\n                    &lt;ha-textfield-type-ahead label=\"Some title\" placeholder=\"Choose an item\"&gt;\r\n                    &lt;/ha-textfield-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-type-ahead');\r\n                    typeahead.store = ...\r\n\r\n                    &lt;ha-textfield-type-ahead label=\"Some title\" placeholder=\"Choose an item\" disabled&gt;\r\n                    &lt;/ha-textfield-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-type-ahead');\r\n                    typeahead.store = ...\r\n\r\n                    &lt;ha-textfield-type-ahead label=\"Some title\" placeholder=\"Choose an item\" icon=\"hi-search\"&gt;\r\n                    &lt;/ha-textfield-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-type-ahead');\r\n                    typeahead.store = ...\r\n\r\n                    &lt;ha-textfield-type-ahead label=\"Some title\" openItemsOnFocus=true placeholder=\"Choose an item\" icon=\"hi-search\"&gt;\r\n                    &lt;/ha-textfield-type-ahead&gt;\r\n\r\n                    var typeahead = querySelector('ha-type-ahead');\r\n                    typeahead.store = ...\r\n                </code>\r\n            </pre>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n    </section>\r\n</div>\r\n<div class=\"panel hidden\" id=\"js\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\"><a>Usage</a></header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"js\" data-lang=\"js\">\r\n                    select = document.createElement('ha-textfield-type-ahead');\r\n                    select.label = 'Choose an item';\r\n                    select.store = ....\r\n\r\n                    disabledSelect = document.createElement('ha-textfield-type-ahead');\r\n                    disabledSelect.disabled = true;\r\n                    disabledSelect.label = 'Choose an item';\r\n                    disabledSelect.store = ....\r\n\r\n                    iconTextfield = document.createElement('ha-textfield-type-ahead');\r\n                    iconTextfield.label = 'Choose an item';\r\n                    iconTextfield.icon = 'hi-search';\r\n                    iconTextfield.store = ....\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        <div id=\"programmaticWay\">\r\n        </div>\r\n    </section>\r\n</div>\r\n\r\n\r\n<div class=\"panel hidden\" id=\"dojo\">\r\n    <section class=\"examples\">\r\n        <header class=\"title\"><a>Examples</a></header>\r\n        <div id=\"dojoProgrammaticWay\">\r\n        </div>\r\n    </section>\r\n</div>\r\n\r\n<div class=\"panel hidden\" id=\"react\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\">\r\n            <a>Usage</a>\r\n        </header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"js\" data-lang=\"js\">\r\n                    import React from \"react\";\r\n                    import HATextFieldTypeAhead from \"hui-react/HATextFieldTypeAhead\";\r\n\r\n                    const data = [{\r\n                    &nbsp;&nbsp;label: \"Apple\",\r\n                    &nbsp;&nbsp;value: \"Apple\"\r\n                    }, {\r\n                    &nbsp;&nbsp;label: \"Banana\",\r\n                    &nbsp;&nbsp;value: \"Banana\"\r\n                    }, {\r\n                    &nbsp;&nbsp;label: \"Balloon\",\r\n                    &nbsp;&nbsp;value: \"Balloon\"\r\n                    }, {\r\n                    &nbsp;&nbsp;label: \"Mellon\",\r\n                    &nbsp;&nbsp;value: \"Mellon\"\r\n                    }];\r\n\r\n                    class MyTypeahead extends React.Component {\r\n                    &nbsp;&nbsp;constructor(props) {\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;super(props);\r\n\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;this.state = {\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value: &quot;&quot;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;};\r\n\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;this.handleClick = this.handleClick.bind(this);\r\n                    &nbsp;&nbsp;}\r\n\r\n                    &nbsp;&nbsp;handleChange(event) {\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;const {selectedItem} = event,\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = (selectedItem) ? selectedItem.value : &quot;&quot;;\r\n\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;this.setState({\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;});\r\n                    &nbsp;&nbsp;}\r\n\r\n\r\n                    &nbsp;&nbsp;render() {\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;return (\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;HATextFieldTypeAhead\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label=&quot;Fruit&quot;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;placeholder=&quot;Choose an item&quot;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data={data}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value={this.state.value}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onChange={this.handleChange}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&gt;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;);\r\n                    &nbsp;&nbsp;}\r\n                    }\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n    <section class=\"examples\"></section>\r\n</div>\r\n";
  return buffer;
  });

this["JST"]["textfield.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\r\n    <h1 class=\"entry-title\">\r\n        Text Field Component\r\n    </h1>\r\n\r\n    <div class=\"meta\">\r\n        <ha-segmented-button class=\"usage-tab-buttons\">\r\n            <button type=\"button\" class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\r\n            <button type=\"button\" class=\"segmented-nav\" value=\"js\">Javascript</button>\r\n            <button type=\"button\" class=\"segmented-nav\" value=\"dojo\">Dojo</button>\r\n            <button type=\"button\" class=\"segmented-nav\" value=\"react\">React</button>\r\n        </ha-segmented-button>\r\n    </div>\r\n    <div class=\"design-document\">\r\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/TextField.md\" target=\"_blank\">Design & API Document</a>\r\n    </div>\r\n</section>\r\n<div class=\"panel\" id=\"html\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\">\r\n            <a>Usage</a>\r\n        </header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"language-html\" data-lang=\"html\">\r\n                    &lt;!-- Enabled --&gt;\r\n                    &lt;h3&gt;Enabled&lt;/h3&gt;\r\n                    &lt;ha-text-field label=\"Name\"&gt;&lt;/ha-text-field&gt;\r\n                    &lt;ha-text-field label=\"Name with Placeholder\" placeholder=\"Your name\"&gt;&lt;/ha-text-field&gt;\r\n                    &lt;ha-text-field label=\"Name with Value\" value=\"Default text\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- Disabled --&gt;\r\n                    &lt;h3&gt;Disabled&lt;/h3&gt;\r\n                    &lt;ha-text-field label=\"Disabled Name\" disabled=\"true\"&gt;&lt;/ha-text-field&gt;\r\n                    &lt;ha-text-field label=\"Disabled Name with Placeholder\" placeholder=\"Your name\" disabled=\"true\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- With Error --&gt;\r\n                    &lt;h3&gt;With Error&lt;/h3&gt;\r\n                    &lt;ha-text-field label=\"With Error\" required=\"true\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- Required --&gt;\r\n                    &lt;h3&gt;Required&lt;/h3&gt;\r\n                    &lt;ha-text-field label=\"Required Field\" required=\"true\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- Optional true --&gt;\r\n                    &lt;h3&gt;Optional true&lt;/h3&gt;\r\n                    &lt;ha-text-field label=\"Optional Field\" optional=\"true\" labelOptional=\"optional\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- Optional false --&gt;\r\n                    &lt;h3&gt;Optional false&lt;/h3&gt;\r\n                    &lt;ha-text-field label=\"Optional Field\" optional=\"false\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- No Label --&gt;\r\n                    &lt;h3&gt;No Label&lt;/h3&gt;\r\n                    &lt;ha-text-field placeholder=\"No Label\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- With name --&gt;\r\n                    &lt;h3&gt;With name&lt;/h3&gt;\r\n                    &lt;ha-text-field name=\"Name test\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- Auto Complete ON --&gt;\r\n                    &lt;h3&gt;Auto Complete ON&lt;/h3&gt;\r\n                    &lt;ha-text-field autoComplete=\"on\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- Auto Complete OFF --&gt;\r\n                    &lt;h3&gt;Auto Complete OFF&lt;/h3&gt;\r\n                    &lt;ha-text-field autoComplete=\"off\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- Size --&gt;\r\n                    &lt;h3&gt;Size&lt;/h3&gt;\r\n                    &lt;ha-text-field size=\"30\"&gt;&lt;/ha-text-field&gt;\r\n\r\n                    &lt;!-- With Icon --&gt;\r\n                    &lt;h3&gt;With Icon&lt;/h3&gt;\r\n                    &lt;ha-text-field label=\"With Icon\" icon=\"hi-search\"&gt;&lt;/ha-text-field&gt;\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"examples\">\r\n        <header class=\"title\">\r\n            <a>Examples</a>\r\n        </header>\r\n        <div>\r\n            <h3>Enabled</h3>\r\n            <ha-text-field label=\"Name\"></ha-text-field>\r\n            <ha-text-field label=\"Name with Placeholder\" placeholder=\"Your name\"></ha-text-field>\r\n            <ha-text-field label=\"Name with Value\" value=\"Default text\"></ha-text-field>\r\n            <ha-text-field placeholder=\"No Label\"></ha-text-field>\r\n            <h3>Disabled</h3>\r\n            <ha-text-field label=\"Disabled Name\" disabled=\"true\"></ha-text-field>\r\n            <ha-text-field label=\"Disabled Name with Placeholder\" placeholder=\"Your name\" disabled=\"true\"></ha-text-field>\r\n            <h3>With Error</h3>\r\n            <ha-text-field label=\"With Error\" required=\"true\" class=\"with-error\"></ha-text-field>\r\n            <h3>Required</h3>\r\n            <ha-text-field label=\"Required Field\" required=\"true\"></ha-text-field>\r\n            <h3>Required No Indicator</h3>\r\n            <ha-text-field label=\"Required Field No Indicator\" required=\"true\" noRequiredIndicator></ha-text-field>\r\n            <h3>Optional true</h3>\r\n            <ha-text-field label=\"Optional Field\" optional=\"true\" labelOptional=\"optional\"></ha-text-field>\r\n            <h3>Optional false</h3>\r\n            <ha-text-field label=\"Optional Field\" optional=\"false\"></ha-text-field>\r\n            <h3>No Label</h3>\r\n            <ha-text-field placeholder=\"No Label\"></ha-text-field>\r\n            <h3>No Label required</h3>\r\n            <ha-text-field required placeholder=\"Required\"></ha-text-field>\r\n            <h3>With name</h3>\r\n            <ha-text-field label=\"Field with name\" name=\"Name test\"></ha-text-field>\r\n            <h3>Auto Complete ON</h3>\r\n            <ha-text-field label=\"With auto complete\" autoComplete=\"on\"></ha-text-field>\r\n            <h3>Auto Complete OFF</h3>\r\n            <ha-text-field label=\"Without auto complete\" autoComplete=\"off\"></ha-text-field>\r\n            <h3>Size</h3>\r\n            <ha-text-field label=\"With size\" size=\"30\"></ha-text-field>\r\n            <h3>With Icon</h3>\r\n            <ha-text-field label=\"Name\" icon=\"hi-search\"></ha-text-field>\r\n            <ha-text-field label=\"Name with Placeholder\" placeholder=\"Your name\" icon=\"hi-search\"></ha-text-field>\r\n            <ha-text-field label=\"name with value\" value=\"default text\" icon=\"hi-search\"></ha-text-field>\r\n            <div class=\"hidden-desktop\">\r\n                <h3>With Attachment</h3>\r\n                <ha-text-field label=\"Choose a file\" attachment></ha-text-field>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</div>\r\n\r\n<div class=\"panel hidden\" id=\"js\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\">\r\n            <a>Usage</a>\r\n        </header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"language-html\" data-lang=\"html\">\r\n                    var textField = document.createElement(\"ha-text-field\"),\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;errorTextField = document.createElement(\"ha-text-field\"),\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;requiredTextField = document.createElement(\"ha-text-field\"),\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;optionalTextField = document.createElement(\"ha-text-field\"),\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;iconTextField = document.createElement(\"ha-text-field\");\r\n\r\n                    /* Disabled with placeholder */\r\n                    textField.label = 'Disabled Name with Placeholder';\r\n                    textField.disabled = true;\r\n                    textField.placeholder = 'Your name';\r\n\r\n                    /* With error */\r\n                    errorTextField.label = 'With error';\r\n                    errorTextField.required = true;\r\n\r\n                    /* Required */\r\n                    requiredTextField.label = 'Required Field';\r\n                    requiredTextField.required = true;\r\n\r\n                    /* Optional */\r\n                    optionalTextField.label = 'Optional Field';\r\n                    optionalTextField.labelOptional = 'Same Optional field';\r\n                    optionalTextField.optional = true;\r\n\r\n                    /* With Icon */\r\n                    textField.label = 'With Icon';\r\n                    textField.icon = 'hi-search';\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"examples\">\r\n        <header class=\"title\">\r\n            <a>Examples</a>\r\n        </header>\r\n        <div id=\"programmaticWay\"></div>\r\n    </section>\r\n</div>\r\n\r\n<div class=\"panel hidden\" id=\"dojo\">\r\n    <section class=\"examples\">\r\n        <header class=\"title\">\r\n            <a>Examples</a>\r\n        </header>\r\n        <div id=\"dojoProgrammaticWay\"></div>\r\n    </section>\r\n</div>\r\n\r\n<div class=\"panel hidden\" id=\"react\">\r\n    <section class=\"usage\">\r\n        <header class=\"title\">\r\n            <a>Usage</a>\r\n        </header>\r\n        <div class=\"highlight\">\r\n            <pre>\r\n                <code class=\"language-html\" data-lang=\"html\">\r\n                    /* onChange & onInput event listeners */\r\n                    &lt;HATextField label=\"On Change\" onChange={eventLog} onInput={eventLog}&gt;&lt;/HATextField&gt;\r\n\r\n                    /* Disabled with placeholder */\r\n                    &lt;HATextField label=\"Disabled Name with Placeholder\" disabled={true} placeholder=\"Your name\"&gt;&lt;/HATextField&gt;\r\n\r\n                    /* With error */\r\n                    &lt;HATextField label=\"With error\" required={true}&gt;&lt;/HATextField&gt;\r\n\r\n                    /* Required */\r\n                    &lt;HATextField label=\"Required Field\" required={true}&gt;&lt;/HATextField&gt;\r\n\r\n                    /* Optional */\r\n                    &lt;HATextField label=\"Optional Field\" labelOptional=\"Same Optional field\" optional={true}&gt;&lt;/HATextField&gt;\r\n\r\n                    /* With Icon */\r\n                    &lt;HATextField label=\"With Icon\" icon=\"hi-search\"&gt;&lt;/HATextField&gt;\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </section>\r\n    <section class=\"examples\">\r\n        <header class=\"title\">\r\n            <a>Examples</a>\r\n        </header>\r\n        <div id=\"reactWay\"></div>\r\n    </section>\r\n</div>\r\n";
  });

this["JST"]["toast-message.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Toast Message Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/ToastMessage.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-toast-message id=\"Toast1\" duration=\"5000\" dismissible=\"true\"&gt;\n                        &nbsp;&nbsp;My message here test &lt;strong&gt;with bold text&lt;/strong&gt;, timeout 5s.\n                    &lt;/ha-toast-message&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div style=\"position:relative; background:#f0f0f0; height:200px; max-width:636px; margin:20px auto; border:1px solid gray;\">\n            <ha-toast-message id=\"Toast1\" duration=\"5000\">\n                Lorem ipsum dolor <strong>with bold text</strong>, timeout 5s.\n            </ha-toast-message>\n            <ha-toast-message id=\"Toast2\" duration=\"2000\" dismissible=\"false\">\n                Lorem ipsum dolor sit amet, amet hendrerit a semper reprehenderit <strong>with bold text</strong>, timeout 2s.\n            </ha-toast-message>\n            <ha-toast-message id=\"Toast3\" duration=\"-1\" dismissible=\"true\">\n                Lorem ipsum dolor sit amet, amet hendrerit a semper reprehenderit, <strong>with bold text</strong>.\n            </ha-toast-message>\n        </div>\n        <button class=\"ha-button btn-show-toast\" value=\"Toast1\">Show Toast 1</button>\n        <button class=\"ha-button btn-show-toast\" value=\"Toast2\">Show Toast 2</button>\n        <button class=\"ha-button btn-show-toast\" value=\"Toast3\">Show Toast 3</button>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var node = document.createElement(\"ha-toast-message\");\n\n                    node.dismissible = true;\n                    node.duration = 3000;\n                    node.message = \"My message <strong>here</strong>\";\n                    node.show();\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div style=\"position:relative; background:#f0f0f0; height:200px; max-width:636px; margin:20px auto; border:1px solid gray;\" id=\"programmaticWay\">\n        </div>\n    </section>\n\n    <button class=\"ha-button btn-show-toast\" value=\"ToastJS1\">Show Toast 1</button>\n    <button class=\"ha-button btn-show-toast\" value=\"ToastJS2\">Show Toast 2</button>\n    <button class=\"ha-button btn-show-toast\" value=\"ToastJS3\">Show Toast 3</button>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;HAToastMessage closeCallback={() =&gt; this._closeToast(1)} onShow={eventLog} onClose={eventLog} onDismiss={eventLog} id=\"Toast1\" duration={5000} show={this.state.showToast1}&gt;\n                        Lorem ipsum dolor &lt;strong&gt;with bold text&lt;/strong&gt;, timeout 5s.\n                    &lt;/HAToastMessage&gt;\n                    &lt;HAToastMessage closeCallback={() =&gt; this._closeToast(2)} id=\"Toast2\" duration={2000} dismissible={false} show={this.state.showToast2}&gt;\n                        Lorem ipsum dolor sit amet, amet hendrerit a semper reprehenderit &lt;strong&gt;with bold text&lt;/strong&gt;, timeout 2s.\n                    &lt;/HAToastMessage&gt;\n                    &lt;HAToastMessage closeCallback={() =&gt; this._closeToast(3)} id=\"Toast3\" duration={-1} dismissible={true} show={this.state.showToast3}&gt;\n                        Lorem ipsum dolor sit amet, amet hendrerit a semper reprehenderit, &lt;strong&gt;with bold text&lt;/strong&gt;.\n                    &lt;/HAToastMessage&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"reactWay\">\n    </section>\n</div>";
  });

this["JST"]["tooltips.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<style>\n.separator {\n    margin-bottom: 15px;\n    border-bottom: 1px solid #DCDCDC;\n    display: table;\n}\n.separator label{\n    display: table-cell;\n    vertical-align: middle;\n}\n.separator ha-text-field {\n    margin-bottom: 5px;\n}\n.note {\n    border: 1px solid #EEE;\n    border-left: 5px solid #AA6708;\n    border-radius: 4px;\n    padding: 5px 10px;\n}\n.note > h5 {\n    color: #AA6708;\n}\n</style>\n<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Tooltip Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Tooltip.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;ha-text-field id=\"myTextField\"&gt;&lt;/ha-text-field&gt;\n                    &lt;ha-tooltip targetselector=\"#myTextField\" message=\"Text field with tooltip\"&gt;&lt;/ha-tooltip&gt;\n                </code>\n            </pre>\n        </div>\n        <div class=\"note\">\n            <h5>Positioning</h5>\n            <p>In a few edge cases you may be facing positioning issues, and you can follow one of this possible solutions:</p>\n            <ol>\n                <li>If using flex, where the offset parent has position relative, display flex and align-items as strech, you may want to change the align-items value or wrap the target and element in a relative positioned tag.</li>\n                <li>Make sure that target and the element are sibilings and/or share the same offset parent.</li>\n            </ol>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            <h2>Focus</h2>\n            <div class=\"separator\">\n                <ha-text-field label=\"Default tooltip\"></ha-text-field>\n                <ha-tooltip trigger=\"focus\" message=\"This is a textview with a default tooltip and trigger 'focus'\">\n                </ha-tooltip>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field label=\"Timed (5 seconds) tooltip, bottom position\"></ha-text-field>\n                <ha-tooltip trigger=\"focus\" position=\"bottom\" alignment=\"right\"\n                    message=\"This is a textview with a timed (5 seconds) tooltip, position bottom and trigger 'focus'\"\n                    duration=\"5000\"></ha-tooltip>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field label=\"Close button, top position\"></ha-text-field>\n                <ha-tooltip trigger=\"focus\" position=\"top\" alignment=\"right\"  message=\"This is a textview with a close button, position top and trigger focus\" dismissible=\"true\"></ha-tooltip>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field label=\"Tooltip with rich content, bottom position\"></ha-text-field>\n                <ha-tooltip position=\"bottom\" alignment=\"left\" trigger=\"focus\">\n                    <h4>Rich content</h4>\n                    <p>Tooltip with rich content, bottom position</p>\n                </ha-tooltip>\n            </div>\n\n            <div class=\"hidden-handheld\">\n                <h2>Hover</h2>\n                <div class=\"separator\">\n                    <ha-text-field label=\"Default tooltip\"></ha-text-field>\n                    <ha-tooltip message=\"This is a textview with a default tooltip and trigger 'hover'.\">\n                    </ha-tooltip>\n                </div>\n\n                <div class=\"separator\">\n                    <ha-text-field label=\"Timed (5 seconds), top position\"></ha-text-field>\n                    <ha-tooltip position=\"top\" alignment=\"left\"\n                                message=\"This is a textview with a timed (5 seconds) tooltip\"\n                                duration=\"5000\"></ha-tooltip>\n                </div>\n\n                <div class=\"separator\">\n                    <ha-text-field label=\"Close button, top position\"></ha-text-field>\n                    <ha-tooltip position=\"top\" alignment=\"left\"\n                                message=\"This is a textview with a close button and a top left position\"\n                                dismissible=\"true\">\n                    </ha-tooltip>\n                </div>\n\n                <div class=\"separator\">\n                    <ha-text-field label=\"Tooltip with rich content, bottom position\"></ha-text-field>\n                    <ha-tooltip position=\"bottom\" alignment=\"left\">\n                        <h4>Rich content</h4>\n                        <p>Tooltip with rich content, bottom position</p>\n                    </ha-tooltip>\n                </div>\n            </div>\n\n            <div class=\"separator\">\n                <ha-text-field label=\"Grouped tooltip\" class=\"tooltip-selector-html\" tooltipmessage=\"Grouped tooltip - textfield 1\"></ha-text-field>\n                <ha-text-field class=\"tooltip-selector-html\" tooltipmessage=\"Grouped tooltip - textfield 2\"></ha-text-field>\n                <ha-tooltip targetselector=\".tooltip-selector-html\"></ha-tooltip>\n            </div>\n\n            <h2>Focus and over</h2>\n            <div class=\"separator\">\n                <ha-text-field id=\"html-textfield\" label=\"Default tooltip\"></ha-text-field>\n                <ha-tooltip id=\"html-tooltip\" trigger=\"custom\" message=\"This is a textview with a custom trigger\">\n                </ha-tooltip>\n            </div>\n\n        </div>\n    </section>\n</div>\n\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var textField = document.createElement('ha-text-field'),\n                    &nbsp;&nbsp;&nbsp;&nbsp;tooltip = document.createElement('ha-tooltip');\n\n                    tooltip.message = \"Text field with tooltip!\";\n                    tooltip.duration = 5000;\n                    tooltip.dismissible = true;\n\n                    document.body.appendchild(textField);\n                    document.body.appendchild(tooltip);\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\">\n            <a>Usage</a>\n        </header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;h2&gt;Focus&lt;/h2&gt;\n                    &lt;HATextField&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip trigger=\"focus\"&gt;\n                        This is a textview with a default tooltip and trigger 'focus'\n                    &lt;/HATooltip&gt;\n                    &lt;label htmlFor=\"\"&gt;Default tooltip&lt;/label&gt;\n\n                    &lt;HATextField&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip trigger=\"focus\" position=\"bottom\" alignment=\"right\" duration={5000}&gt;\n                        This is a textview with a timed (5 seconds) tooltip, position bottom, alignment right and trigger 'focus'\n                    &lt;/HATooltip&gt;\n                    &lt;label&gt;Timed (5 seconds) tooltip, bottom position, right alignment&lt;/label&gt;\n\n                    &lt;HATextField&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip trigger=\"focus\" position=\"top\" alignment=\"right\" dismissible={true}&gt;\n                        This is a textview with a close button, position top, alignment right and trigger focus\n                    &lt;/HATooltip&gt;\n                    &lt;label&gt;Close button, top position, right alignment&lt;/label&gt;\n\n                    &lt;HATextField&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip position=\"bottom\" alignment=\"left\" trigger=\"focus\"&gt;\n                        &lt;h4&gt;Rich content&lt;/h4&gt;\n                        &lt;p&gt;Tooltip with rich content, bottom position, left alignment&lt;/p&gt;\n                    &lt;/HATooltip&gt;\n                    &lt;label&gt;Tooltip with rich content, bottom position, left alignment&lt;/label&gt;\n\n                    &lt;h2&gt;Hover&lt;/h2&gt;\n                    &lt;HATextField&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip&gt;\n                        This is a textview with a default tooltip and a bottom position.\n                    &lt;/HATooltip&gt;\n                    &lt;label&gt;Default tooltip&lt;/label&gt;\n\n                    &lt;HATextField&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip position=\"top\" alignment=\"left\" duration={5000}&gt;\n                        This is a textview with a timed (5 seconds) tooltip\n                    &lt;/HATooltip&gt;\n                    &lt;label&gt;Timed (5 seconds), top position, left alignment&lt;/label&gt;\n\n                    &lt;HATextField&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip position=\"top\" alignment=\"left\" dismissible={true}&gt;\n                        This is a textview with a close button and a top left position\n                    &lt;/HATooltip&gt;\n                    &lt;label&gt;Close button, top position and left alignment&lt;/label&gt;\n\n                    &lt;HATextField&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip position=\"bottom\" alignment=\"left\"&gt;\n                        &lt;h4&gt;Rich content&lt;/h4&gt;\n                        &lt;p&gt;Tooltip with rich content, bottom position, left alignment&lt;/p&gt;\n                    &lt;/HATooltip&gt;\n                    &lt;label&gt;Tooltip with rich content, bottom position, left alignment&lt;/label&gt;\n\n                    &lt;h2&gt;Focus and over&lt;/h2&gt;\n                    &lt;HATextField id=\"react-textfield\"&gt;&lt;/HATextField&gt;\n                    &lt;HATooltip id=\"react-tooltip\" trigger=\"custom\"&gt;\n                        This is a textview with a custom trigger\n                    &lt;/HATooltip&gt;\n                    &lt;label&gt;Default tooltip&lt;/label&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\">\n            <a>Examples</a>\n        </header>\n        <div id=\"reactWay\"></div>\n    </section>\n</div>\n";
  });

this["JST"]["page-modal.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Trowser Flow Component\n    </h1>\n\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div class=\"declarative-wrapper\">\n            <ha-trowser-flow flow=\"linear\" titleText=\"Linear navigation Title\" id=\"declarative-trowser-flow-linear\">\n                <main>\n                    <ha-trowser-flow-step titleText=\"step1 title\">\n                        content for step1 here\n                    </ha-trowser-flow-step>\n                    <ha-trowser-flow-step titleText=\"step2 title\">\n                        content for step2 here\n                    </ha-trowser-flow-step>\n                    <ha-trowser-flow-step titleText=\"step3 title\">\n                        content for step3 here\n                    </ha-trowser-flow-step>\n                    <ha-trowser-flow-step titleText=\"step4 title\">\n                        content for step4 here\n                    </ha-trowser-flow-step>\n                    <ha-trowser-flow-step titleText=\"step5 title\">\n                        content for step5 here\n                    </ha-trowser-flow-step>\n                </main>\n                <footer>\n                    <button class=\"ha-button ha-button-dark ha-button-primary\" action=\"primary\">Next</button>\n                    <button class=\"ha-button ha-button-dark\" action=\"secondary\">Back</button>\n                </footer>\n            </ha-trowser-flow>\n\n            <ha-trowser-flow flow=\"nonlinear\" titleText=\"Non Linear navigation Title\" id=\"declarative-trowser-flow-nonlinear\">\n                <main>\n                    <ha-trowser-flow-step titleText=\"step name\" icon=\"user\" description=\"Step Description\">\n                        content for step1 here\n                    </ha-trowser-flow-step>\n                    <ha-trowser-flow-step titleText=\"step name\" icon=\"map\" description=\"Step Description\">\n                        content for step2 here\n                    </ha-trowser-flow-step>\n                    <ha-trowser-flow-step titleText=\"step name\" icon=\"attach\" description=\"Step Description\">\n                        content for step3 here\n                    </ha-trowser-flow-step>\n                </main>\n                <footer>\n                    <button class=\"ha-button ha-button-dark ha-button-primary\" action=\"primary\">Next</button>\n                    <button class=\"ha-button ha-button-dark\" action=\"secondary\">Back</button>\n                </footer>\n            </ha-trowser-flow>\n            <button class=\"ha-button show-trowser\" data-trowser-id=\"#declarative-trowser-flow-linear\">\n                Show Trowser Flow Linear\n            </button>\n            <button class=\"ha-button show-trowser\" data-trowser-id=\"#declarative-trowser-flow-nonlinear\">\n                Show Trowser Flow Nonlinear\n            </button>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var node = document.createElement(\"ha-trowser-flow\");\n                    node.titleText = \"Invoice\";\n                    node.info = \"optional header info\"\n\n                    // default false\n                    node.history = true;\n                    // default false\n                    node.settings = false;\n                    // default true\n                    node.help = true;\n                    // defaul true\n                    node.dismissible = true;\n\n                    // assume the following components are pre-created, make sure the `action` property is set\n                    node.footerItems = [buttonCancel, buttonLinks, buttonSave, comboButton];\n\n                    // your main node, append your content here;\n                    var mainNode = document.createElement(\"div\");\n\n                    node.addContent({section: mainNode});\n                    node.render();\n\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>";
  });

this["JST"]["trowser.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Trowser Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">Javascript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"react\">React</button>\n        </ha-segmented-button>\n    </div>\n   <div class=\"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Trowser.md\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    New Contract:\n\n                    &lt;ha-trowser titleText=\"Welcome to QuickBooks!\" infoText=\"optional header info\" history=\"true\" settings=\"true\" help=\"true\" id=\"declarative-trowser\"&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/section&gt;\n                        &nbsp;&nbsp;&lt;footer&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"footer-right\"&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button class=\"ha-button ha-button-primary\"&gt;Primary Button&lt;/button&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=\"footer-center\"&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button class=\"ha-button ha-button-dark\"&gt;Secondary Button&lt;/button&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                        &nbsp;&nbsp;&lt;/footer&gt;\n                    &lt;/ha-trowser&gt;\n\n                    Deprecated Contract:\n\n                    &lt;ha-trowser titleText=\"Welcome to QuickBooks!\" infoText=\"optional header info\" history=\"true\" settings=\"true\" help=\"true\" id=\"declarative-trowser\"&gt;\n                        &nbsp;&nbsp;&lt;section&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;...\n                        &nbsp;&nbsp;&lt;/section&gt;\n                        &nbsp;&nbsp;&lt;footer&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;button class=\"ha-button ha-button-primary\" action=\"primary\"&gt;Primary Button&lt;/button&gt;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&lt;button class=\"ha-button ha-button-dark\" action=\"secondary\"&gt;Secondary Button&lt;/button&gt;\n                        &nbsp;&nbsp;&lt;/footer&gt;\n                    &lt;/ha-trowser&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <ha-trowser titleText=\"Welcome to QuickBooks!\" infoText=\"optional header info\" history=\"true\" settings=\"true\" help=\"true\" data-attach-point=\"zTrowser\">\n            <section>\n                <button class=\"ha-button\" data-attach-point=\"trowserShowZdrawerButton\">Show Drawer</button>\n                <button class=\"ha-button\" data-attach-point=\"trowserShowZmodalButton\">Show Modal</button>\n                <button class=\"ha-button\" data-attach-point=\"trowserShowZtrowserButton\">Show Trowser</button>\n                <ha-drawer-large data-attach-point=\"zDrawer\" backdrop=\"true\" titleText=\"Some Title\">\n                    <section>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                        <div><ha-text-field label=\"Lorem ipsum dolor sit amet\"></ha-text-field></div>\n                    </section>\n                    <footer>\n                        <button class=\"ha-button\" data-attach-point=\"drawerShowZmodalButton\">Show Modal</button>\n                        <ha-modal data-attach-point=\"zModal\" titleText=\"Payment confirmation\" size=\"large\" type=\"confirm\">\n                            <section>\n                                <p class=\"large-modal-content\">\n                                    <label>Payment Method:\n                                    </label>\n                                    <span>Manual</span>\n                                    <br>\n                                    <ha-text-field label=\"Payment Type\" required></ha-text-field>\n                                    <br>\n                                    <label>Liability Period:\n                                    </label>\n                                    <span>01/01/2013 to 03/31/2013</span>\n                                    <br>\n                                    <label>Due Date:\n                                    </label>\n                                    <span>04/31/2013</span>\n                                    <br>\n                                    <label>Payment Date:\n                                    </label>\n                                    <span>04/31/2013</span>\n                                    <br>\n                                    <label>Payment Amount:\n                                    </label>\n                                    <span>$177.70</span>\n                                </p>\n                                <h4>What's Next?</h4>\n                                <p>Print the payment coupon and follow the instructions on the form.</p>\n                            </section>\n                            <footer>\n                                <button class=\"ha-button\" data-attach-point=\"zModalSkipButton\">Skip for now</button>\n                                <button class=\"ha-button ha-button-primary\" data-attach-point=\"zModalPrintButton\">Print Payment Coupon</button>\n                            </footer>\n                        </ha-modal>\n                        <button class=\"ha-button ha-button-primary\" data-attach-point=\"zDrawerSaveButton\">Save</button>\n                    </footer>\n                </ha-drawer-large>\n            </section>\n            <footer>\n                <button class=\"ha-button ha-button-primary\" action=\"primary\">Primary Button</button>\n                <button class=\"ha-button ha-button-dark\" action=\"secondary\">Secondary Button</button>\n            </footer>\n        </ha-trowser>\n\n        ";
  if (stack1 = helpers.componentDemoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.componentDemoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n        <button class=\"ha-button show-element\" data-target-name=\"zTrowser\">z-index Test: Trowser</button>\n        <button class=\"ha-button show-element\" data-target-name=\"zDrawer\">z-index Test: Drawer</button>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    var node = document.createElement(\"ha-trowser\"),\n                    &nbsp;&nbsp;&nbsp;&nbsp;mainNode;\n\n                    node.titleText = \"Invoice\";\n                    node.infoText = \"optional header info\"\n\n                    // default false\n                    node.history = true;\n                    // default false\n                    node.settings = false;\n                    // default true\n                    node.help = true;\n                    // defaul true\n                    node.dismissible = true;\n\n                    // assume the following components are pre-created, make sure the `action` property is set\n                    node.footerItems = [buttonCancel, buttonLinks, buttonSave, comboButton];\n\n                    // your main node, append your content here;\n                    mainNode = document.createElement(\"div\");\n\n                    node.section = mainNode;\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"react\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    New Contract:\n\n                    &lt;HATrowser\n                        &nbsp;show={this.state.showTrowser}\n                        &nbsp;infoText=\"endflow\"\n                        &nbsp;titleText=\"I AM A TROWSER TITLE!!!!!\"\n                        &nbsp;settings={true}\n                        &nbsp;help={true}\n                        &nbsp;history={false}\n                        &nbsp;dismissible={true}\n                        &nbsp;autofocus={true}\n                        &nbsp;onShow={() => console.log('show was fired')}\n                        &nbsp;onClose={() => console.log('close was fired')}\n                        &nbsp;onDismiss={() => console.log('dismiss was fired')}&gt;\n                        &nbsp;&lt;HASection&gt;\n                            &nbsp;&nbsp;&lt;div>{this.state.sectionContent}&lt;/div&gt;\n                        &nbsp;&lt;/HASection&gt;\n                        &nbsp;&lt;HATrowserFooter&gt;\n                            &nbsp;&nbsp;&nbsp;&lt;span class=\"footer-right\"&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&lt;button\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className=\"ha-button ha-button-primary\"\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onClick={() => this._changeAsideContent()}>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;I don't do anything&lt;/button&gt;\n                            &nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                            &nbsp;&nbsp;&nbsp;&lt;span class=\"footer-center\"&gt;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&lt;button\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className=\"ha-button ha-button-primary\"\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onClick={() => this._changeContent()}>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set all content&lt;/button&gt;\n                            &nbsp;&nbsp;&nbsp;&lt;/span&gt;\n                        &nbsp;&lt;/HATrowserFooter&gt;\n                    &lt;/HATrowser&gt;\n\n                    Deprecated Contract:\n\n                    &lt;HATrowser\n                        &nbsp;show={this.state.showTrowser}\n                        &nbsp;infoText=\"endflow\"\n                        &nbsp;titleText=\"I AM A TROWSER TITLE!!!!!\"\n                        &nbsp;settings={true}\n                        &nbsp;help={true}\n                        &nbsp;history={false}\n                        &nbsp;dismissible={true}\n                        &nbsp;autofocus={true}\n                        &nbsp;onShow={() => console.log('show was fired')}\n                        &nbsp;onClose={() => console.log('close was fired')}\n                        &nbsp;onDismiss={() => console.log('dismiss was fired')}&gt;\n                        &nbsp;&lt;HASection&gt;\n                            &nbsp;&nbsp;&lt;div>{this.state.sectionContent}&lt;/div&gt;\n                        &nbsp;&lt;/HASection&gt;\n                        &nbsp;&lt;HATrowserFooter&gt;\n                            &nbsp;&nbsp;&lt;button\n                                &nbsp;&nbsp;&nbsp;&nbsp;className=\"ha-button ha-button-primary\"\n                                &nbsp;&nbsp;&nbsp;&nbsp;onClick={() => this._changeAsideContent()}\n                                &nbsp;&nbsp;&nbsp;&nbsp;action=\"primary\">I don't do anything&lt;/button&gt;\n                            &nbsp;&nbsp;&lt;button\n                                &nbsp;&nbsp;&nbsp;&nbsp;className=\"ha-button ha-button-primary\"\n                                &nbsp;&nbsp;&nbsp;&nbsp;onClick={() => this._changeContent()}\n                                &nbsp;&nbsp;&nbsp;&nbsp;action=\"tertiary\">set all content&lt;/button&gt;\n                        &nbsp;&lt;/HATrowserFooter&gt;\n                    &lt;/HATrowser&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"reactWay\">\n        </div>\n    </section>\n</div>\n";
  return buffer;
  });

this["JST"]["typography.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Typography\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n        </ha-segmented-button>\n    </div>\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div>\n            <i class=\"hi page large hi-accountant\"></i>\n            <i class=\"hi page small hi-accountant\"></i>\n            <i class=\"hi navigation hi-accountant\"></i><br>\n\n            <div><span class=\"ha-numeral xtra-large\" role=\"status\">Xtra Large Numerals</span></div>\n            <div><span class=\"ha-numeral large\">Large Numerals</span></div>\n            <div><span class=\"ha-numeral medium\">Medium Numerals</span></div>\n            <div><span class=\"ha-numeral\">Regular Numerals</span></div>\n            <h1>Header 1</h1>\n            <h2>Header 2</h2>\n            <h3>Header 3</h3>\n            <h4>Header 4</h4>\n            <p>Basic paragraph style - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ipsum erat, tristique a viverra vitae, varius sit amet nulla. Aenean ullamcorper rhoncus orci sed ornare. In a dolor molestie, consequat purus ac, maximus lectus. Phasellus a ultrices magna, nec vulputate nulla. Fusce sed laoreet nulla. Morbi vitae vehicula eros, in ultricies mi. Donec dignissim gravida tincidunt. Donec condimentum leo in ullamcorper ullamcorper. Ut rutrum libero ac rutrum volutpat. Morbi rhoncus cursus arcu.</p>\n            <p class=\"ghost-text\">Ghost text</p>\n            <p class=\"ha-numeral description\">Numeral descriptions</p>\n            <p><label>Form Field Labels</label></p>\n            <p>\n                <table>\n                    <tr>\n                        <th>Table Headings</th>\n                    </tr>\n                    <tr>\n                        <td>Table data</td>\n                    </tr>\n                </table>\n            </p>\n            <p class=\"small-label\">small labels for insight charts</p>\n            <p><small>Standard small text</small></p>\n            <br>\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n\n";
  });

this["JST"]["video-launcher.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Video Link Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">JavaScript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"video\">Video Player</button>\n        </ha-segmented-button>\n        <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/VideoLauncher.md\" target=\"_blank\">Design & API Document</a>\n        </div>\n    </div>\n\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;h3&gt;Horizontal Mini Link&lt;/h3&gt;\n                    &lt;ha-video-launcher url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;&lt;/ha-video-launcher&gt;\n                    &lt;h3&gt;Vertical Mini Link&lt;/h3&gt;\n                    &lt;ha-video-launcher orientation=&quot;vertical&quot; url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;&lt;/ha-video-launcher&gt;\n                    &lt;h3&gt;Giant Link&lt;/h3&gt;\n                    &lt;h4&gt;Without Description&lt;/h4&gt;\n                    &lt;ha-video-launcher size=&quot;giant&quot; url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;&lt;/ha-video-launcher&gt;\n                    &lt;h4&gt;With Description&lt;/h4&gt;\n                    &lt;ha-video-launcher description=&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n         sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;\n                    showDescription size=&quot;giant&quot; url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;&lt;/ha-video-launcher&gt;\n                    &lt;h3&gt;Grid of Links&lt;/h3&gt;\n                    &lt;ha-video-launcher size=&quot;large&quot; description=&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot; url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;&lt;/ha-video-launcher&gt;\n\n                    &lt;ha-video-launcher size=&quot;large&quot; useYoutubeDescription url=&quot;https://www.youtube.com/embed/lp3snRxFt6Q&quot;&gt;&lt;/ha-video-launcher&gt;\n\n                    &lt;ha-video-launcher size=&quot;large&quot; description=&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot; url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;&lt;/ha-video-launcher&gt;\n\n                    &lt;ha-video-launcher size=&quot;large&quot; description=&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot; url=&quot;https://www.youtube.com/embed/lp3snRxFt6Q&quot;&gt;&lt;/ha-video-launcher&gt;\n\n                    &lt;ha-video-launcher size=&quot;large&quot; description=&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot; url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;&lt;/ha-video-launcher&gt;\n\n                    &lt;ha-video-launcher size=&quot;large&quot; description=&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot; url=&quot;https://www.youtube.com/embed/lp3snRxFt6Q&quot;&gt;&lt;/ha-video-launcher&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"video-demos examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <h3>Horizontal Mini Link</h3>\n        <ha-video-launcher url=\"https://www.youtube.com/embed/48QBRQdyRmU\"></ha-video-launcher>\n        <h3>Vertical Mini Link</h3>\n        <ha-video-launcher orientation=\"vertical\" url=\"https://www.youtube.com/embed/48QBRQdyRmU\"></ha-video-launcher>\n        <h3>Giant Link</h3>\n        <h4>Without Description</h4>\n        <ha-video-launcher size=\"giant\" url=\"https://www.youtube.com/embed/48QBRQdyRmU\"></ha-video-launcher>\n        <h4>With Description</h4>\n        <ha-video-launcher description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n         sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\" showDescription size=\"giant\" url=\"https://www.youtube.com/embed/48QBRQdyRmU\"></ha-video-launcher>\n        <h3>Grid of Links</h3>\n        <ha-video-launcher size=\"large\" description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n         sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\" url=\"https://www.youtube.com/embed/48QBRQdyRmU\"></ha-video-launcher>\n\n        <ha-video-launcher size=\"large\" useYoutubeDescription url=\"https://www.youtube.com/embed/lp3snRxFt6Q\"></ha-video-launcher>\n\n        <ha-video-launcher size=\"large\" description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\" url=\"https://www.youtube.com/embed/48QBRQdyRmU\"></ha-video-launcher>\n\n        <ha-video-launcher size=\"large\" description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\" url=\"https://www.youtube.com/embed/lp3snRxFt6Q\"></ha-video-launcher>\n\n        <ha-video-launcher size=\"large\" description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\" url=\"https://www.youtube.com/embed/48QBRQdyRmU\"></ha-video-launcher>\n\n        <ha-video-launcher size=\"large\" description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\" url=\"https://www.youtube.com/embed/lp3snRxFt6Q\"></ha-video-launcher>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                var video = document.createElement('ha-video'),\n                    videoWithHistory = document.createElement('ha-video'),\n                    videoWithOverlay = document.createElement('ha-video'),\n                    overlayButton = document.createElement('ha-video-overlay-button'),\n                    videoButton = document.createElement('button'),\n                    historyVideoButton = document.createElement('button'),\n                    overlayVideoButton = document.createElement('button'),\n                    title = document.createElement('h3'),\n                    title2 = document.createElement('h3'),\n                    title3 = document.createElement('h3');\n\n                title.textContent = 'Basic video, opened with a button';\n                title2.textContent = 'Video with history';\n                title3.textContent = 'Video with overlay';\n\n\n                videoButton.classList.add('ha-button');\n                videoButton.classList.add('ha-button-primary');\n                videoButton.textContent = 'Click to view';\n                videoButton.onclick = function() {\n                    video.show();\n                };\n\n                historyVideoButton.classList.add('ha-button');\n                historyVideoButton.classList.add('ha-button-primary');\n                historyVideoButton.textContent = 'Click to view';\n                historyVideoButton.onclick = function() {\n                    videoWithHistory.show();\n                };\n\n                overlayVideoButton.classList.add('ha-button');\n                overlayVideoButton.classList.add('ha-button-primary');\n                overlayVideoButton.textContent = 'Click to view';\n                overlayVideoButton.onclick = function() {\n                    videoWithOverlay.show();\n                };\n\n                overlayButton.type = 'primary';\n                overlayButton.textContent = 'Button';\n                overlayButton.label = 'Call to action';\n\n                videoWithOverlay.url = \"https://www.youtube.com/embed/48QBRQdyRmU\";\n                videoWithOverlay.section = overlayButton;\n\n                video.url = \"https://www.youtube.com/embed/48QBRQdyRmU\";\n\n                videoWithHistory.url = \"https://www.youtube.com/embed/4by7kleQbmE\";\n                videoWithHistory.userId = videoWithOverlay.userId = 'harmony-gallery-test-user';\n                videoWithHistory.enableHistoryView = true;\n\n                placeToAppend.appendChild(title);\n                placeToAppend.appendChild(videoButton);\n                placeToAppend.appendChild(video);\n\n                placeToAppend.appendChild(title2);\n                placeToAppend.appendChild(historyVideoButton);\n                placeToAppend.appendChild(videoWithHistory);\n\n                placeToAppend.appendChild(title3);\n                placeToAppend.appendChild(overlayVideoButton);\n                placeToAppend.appendChild(videoWithOverlay);                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <h2>Video Player Component</h2>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["video.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        Video Player Component\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            <button class=\"segmented-nav\" value=\"html\" selected=\"true\">HTML</button>\n            <button class=\"segmented-nav\" value=\"js\">JavaScript</button>\n            <button class=\"segmented-nav\" value=\"dojo\">Dojo</button>\n            <button class=\"segmented-nav\" value=\"video-launcher\">Video Links</button>\n        </ha-segmented-button>\n        <div class = \"design-document\">\n        <a href=\"https://github.intuit.com/SBG/harmony-ui-components/blob/develop/docs/design/Video.md\" target=\"_blank\">Design & API Document</a>\n        </div>\n    </div>\n\n</section>\n\n<div class=\"panel\" id=\"html\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                    &lt;h3&gt;Basic video, opened with a button&lt;/h3&gt;\n                    &lt;button class=&quot;ha-button ha-button-primary&quot; onclick=&quot;document.querySelector('#basic-video-example').show()&quot;&gt;Click to view&lt;/button&gt;\n                    &lt;ha-video userId=&quot;harmony-gallery-test-user&quot; id=&quot;basic-video-example&quot; url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;&lt;/ha-video&gt;\n\n                    &lt;h3&gt;Video with history&lt;/h3&gt;\n                    &lt;button class=&quot;ha-button ha-button-primary&quot; onclick=&quot;document.querySelector('#history-video-example').show()&quot;&gt;Click to view&lt;/button&gt;\n                    &lt;ha-video enableHistoryView userId=&quot;harmony-gallery-test-user&quot; id=&quot;history-video-example&quot; url=&quot;https://www.youtube.com/embed/4by7kleQbmE&quot;&gt;&lt;/ha-video&gt;\n\n                    &lt;h3&gt;Video with overlay&lt;/h3&gt;\n                    &lt;button class=&quot;ha-button ha-button-primary&quot; onclick=&quot;document.querySelector('#basic-video-example').show()&quot;&gt;Click to view&lt;/button&gt;\n                    &lt;ha-video userId=&quot;harmony-gallery-test-user&quot overlayText=&quot;Call to action&quot; id=&quot;overlay-video-example&quot; url=&quot;https://www.youtube.com/embed/48QBRQdyRmU&quot;&gt;\n                        &lt;section&gt;\n                            &lt;button class=&quot;ha-button ha-button-primary&quot;&gt;Button&lt;/button&gt;\n                        &lt;/section&gt;\n                    &lt;/ha-video&gt;\n                </code>\n            </pre>\n        </div>\n    </section>\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <h3>Basic video, opened with a button</h3>\n        <button class=\"ha-button ha-button-primary\" onclick=\"document.querySelector('#basic-video-example').show()\">Click to view</button>\n        <ha-video userId=\"harmony-gallery-test-user\" id=\"basic-video-example\" url=\"https://www.youtube.com/embed/48QBRQdyRmU\"></ha-video>\n\n        <h3>Video with history</h3>\n        <button class=\"ha-button ha-button-primary\" onclick=\"document.querySelector('#history-video-example').show()\">Click to view</button>\n        <ha-video enableHistoryView userId=\"harmony-gallery-test-user\" id=\"history-video-example\" url=\"https://www.youtube.com/embed/4by7kleQbmE\"></ha-video>\n\n        <h3>Video with overlay</h3>\n        <button class=\"ha-button ha-button-primary\" onclick=\"document.querySelector('#overlay-video-example').show()\">Click to view</button>\n        <ha-video userId=\"harmony-gallery-test-user\" id=\"overlay-video-example\" url=\"https://www.youtube.com/embed/48QBRQdyRmU\">\n            <section>\n                <ha-video-overlay-button label=\"Call to action\" type=\"primary\">Button</ha-video-overlay-button>\n            </section>\n        </ha-video>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"js\">\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"language-html\" data-lang=\"html\">\n                var video = document.createElement('ha-video'),\n                    videoWithOverlay = document.createElement('ha-video'),\n                    overlayFragment = document.createDocumentFragment(),\n                    overlayDiv = document.createElement('div'),\n                    overlayButton = document.createElement('button'),\n                    videoButton = document.createElement('button'),\n                    overlayVideoButton = document.createElement('button'),\n                    title = document.createElement('h3'),\n                    title2 = document.createElement('h3');\n\n                title.textContent = 'Basic video, opened with a button';\n                title2.textContent = 'Video with overlay';\n\n                overlayButton.classList.add('ha-button');\n                overlayButton.classList.add('ha-button-primary');\n                overlayButton.textContent = 'Button';\n\n                videoButton.classList.add('ha-button');\n                videoButton.classList.add('ha-button-primary');\n                videoButton.textContent = 'Click to view';\n                videoButton.onclick = function() {\n                    video.show();\n                };\n\n                overlayVideoButton.classList.add('ha-button');\n                overlayVideoButton.classList.add('ha-button-primary');\n                overlayVideoButton.textContent = 'Click to view';\n                overlayVideoButton.onclick = function() {\n                    videoWithOverlay.show();\n                };\n\n                overlayDiv.textContent = 'Call to action';\n                overlayFragment.appendChild(overlayDiv);\n                overlayFragment.appendChild(overlayButton);\n\n                videoWithOverlay.url = \"https://www.youtube.com/embed/lp3snRxFt6Q\";\n                video.url = \"https://www.youtube.com/embed/48QBRQdyRmU\";\n                video.userId = videoWithOverlay.userId = 'harmony-gallery-test-user';\n                videoWithOverlay.overlayContent = overlayFragment;\n\n                placeToAppend.appendChild(title);\n                placeToAppend.appendChild(videoButton);\n                placeToAppend.appendChild(video);\n\n                placeToAppend.appendChild(title2);\n                placeToAppend.appendChild(overlayVideoButton);\n                placeToAppend.appendChild(videoWithOverlay);\n                </code>\n            </pre>\n        </div>\n    </section>\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <h2>Video Player Component</h2>\n        <div id=\"programmaticWay\">\n        </div>\n    </section>\n</div>\n\n<div class=\"panel hidden\" id=\"dojo\">\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"dojoProgrammaticWay\">\n        </div>\n    </section>\n</div>\n";
  });

this["JST"]["template.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n            <button class=\"segmented-nav\" value=\"";
  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.id); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">";
  if (stack1 = helpers.label) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.label); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "</button>\n            ";
  return buffer;
  }
function program2(depth0,data) {
  
  
  return "selected";
  }

function program4(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n<div class=\"panel ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" id=\"";
  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.id); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "\">\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.usage), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n    <section class=\"examples\">\n        <header class=\"title\"><a>Examples</a></header>\n        <div id=\"";
  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.id); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "-example\">";
  if (stack1 = helpers.demoTemplate) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.demoTemplate); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</div>\n    </section>\n</div>\n";
  return buffer;
  }
function program5(depth0,data) {
  
  
  return "hidden";
  }

function program7(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    <section class=\"usage\">\n        <header class=\"title\"><a>Usage</a></header>\n\n        <div class=\"highlight\">\n            <pre>\n                <code class=\"html\" data-lang=\"html\">\n                    ";
  if (stack1 = helpers.usage) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.usage); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                </code>\n            </pre>\n        </div>\n    </section>\n    ";
  return buffer;
  }

  buffer += "<section class=\"post box clearfix\">\n    <h1 class=\"entry-title\">\n        ";
  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.title); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "\n    </h1>\n    <div class=\"meta\">\n        <ha-segmented-button class=\"usage-tab-buttons\">\n            ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.examples), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </ha-segmented-button>\n    </div>\n   <div class=\"design-document\">\n        <a href=\"";
  if (stack1 = helpers.docUrl) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = (depth0 && depth0.docUrl); stack1 = typeof stack1 === functionType ? stack1.call(depth0, {hash:{},data:data}) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\">Design & API Document</a>\n    </div>\n</section>\n\n";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.examples), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

return this["JST"];

});